%!PS-Adobe-2.0
%%DocumentFonts: Courier Times-Bold
%%Title: <stdin> (mpage)
%%Creator: mpage 2.5.6 Januari 2008
%%CreationDate: Tue Apr  9 12:33:16 2013
%%Orientation: Landscape
%%DocumentMedia: letter 612 792
%%BoundingBox: 18 50 594 742
%%Pages: (atend)
%%EndComments

%%BeginProlog

/mp_stm usertime def
/mp_pgc statusdict begin pagecount end def
statusdict begin /jobname (<stdin>) def end
/reencsmalldict 12 dict def /ReEncodeSmall { reencsmalldict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq { exch dup length array copy newfont 3 1 roll put } { exch newfont 3 1 roll put }
ifelse }
  { pop pop }
  ifelse } forall
newfont /FontName newfontname put
newcodesandnames aload pop newcodesandnames length 2 idiv
{ newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/charvec [
026 /Scaron
027 /Ydieresis
028 /Zcaron
029 /scaron
030 /trademark
031 /zcaron
032 /space
033 /exclam
034 /quotedbl
035 /numbersign
036 /dollar
037 /percent
038 /ampersand
039 /quoteright
040 /parenleft
041 /parenright
042 /asterisk
043 /plus
044 /comma
045 /minus
046 /period
047 /slash
048 /zero
049 /one
050 /two
051 /three
052 /four
053 /five
054 /six
055 /seven
056 /eight
057 /nine
058 /colon
059 /semicolon
060 /less
061 /equal
062 /greater
063 /question
064 /at
065 /A
066 /B
067 /C
068 /D
069 /E
070 /F
071 /G
072 /H
073 /I
074 /J
075 /K
076 /L
077 /M
078 /N
079 /O
080 /P
081 /Q
082 /R
083 /S
084 /T
085 /U
086 /V
087 /W
088 /X
089 /Y
090 /Z
091 /bracketleft
092 /backslash
093 /bracketright
094 /asciicircum
095 /underscore
096 /quoteleft
097 /a
098 /b
099 /c
100 /d
101 /e
102 /f
103 /g
104 /h
105 /i
106 /j
107 /k
108 /l
109 /m
110 /n
111 /o
112 /p
113 /q
114 /r
115 /s
116 /t
117 /u
118 /v
119 /w
120 /x
121 /y
122 /z
123 /braceleft
124 /bar
125 /braceright
126 /asciitilde
127 /.notdef
128 /fraction
129 /florin
130 /quotesingle
131 /quotedblleft
132 /guilsinglleft
133 /guilsinglright
134 /fi
135 /fl
136 /endash
137 /dagger
138 /daggerdbl
139 /bullet
140 /quotesinglbase
141 /quotedblbase
142 /quotedblright
143 /ellipsis
144 /dotlessi
145 /grave
146 /acute
147 /circumflex
148 /tilde
149 /oe
150 /breve
151 /dotaccent
152 /perthousand
153 /emdash
154 /ring
155 /Lslash
156 /OE
157 /hungarumlaut
158 /ogonek
159 /caron
160 /lslash
161 /exclamdown
162 /cent
163 /sterling
164 /currency
165 /yen
166 /brokenbar
167 /section
168 /dieresis
169 /copyright
170 /ordfeminine
171 /guillemotleft
172 /logicalnot
173 /hyphen
174 /registered
175 /macron
176 /degree
177 /plusminus
178 /twosuperior
179 /threesuperior
180 /acute
181 /mu
182 /paragraph
183 /periodcentered
184 /cedilla
185 /onesuperior
186 /ordmasculine
187 /guillemotright
188 /onequarter
189 /onehalf
190 /threequarters
191 /questiondown
192 /Agrave
193 /Aacute
194 /Acircumflex
195 /Atilde
196 /Adieresis
197 /Aring
198 /AE
199 /Ccedilla
200 /Egrave
201 /Eacute
202 /Ecircumflex
203 /Edieresis
204 /Igrave
205 /Iacute
206 /Icircumflex
207 /Idieresis
208 /Eth
209 /Ntilde
210 /Ograve
211 /Oacute
212 /Ocircumflex
213 /Otilde
214 /Odieresis
215 /multiply
216 /Oslash
217 /Ugrave
218 /Uacute
219 /Ucircumflex
220 /Udieresis
221 /Yacute
222 /Thorn
223 /germandbls
224 /agrave
225 /aacute
226 /acircumflex
227 /atilde
228 /adieresis
229 /aring
230 /ae
231 /ccedilla
232 /egrave
233 /eacute
234 /ecircumflex
235 /edieresis
236 /igrave
237 /iacute
238 /icircumflex
239 /idieresis
240 /eth
241 /ntilde
242 /ograve
243 /oacute
244 /ocircumflex
245 /otilde
246 /odieresis
247 /divide
248 /oslash
249 /ugrave
250 /uacute
251 /ucircumflex
252 /udieresis
253 /yacute
254 /thorn
255 /ydieresis
] def
/Courier /OurCharSet charvec ReEncodeSmall
/textfont /OurCharSet findfont 11 scalefont def
/textfontbold /OurCharSet-Bold findfont 11 scalefont def
/fnamefont /Times-Bold findfont 14 scalefont def
/headerfont /Times-Bold findfont 12 scalefont def
textfont setfont
(a) stringwidth pop /mp_a_x exch def
%%EndProlog
%%Page: 1 1
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  README  Page 1) show
0 648 moveto (xv6 is a re-implementation of Dennis Ritchie's and Ken Thompson's Unix) show
0 636 moveto (Version 6 \(v6\).  xv6 loosely follows the structure and style of v6,) show
0 624 moveto (but is implemented for a modern x86-based multiprocessor using ANSI C.) show
0 600 moveto (ACKNOWLEDGMENTS) show
0 576 moveto (xv6 is inspired by John Lions's Commentary on UNIX 6th Edition \(Peer) show
0 564 moveto (to Peer Communications; ISBN: 1-57398-013-7; 1st edition \(June 14,) show
0 552 moveto (2000\)\). See also http://pdos.csail.mit.edu/6.828/2012/v6.html, which) show
0 540 moveto (provides pointers to on-line resources for v6.) show
0 516 moveto (xv6 borrows code from the following sources:) show
4 mp_a_x mul 504 moveto (JOS \(asm.h, elf.h, mmu.h, bootasm.S, ide.c, console.c, and others\)) show
4 mp_a_x mul 492 moveto (Plan 9 \(entryother.S, mp.h, mp.c, lapic.c\)) show
4 mp_a_x mul 480 moveto (FreeBSD \(ioapic.c\)) show
4 mp_a_x mul 468 moveto (NetBSD \(console.c\)) show
0 444 moveto (The following people have made contributions:) show
4 mp_a_x mul 432 moveto (Russ Cox \(context switching, locking\)) show
4 mp_a_x mul 420 moveto (Cliff Frey \(MP\)) show
4 mp_a_x mul 408 moveto (Xiao Yu \(MP\)) show
4 mp_a_x mul 396 moveto (Nickolai Zeldovich) show
4 mp_a_x mul 384 moveto (Austin Clements) show
0 360 moveto (In addition, we are grateful for the patches contributed by Greg) show
0 348 moveto (Price, Yandong Mao, and Hitoshi Mitake.) show
0 324 moveto (The code in the files that constitute xv6 is) show
0 312 moveto (Copyright 2006-2012 Frans Kaashoek, Robert Morris, and Russ Cox.) show
0 288 moveto (ERROR REPORTS) show
0 264 moveto (If you spot errors or have suggestions for improvement, please send) show
0 252 moveto (email to Frans Kaashoek and Robert Morris \(kaashoek,rtm@csail.mit.edu\). ) show
0 228 moveto (BUILDING AND RUNNING XV6) show
0 204 moveto (To build xv6 on an x86 ELF machine \(like Linux or FreeBSD\), run "make".) show
0 192 moveto (On non-x86 or non-ELF machines \(like OS X, even on x86\), you will) show
0 180 moveto (need to install a cross-compiler gcc suite capable of producing x86 ELF) show
0 168 moveto (binaries.  See http://pdos.csail.mit.edu/6.828/2012/tools.html.) show
0 156 moveto (Then run "make TOOLPREFIX=i386-jos-elf-".) show
0 132 moveto (To run xv6, you can use the Bochs or QEMU PC simulators. Bochs makes) show
0 120 moveto (debugging easier, but QEMU is much faster. To run in Bochs, run "make) show
0 108 moveto (bochs" and then type "c" at the bochs prompt. To run in QEMU, run) show
0 96 moveto ("make qemu".) show
0 72 moveto (To create a typeset version of the code, run "make xv6.pdf".  This) show
0 60 moveto (requires the "mpage" utility.  See http://www.mesa.nl/pub/mpage/.) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  table of contents  Page 1) show
0 648 moveto (The numbers to the left of the file names in the table are sheet numbers.) show
0 636 moveto (The source code has been printed in a double column format with fifty) show
0 624 moveto (lines per column, giving one hundred lines per sheet \(or page\).) show
0 612 moveto (Thus there is a convenient relationship between line numbers and sheet numbers.) show
0 576 moveto (# basic headers) show
24 mp_a_x mul 576 moveto (# system calls) show
48 mp_a_x mul 576 moveto (# string operations) show
0 564 moveto (01 types.h) show
24 mp_a_x mul 564 moveto (29 traps.h) show
48 mp_a_x mul 564 moveto (61 string.c) show
0 552 moveto (01 param.h) show
24 mp_a_x mul 552 moveto (29 vectors.pl) show
0 540 moveto (02 memlayout.h) show
24 mp_a_x mul 540 moveto (30 trapasm.S) show
48 mp_a_x mul 540 moveto (# low-level hardware) show
0 528 moveto (02 defs.h) show
24 mp_a_x mul 528 moveto (30 trap.c) show
48 mp_a_x mul 528 moveto (63 mp.h) show
0 516 moveto (04 x86.h) show
24 mp_a_x mul 516 moveto (32 syscall.h) show
48 mp_a_x mul 516 moveto (64 mp.c) show
0 504 moveto (06 asm.h) show
24 mp_a_x mul 504 moveto (32 syscall.c) show
48 mp_a_x mul 504 moveto (66 lapic.c) show
0 492 moveto (07 mmu.h) show
24 mp_a_x mul 492 moveto (34 sysproc.c) show
48 mp_a_x mul 492 moveto (68 ioapic.c) show
0 480 moveto (09 elf.h) show
48 mp_a_x mul 480 moveto (69 picirq.c) show
24 mp_a_x mul 468 moveto (# file system) show
48 mp_a_x mul 468 moveto (70 kbd.h) show
0 456 moveto (# entering xv6) show
24 mp_a_x mul 456 moveto (35 buf.h) show
48 mp_a_x mul 456 moveto (71 kbd.c) show
0 444 moveto (10 entry.S) show
24 mp_a_x mul 444 moveto (35 fcntl.h) show
48 mp_a_x mul 444 moveto (72 console.c) show
0 432 moveto (11 entryother.S) show
24 mp_a_x mul 432 moveto (36 stat.h) show
48 mp_a_x mul 432 moveto (75 timer.c) show
0 420 moveto (12 main.c) show
24 mp_a_x mul 420 moveto (36 fs.h) show
48 mp_a_x mul 420 moveto (76 uart.c) show
24 mp_a_x mul 408 moveto (37 file.h) show
0 396 moveto (# locks) show
24 mp_a_x mul 396 moveto (38 ide.c) show
48 mp_a_x mul 396 moveto (# user-level) show
0 384 moveto (14 spinlock.h) show
24 mp_a_x mul 384 moveto (40 bio.c) show
48 mp_a_x mul 384 moveto (77 initcode.S) show
0 372 moveto (14 spinlock.c) show
24 mp_a_x mul 372 moveto (41 log.c) show
48 mp_a_x mul 372 moveto (77 usys.S) show
24 mp_a_x mul 360 moveto (44 fs.c) show
48 mp_a_x mul 360 moveto (78 init.c) show
0 348 moveto (# processes) show
24 mp_a_x mul 348 moveto (52 file.c) show
48 mp_a_x mul 348 moveto (78 sh.c) show
0 336 moveto (16 vm.c) show
24 mp_a_x mul 336 moveto (54 sysfile.c) show
0 324 moveto (20 proc.h) show
24 mp_a_x mul 324 moveto (59 exec.c) show
48 mp_a_x mul 324 moveto (# bootloader) show
0 312 moveto (21 proc.c) show
48 mp_a_x mul 312 moveto (84 bootasm.S) show
0 300 moveto (27 swtch.S) show
24 mp_a_x mul 300 moveto (# pipes) show
48 mp_a_x mul 300 moveto (85 bootmain.c) show
0 288 moveto (27 kalloc.c) show
24 mp_a_x mul 288 moveto (60 pipe.c) show
0 240 moveto (The source listing is preceded by a cross-reference that lists every defined ) show
0 228 moveto (constant, struct, global variable, and function in xv6.  Each entry gives,) show
0 216 moveto (on the same line as the name, the line number \(or, in a few cases, numbers\)) show
0 204 moveto (where the name is defined.  Successive lines in an entry list the line) show
0 192 moveto (numbers where the name is used.  For example, this entry:) show
4 mp_a_x mul 168 moveto (swtch 2658) show
8 mp_a_x mul 156 moveto (0374 2428 2466 2657 2658) show
0 132 moveto (indicates that swtch is defined on line 2658 and is mentioned on five lines) show
0 120 moveto (on sheets 03, 24, and 26.) show
grestore
restore
showpage
%%Page: 2 2
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  cross-references  Page 1) show
0 648 moveto (acquire 1474) show
40 mp_a_x mul 648 moveto (3978 4088 4118 4345) show
4 mp_a_x mul 636 moveto (0377 1474 1478 2210 2373) show
36 mp_a_x mul 636 moveto (begin_trans 4277) show
4 mp_a_x mul 624 moveto (2408 2467 2524 2568 2583) show
40 mp_a_x mul 624 moveto (0333 4277 5283 5374 5523) show
4 mp_a_x mul 612 moveto (2616 2629 2826 2843 3116) show
40 mp_a_x mul 612 moveto (5613 5711 5756 5774) show
4 mp_a_x mul 600 moveto (3472 3492 3907 3965 4070) show
36 mp_a_x mul 600 moveto (bfree 4481) show
4 mp_a_x mul 588 moveto (4130 4279 4310 4658 4691) show
40 mp_a_x mul 588 moveto (4481 4864 4874 4877) show
4 mp_a_x mul 576 moveto (4711 4740 4758 4768 5229) show
36 mp_a_x mul 576 moveto (bget 4066) show
4 mp_a_x mul 564 moveto (5254 5268 6063 6084 6105) show
40 mp_a_x mul 564 moveto (4066 4096 4106) show
4 mp_a_x mul 552 moveto (7260 7416 7458 7506) show
36 mp_a_x mul 552 moveto (binit 4038) show
0 540 moveto (allocproc 2205) show
40 mp_a_x mul 540 moveto (0261 1231 4038) show
4 mp_a_x mul 528 moveto (2205 2257 2310) show
36 mp_a_x mul 528 moveto (bmap 4810) show
0 516 moveto (allocuvm 1853) show
40 mp_a_x mul 516 moveto (4810 4836 4919 4969) show
4 mp_a_x mul 504 moveto (0422 1853 1867 2287 5943) show
36 mp_a_x mul 504 moveto (bootmain 8517) show
4 mp_a_x mul 492 moveto (5953) show
40 mp_a_x mul 492 moveto (8468 8517) show
0 480 moveto (alltraps 3004) show
36 mp_a_x mul 480 moveto (BPB 3692) show
4 mp_a_x mul 468 moveto (2959 2967 2980 2985 3003) show
40 mp_a_x mul 468 moveto (3692 3695 4462 4464 4489) show
4 mp_a_x mul 456 moveto (3004) show
36 mp_a_x mul 456 moveto (bread 4102) show
0 444 moveto (ALT 7010) show
40 mp_a_x mul 444 moveto (0262 4102 4226 4227 4239) show
4 mp_a_x mul 432 moveto (7010 7038 7040) show
40 mp_a_x mul 432 moveto (4256 4339 4431 4442 4463) show
0 420 moveto (argfd 5419) show
40 mp_a_x mul 420 moveto (4488 4613 4634 4718 4826) show
4 mp_a_x mul 408 moveto (5419 5456 5471 5483 5494) show
40 mp_a_x mul 408 moveto (4870 4919 4969) show
4 mp_a_x mul 396 moveto (5506) show
36 mp_a_x mul 396 moveto (brelse 4125) show
0 384 moveto (argint 3295) show
40 mp_a_x mul 384 moveto (0263 4125 4128 4230 4231) show
4 mp_a_x mul 372 moveto (0395 3295 3308 3324 3432) show
40 mp_a_x mul 372 moveto (4246 4264 4342 4433 4445) show
4 mp_a_x mul 360 moveto (3456 3470 5424 5471 5483) show
40 mp_a_x mul 360 moveto (4469 4474 4495 4619 4622) show
4 mp_a_x mul 348 moveto (5708 5776 5777 5826) show
40 mp_a_x mul 348 moveto (4643 4726 4832 4876 4922) show
0 336 moveto (argptr 3304) show
40 mp_a_x mul 336 moveto (4973) show
4 mp_a_x mul 324 moveto (0396 3304 5471 5483 5506) show
36 mp_a_x mul 324 moveto (BSIZE 3661) show
4 mp_a_x mul 312 moveto (5857) show
40 mp_a_x mul 312 moveto (3661 3672 3686 3692 4207) show
0 300 moveto (argstr 3321) show
40 mp_a_x mul 300 moveto (4228 4340 4443 4919 4920) show
4 mp_a_x mul 288 moveto (0397 3321 5518 5608 5708) show
40 mp_a_x mul 288 moveto (4921 4965 4969 4970 4971) show
4 mp_a_x mul 276 moveto (5757 5775 5806 5826) show
36 mp_a_x mul 276 moveto (buf 3500) show
0 264 moveto (__attribute__ 1310) show
40 mp_a_x mul 264 moveto (0250 0262 0263 0264 0306) show
4 mp_a_x mul 252 moveto (0270 0365 1209 1310) show
40 mp_a_x mul 252 moveto (0332 2020 2023 2032 2034) show
0 240 moveto (BACK 7861) show
40 mp_a_x mul 240 moveto (3500 3504 3505 3506 3811) show
4 mp_a_x mul 228 moveto (7861 7974 8120 8389) show
40 mp_a_x mul 228 moveto (3826 3829 3875 3904 3954) show
0 216 moveto (backcmd 7896 8114) show
40 mp_a_x mul 216 moveto (3956 3959 4026 4030 4034) show
4 mp_a_x mul 204 moveto (7896 7909 7975 8114 8116) show
40 mp_a_x mul 204 moveto (4040 4053 4065 4068 4101) show
4 mp_a_x mul 192 moveto (8242 8355 8390) show
40 mp_a_x mul 192 moveto (4104 4114 4125 4155 4226) show
0 180 moveto (BACKSPACE 7350) show
40 mp_a_x mul 180 moveto (4227 4239 4240 4246 4256) show
4 mp_a_x mul 168 moveto (7350 7367 7394 7426 7432) show
40 mp_a_x mul 168 moveto (4257 4263 4264 4325 4339) show
0 156 moveto (balloc 4454) show
40 mp_a_x mul 156 moveto (4418 4429 4440 4457 4483) show
4 mp_a_x mul 144 moveto (4454 4476 4817 4825 4829) show
40 mp_a_x mul 144 moveto (4606 4631 4705 4813 4859) show
0 132 moveto (BBLOCK 3695) show
40 mp_a_x mul 132 moveto (4905 4955 7229 7240 7244) show
4 mp_a_x mul 120 moveto (3695 4463 4488) show
40 mp_a_x mul 120 moveto (7247 7403 7424 7438 7468) show
0 108 moveto (B_BUSY 3509) show
40 mp_a_x mul 108 moveto (7501 7508 7984 7987 7988) show
4 mp_a_x mul 96 moveto (3509 3958 4076 4077 4088) show
40 mp_a_x mul 96 moveto (7989 8003 8015 8016 8019) show
4 mp_a_x mul 84 moveto (4091 4116 4127 4139) show
40 mp_a_x mul 84 moveto (8020 8021 8025) show
0 72 moveto (B_DIRTY 3511) show
36 mp_a_x mul 72 moveto (B_VALID 3510) show
4 mp_a_x mul 60 moveto (3511 3887 3916 3921 3960) show
40 mp_a_x mul 60 moveto (3510 3920 3960 3978 4107) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  cross-references  Page 2) show
0 648 moveto (bwrite 4114) show
36 mp_a_x mul 648 moveto (CONSOLE 3787) show
4 mp_a_x mul 636 moveto (0264 4114 4117 4229 4263) show
40 mp_a_x mul 636 moveto (3787 7521 7522) show
4 mp_a_x mul 624 moveto (4341) show
36 mp_a_x mul 624 moveto (consoleinit 7516) show
0 612 moveto (bzero 4438) show
40 mp_a_x mul 612 moveto (0267 1227 7516) show
4 mp_a_x mul 600 moveto (4438 4470) show
36 mp_a_x mul 600 moveto (consoleintr 7412) show
0 588 moveto (C 7031 7409) show
40 mp_a_x mul 588 moveto (0269 7198 7412 7675) show
4 mp_a_x mul 576 moveto (7031 7079 7104 7105 7106) show
36 mp_a_x mul 576 moveto (consoleread 7451) show
4 mp_a_x mul 564 moveto (7107 7108 7110 7409 7419) show
40 mp_a_x mul 564 moveto (7451 7522) show
4 mp_a_x mul 552 moveto (7422 7429 7440 7469) show
36 mp_a_x mul 552 moveto (consolewrite 7501) show
0 540 moveto (CAPSLOCK 7012) show
40 mp_a_x mul 540 moveto (7501 7521) show
4 mp_a_x mul 528 moveto (7012 7045 7186) show
36 mp_a_x mul 528 moveto (consputc 7386) show
0 516 moveto (cgaputc 7355) show
40 mp_a_x mul 516 moveto (7216 7247 7268 7286 7289) show
4 mp_a_x mul 504 moveto (7355 7398) show
40 mp_a_x mul 504 moveto (7293 7294 7386 7426 7432) show
0 492 moveto (clearpteu 1929) show
40 mp_a_x mul 492 moveto (7439 7508) show
4 mp_a_x mul 480 moveto (0431 1929 1935 5955) show
36 mp_a_x mul 480 moveto (context 2093) show
0 468 moveto (cli 0557) show
40 mp_a_x mul 468 moveto (0251 0374 2056 2093 2111) show
4 mp_a_x mul 456 moveto (0557 0559 1126 1560 7310) show
40 mp_a_x mul 456 moveto (2238 2239 2240 2241 2478) show
4 mp_a_x mul 444 moveto (7389 8412) show
40 mp_a_x mul 444 moveto (2516 2678) show
0 432 moveto (cmd 7865) show
36 mp_a_x mul 432 moveto (copyout 2018) show
4 mp_a_x mul 420 moveto (7865 7877 7886 7887 7892) show
40 mp_a_x mul 420 moveto (0430 2018 5963 5974) show
4 mp_a_x mul 408 moveto (7893 7898 7902 7906 7915) show
36 mp_a_x mul 408 moveto (copyuvm 1953) show
4 mp_a_x mul 396 moveto (7918 7923 7931 7937 7941) show
40 mp_a_x mul 396 moveto (0427 1953 1964 1966 2314) show
4 mp_a_x mul 384 moveto (7951 7975 7977 8052 8055) show
36 mp_a_x mul 384 moveto (cprintf 7252) show
4 mp_a_x mul 372 moveto (8057 8058 8059 8060 8063) show
40 mp_a_x mul 372 moveto (0268 1224 1264 1867 2676) show
4 mp_a_x mul 360 moveto (8064 8066 8068 8069 8070) show
40 mp_a_x mul 360 moveto (2680 2682 3140 3153 3158) show
4 mp_a_x mul 348 moveto (8071 8072 8073 8074 8075) show
40 mp_a_x mul 348 moveto (3383 6519 6539 6711 6862) show
4 mp_a_x mul 336 moveto (8076 8079 8080 8082 8084) show
40 mp_a_x mul 336 moveto (7252 7312 7313 7314 7317) show
4 mp_a_x mul 324 moveto (8085 8086 8087 8088 8089) show
36 mp_a_x mul 324 moveto (cpu 2054) show
4 mp_a_x mul 312 moveto (8100 8101 8103 8105 8106) show
40 mp_a_x mul 312 moveto (0309 1224 1264 1266 1278) show
4 mp_a_x mul 300 moveto (8107 8108 8109 8110 8113) show
40 mp_a_x mul 300 moveto (1406 1466 1487 1508 1546) show
4 mp_a_x mul 288 moveto (8114 8116 8118 8119 8120) show
40 mp_a_x mul 288 moveto (1561 1562 1570 1572 1618) show
4 mp_a_x mul 276 moveto (8121 8122 8212 8213 8214) show
40 mp_a_x mul 276 moveto (1631 1637 1776 1777 1778) show
4 mp_a_x mul 264 moveto (8215 8217 8221 8224 8230) show
40 mp_a_x mul 264 moveto (1779 2054 2064 2068 2079) show
4 mp_a_x mul 252 moveto (8231 8234 8237 8239 8242) show
40 mp_a_x mul 252 moveto (2478 2509 2515 2516 2517) show
4 mp_a_x mul 240 moveto (8246 8248 8250 8253 8255) show
40 mp_a_x mul 240 moveto (3115 3140 3141 3153 3154) show
4 mp_a_x mul 228 moveto (8258 8260 8263 8264 8275) show
40 mp_a_x mul 228 moveto (3158 3160 6413 6414 6711) show
4 mp_a_x mul 216 moveto (8278 8281 8285 8300 8303) show
40 mp_a_x mul 216 moveto (7312) show
4 mp_a_x mul 204 moveto (8308 8312 8313 8316 8321) show
36 mp_a_x mul 204 moveto (cpunum 6701) show
4 mp_a_x mul 192 moveto (8322 8328 8337 8338 8344) show
40 mp_a_x mul 192 moveto (0323 1288 1624 6701 6873) show
4 mp_a_x mul 180 moveto (8345 8351 8352 8361 8364) show
40 mp_a_x mul 180 moveto (6882) show
4 mp_a_x mul 168 moveto (8366 8372 8373 8378 8384) show
36 mp_a_x mul 168 moveto (CR0_PE 0727) show
4 mp_a_x mul 156 moveto (8390 8391 8394) show
40 mp_a_x mul 156 moveto (0727 1135 1171 8443) show
0 144 moveto (COM1 7613) show
36 mp_a_x mul 144 moveto (CR0_PG 0737) show
4 mp_a_x mul 132 moveto (7613 7623 7626 7627 7628) show
40 mp_a_x mul 132 moveto (0737 1050 1171) show
4 mp_a_x mul 120 moveto (7629 7630 7631 7634 7640) show
36 mp_a_x mul 120 moveto (CR0_WP 0733) show
4 mp_a_x mul 108 moveto (7641 7657 7659 7667 7669) show
40 mp_a_x mul 108 moveto (0733 1050 1171) show
0 96 moveto (commit_trans 4301) show
36 mp_a_x mul 96 moveto (CR4_PSE 0739) show
4 mp_a_x mul 84 moveto (0334 4301 5285 5379 5528) show
40 mp_a_x mul 84 moveto (0739 1043 1164) show
4 mp_a_x mul 72 moveto (5546 5555 5645 5652 5713) show
36 mp_a_x mul 72 moveto (create 5657) show
4 mp_a_x mul 60 moveto (5758 5762 5779 5783) show
40 mp_a_x mul 60 moveto (5657 5677 5690 5694 5712) show
grestore
restore
showpage
%%Page: 3 3
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  cross-references  Page 3) show
4 mp_a_x mul 648 moveto (5757 5778) show
40 mp_a_x mul 648 moveto (0273 5842 5910 7768 7829) show
0 636 moveto (CRTPORT 7351) show
40 mp_a_x mul 636 moveto (7830 7926 7927) show
4 mp_a_x mul 624 moveto (7351 7360 7361 7362 7363) show
36 mp_a_x mul 624 moveto (EXEC 7857) show
4 mp_a_x mul 612 moveto (7378 7379 7380 7381) show
40 mp_a_x mul 612 moveto (7857 7922 8059 8365) show
0 600 moveto (CTL 7009) show
36 mp_a_x mul 600 moveto (execcmd 7869 8053) show
4 mp_a_x mul 588 moveto (7009 7035 7039 7185) show
40 mp_a_x mul 588 moveto (7869 7910 7923 8053 8055) show
0 576 moveto (deallocuvm 1882) show
40 mp_a_x mul 576 moveto (8321 8327 8328 8356 8366) show
4 mp_a_x mul 564 moveto (0423 1868 1882 1916 2290) show
36 mp_a_x mul 564 moveto (exit 2354) show
0 552 moveto (DEVSPACE 0204) show
40 mp_a_x mul 552 moveto (0359 2354 2390 3105 3109) show
4 mp_a_x mul 540 moveto (0204 1732 1745) show
40 mp_a_x mul 540 moveto (3169 3178 3417 7716 7719) show
0 528 moveto (devsw 3780) show
40 mp_a_x mul 528 moveto (7761 7826 7831 7916 7925) show
4 mp_a_x mul 516 moveto (3780 3785 4908 4910 4958) show
40 mp_a_x mul 516 moveto (7935 7980 8028 8035) show
4 mp_a_x mul 504 moveto (4960 5211 7521 7522) show
36 mp_a_x mul 504 moveto (EXTMEM 0202) show
0 492 moveto (dinode 3676) show
40 mp_a_x mul 492 moveto (0202 0208 1729) show
4 mp_a_x mul 480 moveto (3676 3686 4607 4614 4632) show
36 mp_a_x mul 480 moveto (fdalloc 5438) show
4 mp_a_x mul 468 moveto (4635 4706 4719) show
40 mp_a_x mul 468 moveto (5438 5458 5726 5862) show
0 456 moveto (dirent 3700) show
36 mp_a_x mul 456 moveto (fetchint 3267) show
4 mp_a_x mul 444 moveto (3700 5014 5055 5564 5604) show
40 mp_a_x mul 444 moveto (0398 3267 3297 5833) show
0 432 moveto (dirlink 5052) show
36 mp_a_x mul 432 moveto (fetchstr 3279) show
4 mp_a_x mul 420 moveto (0286 5021 5052 5067 5075) show
40 mp_a_x mul 420 moveto (0399 3279 3326 5839) show
4 mp_a_x mul 408 moveto (5539 5689 5693 5694) show
36 mp_a_x mul 408 moveto (file 3750) show
0 396 moveto (dirlookup 5011) show
40 mp_a_x mul 396 moveto (0252 0276 0277 0278 0280) show
4 mp_a_x mul 384 moveto (0287 5011 5017 5059 5174) show
40 mp_a_x mul 384 moveto (0281 0282 0351 2114 3750) show
4 mp_a_x mul 372 moveto (5621 5667) show
40 mp_a_x mul 372 moveto (4420 5208 5214 5224 5227) show
0 360 moveto (DIRSIZ 3698) show
40 mp_a_x mul 360 moveto (5230 5251 5252 5264 5266) show
4 mp_a_x mul 348 moveto (3698 3702 5005 5072 5128) show
40 mp_a_x mul 348 moveto (5302 5315 5352 5413 5419) show
4 mp_a_x mul 336 moveto (5129 5191 5515 5605 5661) show
40 mp_a_x mul 336 moveto (5422 5438 5453 5467 5479) show
0 324 moveto (DPL_USER 0779) show
40 mp_a_x mul 324 moveto (5492 5503 5705 5854 6006) show
4 mp_a_x mul 312 moveto (0779 1627 1628 2264 2265) show
40 mp_a_x mul 312 moveto (6021 7210 7608 7878 7933) show
4 mp_a_x mul 300 moveto (3073 3168 3177) show
40 mp_a_x mul 300 moveto (7934 8064 8072 8272) show
0 288 moveto (E0ESC 7016) show
36 mp_a_x mul 288 moveto (filealloc 5225) show
4 mp_a_x mul 276 moveto (7016 7170 7174 7175 7177) show
40 mp_a_x mul 276 moveto (0276 5225 5726 6027) show
4 mp_a_x mul 264 moveto (7180) show
36 mp_a_x mul 264 moveto (fileclose 5264) show
0 252 moveto (elfhdr 0955) show
40 mp_a_x mul 252 moveto (0277 2365 5264 5270 5497) show
4 mp_a_x mul 240 moveto (0955 5915 8519 8524) show
40 mp_a_x mul 240 moveto (5728 5865 5866 6054 6056) show
0 228 moveto (ELF_MAGIC 0952) show
36 mp_a_x mul 228 moveto (filedup 5252) show
4 mp_a_x mul 216 moveto (0952 5928 8530) show
40 mp_a_x mul 216 moveto (0278 2329 5252 5256 5460) show
0 204 moveto (ELF_PROG_LOAD 0986) show
36 mp_a_x mul 204 moveto (fileinit 5218) show
4 mp_a_x mul 192 moveto (0986 5939) show
40 mp_a_x mul 192 moveto (0279 1232 5218) show
0 180 moveto (entry 1040) show
36 mp_a_x mul 180 moveto (fileread 5315) show
4 mp_a_x mul 168 moveto (0961 1036 1039 1040 2952) show
40 mp_a_x mul 168 moveto (0280 5315 5330 5473) show
4 mp_a_x mul 156 moveto (2953 5987 6321 8521 8545) show
36 mp_a_x mul 156 moveto (filestat 5302) show
4 mp_a_x mul 144 moveto (8546) show
40 mp_a_x mul 144 moveto (0281 5302 5508) show
0 132 moveto (EOI 6614) show
36 mp_a_x mul 132 moveto (filewrite 5352) show
4 mp_a_x mul 120 moveto (6614 6684 6725) show
40 mp_a_x mul 120 moveto (0282 5352 5384 5389 5485) show
0 108 moveto (ERROR 6635) show
36 mp_a_x mul 108 moveto (FL_IF 0710) show
4 mp_a_x mul 96 moveto (6635 6677) show
40 mp_a_x mul 96 moveto (0710 1562 1568 2268 2513) show
0 84 moveto (ESR 6617) show
40 mp_a_x mul 84 moveto (6708) show
4 mp_a_x mul 72 moveto (6617 6680 6681) show
36 mp_a_x mul 72 moveto (fork 2304) show
0 60 moveto (exec 5910) show
40 mp_a_x mul 60 moveto (0360 2304 3411 7760 7823) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  cross-references  Page 4) show
4 mp_a_x mul 648 moveto (7825 8043 8045) show
36 mp_a_x mul 648 moveto (IDE_ERR 3816) show
0 636 moveto (fork1 8039) show
40 mp_a_x mul 636 moveto (3816 3839) show
4 mp_a_x mul 624 moveto (7900 7942 7954 7961 7976) show
36 mp_a_x mul 624 moveto (ideinit 3851) show
4 mp_a_x mul 612 moveto (8024 8039) show
40 mp_a_x mul 612 moveto (0304 1234 3851) show
0 600 moveto (forkret 2533) show
36 mp_a_x mul 600 moveto (ideintr 3902) show
4 mp_a_x mul 588 moveto (2167 2241 2533) show
40 mp_a_x mul 588 moveto (0305 3124 3902) show
0 576 moveto (freerange 2801) show
36 mp_a_x mul 576 moveto (idelock 3825) show
4 mp_a_x mul 564 moveto (2761 2784 2790 2801) show
40 mp_a_x mul 564 moveto (3825 3855 3907 3909 3928) show
0 552 moveto (freevm 1910) show
40 mp_a_x mul 552 moveto (3965 3979 3982) show
4 mp_a_x mul 540 moveto (0424 1910 1915 1977 2421) show
36 mp_a_x mul 540 moveto (iderw 3954) show
4 mp_a_x mul 528 moveto (5990 5995) show
40 mp_a_x mul 528 moveto (0306 3954 3959 3961 3963) show
0 516 moveto (gatedesc 0901) show
40 mp_a_x mul 516 moveto (4108 4119) show
4 mp_a_x mul 504 moveto (0523 0526 0901 3061) show
36 mp_a_x mul 504 moveto (idestart 3875) show
0 492 moveto (getcallerpcs 1526) show
40 mp_a_x mul 492 moveto (3829 3875 3878 3926 3975) show
4 mp_a_x mul 480 moveto (0378 1488 1526 2678 7315) show
36 mp_a_x mul 480 moveto (idewait 3833) show
0 468 moveto (getcmd 7984) show
40 mp_a_x mul 468 moveto (3833 3858 3880 3916) show
4 mp_a_x mul 456 moveto (7984 8015) show
36 mp_a_x mul 456 moveto (idtinit 3079) show
0 444 moveto (gettoken 8156) show
40 mp_a_x mul 444 moveto (0406 1265 3079) show
4 mp_a_x mul 432 moveto (8156 8241 8245 8257 8270) show
36 mp_a_x mul 432 moveto (idup 4689) show
4 mp_a_x mul 420 moveto (8271 8307 8311 8333) show
40 mp_a_x mul 420 moveto (0289 2330 4689 5161) show
0 408 moveto (growproc 2281) show
36 mp_a_x mul 408 moveto (iget 4654) show
4 mp_a_x mul 396 moveto (0361 2281 3459) show
40 mp_a_x mul 396 moveto (4573 4620 4654 4674 5029) show
0 384 moveto (havedisk1 3828) show
40 mp_a_x mul 384 moveto (5159) show
4 mp_a_x mul 372 moveto (3828 3864 3962) show
36 mp_a_x mul 372 moveto (iinit 4568) show
0 360 moveto (holding 1544) show
40 mp_a_x mul 360 moveto (0290 1233 4568) show
4 mp_a_x mul 348 moveto (0379 1477 1504 1544 2507) show
36 mp_a_x mul 348 moveto (ilock 4703) show
0 336 moveto (ialloc 4603) show
40 mp_a_x mul 336 moveto (0291 4703 4709 4729 5164) show
4 mp_a_x mul 324 moveto (0288 4603 4624 5676 5677) show
40 mp_a_x mul 324 moveto (5305 5324 5375 5525 5538) show
0 312 moveto (IBLOCK 3689) show
40 mp_a_x mul 312 moveto (5551 5615 5623 5665 5669) show
4 mp_a_x mul 300 moveto (3689 4613 4634 4718) show
40 mp_a_x mul 300 moveto (5679 5719 5808 5922 7463) show
0 288 moveto (I_BUSY 3775) show
40 mp_a_x mul 288 moveto (7483 7510) show
4 mp_a_x mul 276 moveto (3775 4712 4714 4737 4741) show
36 mp_a_x mul 276 moveto (inb 0453) show
4 mp_a_x mul 264 moveto (4761 4763) show
40 mp_a_x mul 264 moveto (0453 3837 3863 6554 7164) show
0 252 moveto (ICRHI 6628) show
40 mp_a_x mul 252 moveto (7167 7361 7363 7634 7640) show
4 mp_a_x mul 240 moveto (6628 6687 6756 6768) show
40 mp_a_x mul 240 moveto (7641 7657 7667 7669 8423) show
0 228 moveto (ICRLO 6618) show
40 mp_a_x mul 228 moveto (8431 8554) show
4 mp_a_x mul 216 moveto (6618 6688 6689 6757 6759) show
36 mp_a_x mul 216 moveto (initlock 1462) show
4 mp_a_x mul 204 moveto (6769) show
40 mp_a_x mul 204 moveto (0380 1462 2175 2782 3075) show
0 192 moveto (ID 6611) show
40 mp_a_x mul 192 moveto (3855 4042 4211 4570 5220) show
4 mp_a_x mul 180 moveto (6611 6647 6716) show
40 mp_a_x mul 180 moveto (6035 7518 7519) show
0 168 moveto (IDE_BSY 3813) show
36 mp_a_x mul 168 moveto (initlog 4205) show
4 mp_a_x mul 156 moveto (3813 3837) show
40 mp_a_x mul 156 moveto (0331 2544 4205 4208) show
0 144 moveto (IDE_CMD_READ 3818) show
36 mp_a_x mul 144 moveto (inituvm 1803) show
4 mp_a_x mul 132 moveto (3818 3891) show
40 mp_a_x mul 132 moveto (0425 1803 1808 2261) show
0 120 moveto (IDE_CMD_WRITE 3819) show
36 mp_a_x mul 120 moveto (inode 3762) show
4 mp_a_x mul 108 moveto (3819 3888) show
40 mp_a_x mul 108 moveto (0253 0286 0287 0288 0289) show
0 96 moveto (IDE_DF 3815) show
40 mp_a_x mul 96 moveto (0291 0292 0293 0294 0295) show
4 mp_a_x mul 84 moveto (3815 3839) show
40 mp_a_x mul 84 moveto (0297 0298 0299 0300 0301) show
0 72 moveto (IDE_DRDY 3814) show
40 mp_a_x mul 72 moveto (0426 1818 2115 3756 3762) show
4 mp_a_x mul 60 moveto (3814 3837) show
40 mp_a_x mul 60 moveto (3781 3782 4423 4564 4573) show
grestore
restore
showpage
%%Page: 4 4
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  cross-references  Page 5) show
4 mp_a_x mul 648 moveto (4602 4629 4653 4656 4662) show
40 mp_a_x mul 648 moveto (2933 3134 7642 7643) show
4 mp_a_x mul 636 moveto (4688 4689 4703 4735 4756) show
36 mp_a_x mul 636 moveto (IRQ_ERROR 2935) show
4 mp_a_x mul 624 moveto (4778 4810 4856 4887 4902) show
40 mp_a_x mul 624 moveto (2935 6677) show
4 mp_a_x mul 612 moveto (4952 5010 5011 5052 5056) show
36 mp_a_x mul 612 moveto (IRQ_IDE 2934) show
4 mp_a_x mul 600 moveto (5153 5156 5188 5195 5516) show
40 mp_a_x mul 600 moveto (2934 3123 3127 3856 3857) show
4 mp_a_x mul 588 moveto (5561 5603 5656 5660 5706) show
36 mp_a_x mul 588 moveto (IRQ_KBD 2932) show
4 mp_a_x mul 576 moveto (5754 5769 5804 5916 7451) show
40 mp_a_x mul 576 moveto (2932 3130 7525 7526) show
4 mp_a_x mul 564 moveto (7501) show
36 mp_a_x mul 564 moveto (IRQ_SLAVE 6910) show
0 552 moveto (INPUT_BUF 7400) show
40 mp_a_x mul 552 moveto (6910 6914 6952 6967) show
4 mp_a_x mul 540 moveto (7400 7403 7424 7436 7438) show
36 mp_a_x mul 540 moveto (IRQ_SPURIOUS 2936) show
4 mp_a_x mul 528 moveto (7440 7468) show
40 mp_a_x mul 528 moveto (2936 3139 6657) show
0 516 moveto (insl 0462) show
36 mp_a_x mul 516 moveto (IRQ_TIMER 2931) show
4 mp_a_x mul 504 moveto (0462 0464 3917 8573) show
40 mp_a_x mul 504 moveto (2931 3114 3173 6664 7580) show
0 492 moveto (install_trans 4221) show
36 mp_a_x mul 492 moveto (isdirempty 5561) show
4 mp_a_x mul 480 moveto (4221 4271 4305) show
40 mp_a_x mul 480 moveto (5561 5568 5627) show
0 468 moveto (INT_DISABLED 6819) show
36 mp_a_x mul 468 moveto (ismp 6415) show
4 mp_a_x mul 456 moveto (6819 6867) show
40 mp_a_x mul 456 moveto (0337 1235 6415 6512 6520) show
0 444 moveto (ioapic 6827) show
40 mp_a_x mul 444 moveto (6540 6543 6855 6875) show
4 mp_a_x mul 432 moveto (6507 6529 6530 6824 6827) show
36 mp_a_x mul 432 moveto (itrunc 4856) show
4 mp_a_x mul 420 moveto (6836 6837 6843 6844 6858) show
40 mp_a_x mul 420 moveto (4423 4765 4856) show
0 408 moveto (IOAPIC 6808) show
36 mp_a_x mul 408 moveto (iunlock 4735) show
4 mp_a_x mul 396 moveto (6808 6858) show
40 mp_a_x mul 396 moveto (0293 4735 4738 4780 5171) show
0 384 moveto (ioapicenable 6873) show
40 mp_a_x mul 384 moveto (5307 5327 5378 5534 5732) show
4 mp_a_x mul 372 moveto (0309 3857 6873 7526 7643) show
40 mp_a_x mul 372 moveto (5813 7456 7505) show
0 360 moveto (ioapicid 6417) show
36 mp_a_x mul 360 moveto (iunlockput 4778) show
4 mp_a_x mul 348 moveto (0310 6417 6530 6547 6861) show
40 mp_a_x mul 348 moveto (0294 4778 5166 5175 5178) show
4 mp_a_x mul 336 moveto (6862) show
40 mp_a_x mul 336 moveto (5527 5540 5543 5554 5628) show
0 324 moveto (ioapicinit 6851) show
40 mp_a_x mul 324 moveto (5639 5643 5651 5668 5672) show
4 mp_a_x mul 312 moveto (0311 1226 6851 6862) show
40 mp_a_x mul 312 moveto (5696 5721 5729 5761 5782) show
0 300 moveto (ioapicread 6834) show
40 mp_a_x mul 300 moveto (5810 5948 5997) show
4 mp_a_x mul 288 moveto (6834 6859 6860) show
36 mp_a_x mul 288 moveto (iupdate 4629) show
0 276 moveto (ioapicwrite 6841) show
40 mp_a_x mul 276 moveto (0295 4629 4767 4882 4978) show
4 mp_a_x mul 264 moveto (6841 6867 6868 6881 6882) show
40 mp_a_x mul 264 moveto (5533 5553 5637 5642 5683) show
0 252 moveto (IO_PIC1 6907) show
40 mp_a_x mul 252 moveto (5687) show
4 mp_a_x mul 240 moveto (6907 6920 6935 6944 6947) show
36 mp_a_x mul 240 moveto (I_VALID 3776) show
4 mp_a_x mul 228 moveto (6952 6962 6976 6977) show
40 mp_a_x mul 228 moveto (3776 4717 4727 4759) show
0 216 moveto (IO_PIC2 6908) show
36 mp_a_x mul 216 moveto (kalloc 2838) show
4 mp_a_x mul 204 moveto (6908 6921 6936 6965 6966) show
40 mp_a_x mul 204 moveto (0314 1294 1663 1742 1809) show
4 mp_a_x mul 192 moveto (6967 6970 6979 6980) show
40 mp_a_x mul 192 moveto (1865 1968 2223 2838 6029) show
0 180 moveto (IO_RTC 6735) show
36 mp_a_x mul 180 moveto (KBDATAP 7004) show
4 mp_a_x mul 168 moveto (6735 6748 6749) show
40 mp_a_x mul 168 moveto (7004 7167) show
0 156 moveto (IO_TIMER1 7559) show
36 mp_a_x mul 156 moveto (kbdgetc 7156) show
4 mp_a_x mul 144 moveto (7559 7568 7578 7579) show
40 mp_a_x mul 144 moveto (7156 7198) show
0 132 moveto (IPB 3686) show
36 mp_a_x mul 132 moveto (kbdintr 7196) show
4 mp_a_x mul 120 moveto (3686 3689 3695 4614 4635) show
40 mp_a_x mul 120 moveto (0320 3131 7196) show
4 mp_a_x mul 108 moveto (4719) show
36 mp_a_x mul 108 moveto (KBS_DIB 7003) show
0 96 moveto (iput 4756) show
40 mp_a_x mul 96 moveto (7003 7165) show
4 mp_a_x mul 84 moveto (0292 2370 4756 4762 4781) show
36 mp_a_x mul 84 moveto (KBSTATP 7002) show
4 mp_a_x mul 72 moveto (5060 5182 5284 5544 5814) show
40 mp_a_x mul 72 moveto (7002 7164) show
0 60 moveto (IRQ_COM1 2933) show
36 mp_a_x mul 60 moveto (KERNBASE 0207) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  cross-references  Page 6) show
4 mp_a_x mul 648 moveto (0207 0208 0212 0213 0217) show
40 mp_a_x mul 648 moveto (6681 6684 6687 6688 6693) show
4 mp_a_x mul 636 moveto (0218 0220 0221 1315 1533) show
40 mp_a_x mul 636 moveto (6725 6756 6757 6759 6768) show
4 mp_a_x mul 624 moveto (1729 1858 1916) show
40 mp_a_x mul 624 moveto (6769) show
0 612 moveto (KERNLINK 0208) show
36 mp_a_x mul 612 moveto (lcr3 0590) show
4 mp_a_x mul 600 moveto (0208 1730) show
40 mp_a_x mul 600 moveto (0590 1768 1783) show
0 588 moveto (KEY_DEL 7028) show
36 mp_a_x mul 588 moveto (lgdt 0512) show
4 mp_a_x mul 576 moveto (7028 7069 7091 7115) show
40 mp_a_x mul 576 moveto (0512 0520 1133 1633 8441) show
0 564 moveto (KEY_DN 7022) show
36 mp_a_x mul 564 moveto (lidt 0526) show
4 mp_a_x mul 552 moveto (7022 7065 7087 7111) show
40 mp_a_x mul 552 moveto (0526 0534 3081) show
0 540 moveto (KEY_END 7020) show
36 mp_a_x mul 540 moveto (LINT0 6633) show
4 mp_a_x mul 528 moveto (7020 7068 7090 7114) show
40 mp_a_x mul 528 moveto (6633 6668) show
0 516 moveto (KEY_HOME 7019) show
36 mp_a_x mul 516 moveto (LINT1 6634) show
4 mp_a_x mul 504 moveto (7019 7068 7090 7114) show
40 mp_a_x mul 504 moveto (6634 6669) show
0 492 moveto (KEY_INS 7027) show
36 mp_a_x mul 492 moveto (LIST 7860) show
4 mp_a_x mul 480 moveto (7027 7069 7091 7115) show
40 mp_a_x mul 480 moveto (7860 7940 8107 8383) show
0 468 moveto (KEY_LF 7023) show
36 mp_a_x mul 468 moveto (listcmd 7890 8101) show
4 mp_a_x mul 456 moveto (7023 7067 7089 7113) show
40 mp_a_x mul 456 moveto (7890 7911 7941 8101 8103) show
0 444 moveto (KEY_PGDN 7026) show
40 mp_a_x mul 444 moveto (8246 8357 8384) show
4 mp_a_x mul 432 moveto (7026 7066 7088 7112) show
36 mp_a_x mul 432 moveto (loadgs 0551) show
0 420 moveto (KEY_PGUP 7025) show
40 mp_a_x mul 420 moveto (0551 1634) show
4 mp_a_x mul 408 moveto (7025 7066 7088 7112) show
36 mp_a_x mul 408 moveto (loaduvm 1818) show
0 396 moveto (KEY_RT 7024) show
40 mp_a_x mul 396 moveto (0426 1818 1824 1827 5945) show
4 mp_a_x mul 384 moveto (7024 7067 7089 7113) show
36 mp_a_x mul 384 moveto (log 4190 4200) show
0 372 moveto (KEY_UP 7021) show
40 mp_a_x mul 372 moveto (4190 4200 4211 4213 4214) show
4 mp_a_x mul 360 moveto (7021 7065 7087 7111) show
40 mp_a_x mul 360 moveto (4215 4225 4226 4227 4239) show
0 348 moveto (kfree 2815) show
40 mp_a_x mul 348 moveto (4242 4243 4244 4256 4259) show
4 mp_a_x mul 336 moveto (0315 1898 1900 1920 1923) show
40 mp_a_x mul 336 moveto (4260 4261 4272 4279 4280) show
4 mp_a_x mul 324 moveto (2315 2419 2806 2815 2820) show
40 mp_a_x mul 324 moveto (4281 4283 4284 4303 4306) show
4 mp_a_x mul 312 moveto (6052 6073) show
40 mp_a_x mul 312 moveto (4310 4311 4312 4313 4329) show
0 300 moveto (kill 2625) show
40 mp_a_x mul 300 moveto (4331 4334 4335 4338 4339) show
4 mp_a_x mul 288 moveto (0362 2625 3159 3434 7767) show
40 mp_a_x mul 288 moveto (4343 4344) show
0 276 moveto (kinit1 2780) show
36 mp_a_x mul 276 moveto (logheader 4185) show
4 mp_a_x mul 264 moveto (0316 1219 2780) show
40 mp_a_x mul 264 moveto (4185 4196 4207 4208 4240) show
0 252 moveto (kinit2 2788) show
40 mp_a_x mul 252 moveto (4257) show
4 mp_a_x mul 240 moveto (0317 1238 2788) show
36 mp_a_x mul 240 moveto (LOGSIZE 0160) show
0 228 moveto (KSTACKSIZE 0151) show
40 mp_a_x mul 228 moveto (0160 4187 4329 5367) show
4 mp_a_x mul 216 moveto (0151 1054 1063 1295 1779) show
36 mp_a_x mul 216 moveto (log_write 4325) show
4 mp_a_x mul 204 moveto (2227) show
40 mp_a_x mul 204 moveto (0332 4325 4444 4468 4494) show
0 192 moveto (kvmalloc 1757) show
40 mp_a_x mul 192 moveto (4618 4642 4830 4972) show
4 mp_a_x mul 180 moveto (0418 1220 1757) show
36 mp_a_x mul 180 moveto (ltr 0538) show
0 168 moveto (lapiceoi 6722) show
40 mp_a_x mul 168 moveto (0538 0540 1780) show
4 mp_a_x mul 156 moveto (0325 3121 3125 3132 3136) show
36 mp_a_x mul 156 moveto (mappages 1679) show
4 mp_a_x mul 144 moveto (3142 6722) show
40 mp_a_x mul 144 moveto (1679 1748 1811 1872 1971) show
0 132 moveto (lapicinit 6651) show
36 mp_a_x mul 132 moveto (MAXARG 0159) show
4 mp_a_x mul 120 moveto (0326 1222 1256 6651) show
40 mp_a_x mul 120 moveto (0159 5822 5914 5960) show
0 108 moveto (lapicstartap 6740) show
36 mp_a_x mul 108 moveto (MAXARGS 7863) show
4 mp_a_x mul 96 moveto (0327 1299 6740) show
40 mp_a_x mul 96 moveto (7863 7871 7872 8340) show
0 84 moveto (lapicw 6644) show
36 mp_a_x mul 84 moveto (MAXFILE 3673) show
4 mp_a_x mul 72 moveto (6644 6657 6663 6664 6665) show
40 mp_a_x mul 72 moveto (3673 4965) show
4 mp_a_x mul 60 moveto (6668 6669 6674 6677 6680) show
36 mp_a_x mul 60 moveto (memcmp 6165) show
grestore
restore
showpage
%%Page: 5 5
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  cross-references  Page 7) show
4 mp_a_x mul 648 moveto (0386 6165 6445 6488) show
40 mp_a_x mul 648 moveto (6438 6464 6468 6471) show
0 636 moveto (memmove 6181) show
36 mp_a_x mul 636 moveto (multiboot_header 1025) show
4 mp_a_x mul 624 moveto (0387 1285 1812 1970 2032) show
40 mp_a_x mul 624 moveto (1024 1025) show
4 mp_a_x mul 612 moveto (4228 4340 4432 4641 4725) show
36 mp_a_x mul 612 moveto (namecmp 5003) show
4 mp_a_x mul 600 moveto (4921 4971 5129 5131 6181) show
40 mp_a_x mul 600 moveto (0296 5003 5024 5618) show
4 mp_a_x mul 588 moveto (6204 7373) show
36 mp_a_x mul 588 moveto (namei 5189) show
0 576 moveto (memset 6154) show
40 mp_a_x mul 576 moveto (0297 2273 5189 5520 5717) show
4 mp_a_x mul 564 moveto (0388 1666 1744 1810 1871) show
40 mp_a_x mul 564 moveto (5806 5920) show
4 mp_a_x mul 552 moveto (2240 2263 2823 4443 4616) show
36 mp_a_x mul 552 moveto (nameiparent 5196) show
4 mp_a_x mul 540 moveto (5632 5829 6154 7375 7987) show
40 mp_a_x mul 540 moveto (0298 5154 5169 5181 5196) show
4 mp_a_x mul 528 moveto (8058 8069 8085 8106 8119) show
40 mp_a_x mul 528 moveto (5536 5610 5663) show
0 516 moveto (microdelay 6731) show
36 mp_a_x mul 516 moveto (namex 5154) show
4 mp_a_x mul 504 moveto (0328 6731 6758 6760 6770) show
40 mp_a_x mul 504 moveto (5154 5192 5198) show
4 mp_a_x mul 492 moveto (7658) show
36 mp_a_x mul 492 moveto (NBUF 0155) show
0 480 moveto (min 4422) show
40 mp_a_x mul 480 moveto (0155 4030 4053) show
4 mp_a_x mul 468 moveto (4422 4920 4970) show
36 mp_a_x mul 468 moveto (ncpu 6416) show
0 456 moveto (mp 6302) show
40 mp_a_x mul 456 moveto (1224 1287 2069 3857 6416) show
4 mp_a_x mul 444 moveto (6302 6408 6437 6444 6445) show
40 mp_a_x mul 444 moveto (6518 6519 6523 6524 6525) show
4 mp_a_x mul 432 moveto (6446 6455 6460 6464 6465) show
40 mp_a_x mul 432 moveto (6545) show
4 mp_a_x mul 420 moveto (6468 6469 6480 6483 6485) show
36 mp_a_x mul 420 moveto (NCPU 0152) show
4 mp_a_x mul 408 moveto (6487 6494 6504 6510 6550) show
40 mp_a_x mul 408 moveto (0152 2068 6413) show
0 396 moveto (mpbcpu 6420) show
36 mp_a_x mul 396 moveto (NDEV 0157) show
4 mp_a_x mul 384 moveto (0338 6420) show
40 mp_a_x mul 384 moveto (0157 4908 4958 5211) show
0 372 moveto (MPBUS 6352) show
36 mp_a_x mul 372 moveto (NDIRECT 3671) show
4 mp_a_x mul 360 moveto (6352 6533) show
40 mp_a_x mul 360 moveto (3671 3673 3682 3773 4815) show
0 348 moveto (mpconf 6313) show
40 mp_a_x mul 348 moveto (4820 4824 4825 4862 4869) show
4 mp_a_x mul 336 moveto (6313 6479 6482 6487 6505) show
40 mp_a_x mul 336 moveto (4870 4877 4878) show
0 324 moveto (mpconfig 6480) show
36 mp_a_x mul 324 moveto (NELEM 0434) show
4 mp_a_x mul 312 moveto (6480 6510) show
40 mp_a_x mul 312 moveto (0434 1747 2672 3380 5831) show
0 300 moveto (mpenter 1252) show
36 mp_a_x mul 300 moveto (nextpid 2166) show
4 mp_a_x mul 288 moveto (1252 1296) show
40 mp_a_x mul 288 moveto (2166 2219) show
0 276 moveto (mpinit 6501) show
36 mp_a_x mul 276 moveto (NFILE 0154) show
4 mp_a_x mul 264 moveto (0339 1221 6501 6519 6539) show
40 mp_a_x mul 264 moveto (0154 5214 5230) show
0 252 moveto (mpioapic 6339) show
36 mp_a_x mul 252 moveto (NINDIRECT 3672) show
4 mp_a_x mul 240 moveto (6339 6507 6529 6531) show
40 mp_a_x mul 240 moveto (3672 3673 4822 4872) show
0 228 moveto (MPIOAPIC 6353) show
36 mp_a_x mul 228 moveto (NINODE 0156) show
4 mp_a_x mul 216 moveto (6353 6528) show
40 mp_a_x mul 216 moveto (0156 4564 4662) show
0 204 moveto (MPIOINTR 6354) show
36 mp_a_x mul 204 moveto (NO 7006) show
4 mp_a_x mul 192 moveto (6354 6534) show
40 mp_a_x mul 192 moveto (7006 7052 7055 7057 7058) show
0 180 moveto (MPLINTR 6355) show
40 mp_a_x mul 180 moveto (7059 7060 7062 7074 7077) show
4 mp_a_x mul 168 moveto (6355 6535) show
40 mp_a_x mul 168 moveto (7079 7080 7081 7082 7084) show
0 156 moveto (mpmain 1262) show
40 mp_a_x mul 156 moveto (7102 7103 7105 7106 7107) show
4 mp_a_x mul 144 moveto (1209 1241 1257 1262) show
40 mp_a_x mul 144 moveto (7108) show
0 132 moveto (mpproc 6328) show
36 mp_a_x mul 132 moveto (NOFILE 0153) show
4 mp_a_x mul 120 moveto (6328 6506 6517 6526) show
40 mp_a_x mul 120 moveto (0153 2114 2327 2363 5426) show
0 108 moveto (MPPROC 6351) show
40 mp_a_x mul 108 moveto (5442) show
4 mp_a_x mul 96 moveto (6351 6516) show
36 mp_a_x mul 96 moveto (NPDENTRIES 0821) show
0 84 moveto (mpsearch 6456) show
40 mp_a_x mul 84 moveto (0821 1311 1917) show
4 mp_a_x mul 72 moveto (6456 6485) show
36 mp_a_x mul 72 moveto (NPROC 0150) show
0 60 moveto (mpsearch1 6438) show
40 mp_a_x mul 60 moveto (0150 2161 2211 2379 2412) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  cross-references  Page 8) show
4 mp_a_x mul 648 moveto (2468 2607 2630 2669) show
40 mp_a_x mul 648 moveto (5568 5626 5634 5677 5690) show
0 636 moveto (NPTENTRIES 0822) show
40 mp_a_x mul 636 moveto (5694 7263 7305 7312 7901) show
4 mp_a_x mul 624 moveto (0822 1894) show
40 mp_a_x mul 624 moveto (7920 7953 8032 8045 8228) show
0 612 moveto (NSEGS 2051) show
40 mp_a_x mul 612 moveto (8272 8306 8310 8336 8341) show
4 mp_a_x mul 600 moveto (1611 2051 2058) show
36 mp_a_x mul 600 moveto (panicked 7218) show
0 588 moveto (nulterminate 8352) show
40 mp_a_x mul 588 moveto (7218 7318 7388) show
4 mp_a_x mul 576 moveto (8215 8230 8352 8373 8379) show
36 mp_a_x mul 576 moveto (parseblock 8301) show
4 mp_a_x mul 564 moveto (8380 8385 8386 8391) show
40 mp_a_x mul 564 moveto (8301 8306 8325) show
0 552 moveto (NUMLOCK 7013) show
36 mp_a_x mul 552 moveto (parsecmd 8218) show
4 mp_a_x mul 540 moveto (7013 7046) show
40 mp_a_x mul 540 moveto (7902 8025 8218) show
0 528 moveto (O_CREATE 3553) show
36 mp_a_x mul 528 moveto (parseexec 8317) show
4 mp_a_x mul 516 moveto (3553 5710 8278 8281) show
40 mp_a_x mul 516 moveto (8214 8255 8317) show
0 504 moveto (O_RDONLY 3550) show
36 mp_a_x mul 504 moveto (parseline 8235) show
4 mp_a_x mul 492 moveto (3550 5720 8275) show
40 mp_a_x mul 492 moveto (8212 8224 8235 8246 8308) show
0 480 moveto (O_RDWR 3552) show
36 mp_a_x mul 480 moveto (parsepipe 8251) show
4 mp_a_x mul 468 moveto (3552 5738 7814 7816 8007) show
40 mp_a_x mul 468 moveto (8213 8239 8251 8258) show
0 456 moveto (outb 0471) show
36 mp_a_x mul 456 moveto (parseredirs 8264) show
4 mp_a_x mul 444 moveto (0471 3861 3870 3881 3882) show
40 mp_a_x mul 444 moveto (8264 8312 8331 8342) show
4 mp_a_x mul 432 moveto (3883 3884 3885 3886 3888) show
36 mp_a_x mul 432 moveto (PCINT 6632) show
4 mp_a_x mul 420 moveto (3891 6553 6554 6748 6749) show
40 mp_a_x mul 420 moveto (6632 6674) show
4 mp_a_x mul 408 moveto (6920 6921 6935 6936 6944) show
36 mp_a_x mul 408 moveto (pde_t 0103) show
4 mp_a_x mul 396 moveto (6947 6952 6962 6965 6966) show
40 mp_a_x mul 396 moveto (0103 0420 0421 0422 0423) show
4 mp_a_x mul 384 moveto (6967 6970 6976 6977 6979) show
40 mp_a_x mul 384 moveto (0424 0425 0426 0427 0430) show
4 mp_a_x mul 372 moveto (6980 7360 7362 7378 7379) show
40 mp_a_x mul 372 moveto (0431 1210 1270 1311 1610) show
4 mp_a_x mul 360 moveto (7380 7381 7577 7578 7579) show
40 mp_a_x mul 360 moveto (1654 1656 1679 1736 1739) show
4 mp_a_x mul 348 moveto (7623 7626 7627 7628 7629) show
40 mp_a_x mul 348 moveto (1742 1803 1818 1853 1882) show
4 mp_a_x mul 336 moveto (7630 7631 7659 8428 8436) show
40 mp_a_x mul 336 moveto (1910 1929 1952 1953 1955) show
4 mp_a_x mul 324 moveto (8564 8565 8566 8567 8568) show
40 mp_a_x mul 324 moveto (2002 2018 2105 5918) show
4 mp_a_x mul 312 moveto (8569) show
36 mp_a_x mul 312 moveto (PDX 0812) show
0 300 moveto (outsl 0483) show
40 mp_a_x mul 300 moveto (0812 1659) show
4 mp_a_x mul 288 moveto (0483 0485 3889) show
36 mp_a_x mul 288 moveto (PDXSHIFT 0827) show
0 276 moveto (outw 0477) show
40 mp_a_x mul 276 moveto (0812 0818 0827 1315) show
4 mp_a_x mul 264 moveto (0477 1181 1183 8474 8476) show
36 mp_a_x mul 264 moveto (peek 8201) show
0 252 moveto (O_WRONLY 3551) show
40 mp_a_x mul 252 moveto (8201 8225 8240 8244 8256) show
4 mp_a_x mul 240 moveto (3551 5737 5738 8278 8281) show
40 mp_a_x mul 240 moveto (8269 8305 8309 8324 8332) show
0 228 moveto (P2V 0218) show
36 mp_a_x mul 228 moveto (PGROUNDDOWN 0830) show
4 mp_a_x mul 216 moveto (0218 1219 1238 6462 6750) show
40 mp_a_x mul 216 moveto (0830 1684 1685 2025) show
4 mp_a_x mul 204 moveto (7352) show
36 mp_a_x mul 204 moveto (PGROUNDUP 0829) show
0 192 moveto (panic 7305 8032) show
40 mp_a_x mul 192 moveto (0829 1863 1890 2804 5952) show
4 mp_a_x mul 180 moveto (0270 1478 1505 1569 1571) show
36 mp_a_x mul 180 moveto (PGSIZE 0823) show
4 mp_a_x mul 168 moveto (1690 1746 1782 1808 1824) show
40 mp_a_x mul 168 moveto (0823 0829 0830 1310 1666) show
4 mp_a_x mul 156 moveto (1827 1898 1915 1935 1964) show
40 mp_a_x mul 156 moveto (1694 1695 1744 1807 1810) show
4 mp_a_x mul 144 moveto (1966 2260 2360 2390 2508) show
40 mp_a_x mul 144 moveto (1811 1823 1825 1829 1832) show
4 mp_a_x mul 132 moveto (2510 2512 2514 2556 2559) show
40 mp_a_x mul 132 moveto (1864 1871 1872 1891 1894) show
4 mp_a_x mul 120 moveto (2820 3155 3878 3959 3961) show
40 mp_a_x mul 120 moveto (1962 1970 1971 2029 2035) show
4 mp_a_x mul 108 moveto (3963 4096 4117 4128 4208) show
40 mp_a_x mul 108 moveto (2262 2269 2805 2819 2823) show
4 mp_a_x mul 96 moveto (4330 4332 4476 4492 4624) show
40 mp_a_x mul 96 moveto (5953 5955) show
4 mp_a_x mul 84 moveto (4674 4709 4729 4738 4762) show
36 mp_a_x mul 84 moveto (PHYSTOP 0203) show
4 mp_a_x mul 72 moveto (4836 5017 5021 5067 5075) show
40 mp_a_x mul 72 moveto (0203 1238 1731 1745 1746) show
4 mp_a_x mul 60 moveto (5256 5270 5330 5384 5389) show
40 mp_a_x mul 60 moveto (2819) show
grestore
restore
showpage
%%Page: 6 6
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  cross-references  Page 9) show
0 648 moveto (picenable 6925) show
40 mp_a_x mul 648 moveto (3162 3168 3173 3177 3255) show
4 mp_a_x mul 636 moveto (0343 3856 6925 7525 7580) show
40 mp_a_x mul 636 moveto (3269 3283 3286 3297 3310) show
4 mp_a_x mul 624 moveto (7642) show
40 mp_a_x mul 624 moveto (3379 3381 3384 3385 3406) show
0 612 moveto (picinit 6932) show
40 mp_a_x mul 612 moveto (3440 3458 3475 3807 4416) show
4 mp_a_x mul 600 moveto (0344 1225 6932) show
40 mp_a_x mul 600 moveto (5161 5411 5426 5443 5444) show
0 588 moveto (picsetmask 6917) show
40 mp_a_x mul 588 moveto (5496 5814 5815 5864 5904) show
4 mp_a_x mul 576 moveto (6917 6927 6983) show
40 mp_a_x mul 576 moveto (5981 5984 5985 5986 5987) show
0 564 moveto (pinit 2173) show
40 mp_a_x mul 564 moveto (5988 5989 6004 6087 6107) show
4 mp_a_x mul 552 moveto (0363 1229 2173) show
40 mp_a_x mul 552 moveto (6411 6506 6517 6518 6519) show
0 540 moveto (pipe 6011) show
40 mp_a_x mul 540 moveto (6522 7213 7461 7610) show
4 mp_a_x mul 528 moveto (0254 0352 0353 0354 3755) show
36 mp_a_x mul 528 moveto (procdump 2654) show
4 mp_a_x mul 516 moveto (5281 5322 5359 6011 6023) show
40 mp_a_x mul 516 moveto (0364 2654 7420) show
4 mp_a_x mul 504 moveto (6029 6035 6039 6043 6061) show
36 mp_a_x mul 504 moveto (proghdr 0974) show
4 mp_a_x mul 492 moveto (6080 6101 7763 7952 7953) show
40 mp_a_x mul 492 moveto (0974 5917 8520 8534) show
0 480 moveto (PIPE 7859) show
36 mp_a_x mul 480 moveto (PTE_ADDR 0844) show
4 mp_a_x mul 468 moveto (7859 7950 8086 8377) show
40 mp_a_x mul 468 moveto (0844 1661 1828 1896 1919) show
0 456 moveto (pipealloc 6021) show
40 mp_a_x mul 456 moveto (1967 2011) show
4 mp_a_x mul 444 moveto (0351 5859 6021) show
36 mp_a_x mul 444 moveto (PTE_P 0833) show
0 432 moveto (pipeclose 6061) show
40 mp_a_x mul 432 moveto (0833 1313 1315 1660 1670) show
4 mp_a_x mul 420 moveto (0352 5281 6061) show
40 mp_a_x mul 420 moveto (1689 1691 1895 1918 1965) show
0 408 moveto (pipecmd 7884 8080) show
40 mp_a_x mul 408 moveto (2007) show
4 mp_a_x mul 396 moveto (7884 7912 7951 8080 8082) show
36 mp_a_x mul 396 moveto (PTE_PS 0840) show
4 mp_a_x mul 384 moveto (8258 8358 8378) show
40 mp_a_x mul 384 moveto (0840 1313 1315) show
0 372 moveto (piperead 6101) show
36 mp_a_x mul 372 moveto (pte_t 0847) show
4 mp_a_x mul 360 moveto (0353 5322 6101) show
40 mp_a_x mul 360 moveto (0847 1653 1657 1661 1663) show
0 348 moveto (PIPESIZE 6009) show
40 mp_a_x mul 348 moveto (1682 1821 1884 1931 1956) show
4 mp_a_x mul 336 moveto (6009 6013 6086 6094 6116) show
40 mp_a_x mul 336 moveto (2004) show
0 324 moveto (pipewrite 6080) show
36 mp_a_x mul 324 moveto (PTE_U 0835) show
4 mp_a_x mul 312 moveto (0354 5359 6080) show
40 mp_a_x mul 312 moveto (0835 1670 1811 1872 1936) show
0 300 moveto (popcli 1566) show
40 mp_a_x mul 300 moveto (1971 2009) show
4 mp_a_x mul 288 moveto (0383 1521 1566 1569 1571) show
36 mp_a_x mul 288 moveto (PTE_W 0834) show
4 mp_a_x mul 276 moveto (1784) show
40 mp_a_x mul 276 moveto (0834 1313 1315 1670 1729) show
0 264 moveto (printint 7226) show
40 mp_a_x mul 264 moveto (1731 1732 1811 1872 1971) show
4 mp_a_x mul 252 moveto (7226 7276 7280) show
36 mp_a_x mul 252 moveto (PTX 0815) show
0 240 moveto (proc 2103) show
40 mp_a_x mul 240 moveto (0815 1672) show
4 mp_a_x mul 228 moveto (0255 0358 0428 1205 1458) show
36 mp_a_x mul 228 moveto (PTXSHIFT 0826) show
4 mp_a_x mul 216 moveto (1606 1638 1773 1779 2065) show
40 mp_a_x mul 216 moveto (0815 0818 0826) show
4 mp_a_x mul 204 moveto (2080 2103 2109 2156 2161) show
36 mp_a_x mul 204 moveto (pushcli 1555) show
4 mp_a_x mul 192 moveto (2164 2204 2207 2211 2254) show
40 mp_a_x mul 192 moveto (0382 1476 1555 1775) show
4 mp_a_x mul 180 moveto (2285 2287 2290 2293 2294) show
36 mp_a_x mul 180 moveto (rcr2 0582) show
4 mp_a_x mul 168 moveto (2307 2314 2320 2321 2322) show
40 mp_a_x mul 168 moveto (0582 3154 3161) show
4 mp_a_x mul 156 moveto (2328 2329 2330 2334 2356) show
36 mp_a_x mul 156 moveto (readeflags 0544) show
4 mp_a_x mul 144 moveto (2359 2364 2365 2366 2370) show
40 mp_a_x mul 144 moveto (0544 1559 1568 2513 6708) show
4 mp_a_x mul 132 moveto (2371 2376 2379 2380 2388) show
36 mp_a_x mul 132 moveto (read_head 4237) show
4 mp_a_x mul 120 moveto (2405 2412 2413 2433 2439) show
40 mp_a_x mul 120 moveto (4237 4270) show
4 mp_a_x mul 108 moveto (2460 2468 2475 2478 2483) show
36 mp_a_x mul 108 moveto (readi 4902) show
4 mp_a_x mul 96 moveto (2511 2516 2525 2555 2573) show
40 mp_a_x mul 96 moveto (0299 1833 4902 5020 5066) show
4 mp_a_x mul 84 moveto (2574 2578 2605 2607 2627) show
40 mp_a_x mul 84 moveto (5325 5567 5568 5926 5937) show
4 mp_a_x mul 72 moveto (2630 2665 2669 3055 3104) show
36 mp_a_x mul 72 moveto (readsb 4427) show
4 mp_a_x mul 60 moveto (3106 3108 3151 3159 3160) show
40 mp_a_x mul 60 moveto (0285 4212 4427 4461 4487) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  cross-references  Page 10) show
4 mp_a_x mul 648 moveto (4610) show
36 mp_a_x mul 648 moveto (SCROLLLOCK 7014) show
0 636 moveto (readsect 8560) show
40 mp_a_x mul 636 moveto (7014 7047) show
4 mp_a_x mul 624 moveto (8560 8595) show
36 mp_a_x mul 624 moveto (SECTSIZE 8512) show
0 612 moveto (readseg 8579) show
40 mp_a_x mul 612 moveto (8512 8573 8586 8589 8594) show
4 mp_a_x mul 600 moveto (8514 8527 8538 8579) show
36 mp_a_x mul 600 moveto (SEG 0769) show
0 588 moveto (recover_from_log 4268) show
40 mp_a_x mul 588 moveto (0769 1625 1626 1627 1628) show
4 mp_a_x mul 576 moveto (4202 4216 4268) show
40 mp_a_x mul 576 moveto (1631) show
0 564 moveto (REDIR 7858) show
36 mp_a_x mul 564 moveto (SEG16 0773) show
4 mp_a_x mul 552 moveto (7858 7930 8070 8371) show
40 mp_a_x mul 552 moveto (0773 1776) show
0 540 moveto (redircmd 7875 8064) show
36 mp_a_x mul 540 moveto (SEG_ASM 0660) show
4 mp_a_x mul 528 moveto (7875 7913 7931 8064 8066) show
40 mp_a_x mul 528 moveto (0660 1190 1191 8484 8485) show
4 mp_a_x mul 516 moveto (8275 8278 8281 8359 8372) show
36 mp_a_x mul 516 moveto (segdesc 0752) show
0 504 moveto (REG_ID 6810) show
40 mp_a_x mul 504 moveto (0509 0512 0752 0769 0773) show
4 mp_a_x mul 492 moveto (6810 6860) show
40 mp_a_x mul 492 moveto (1611 2058) show
0 480 moveto (REG_TABLE 6812) show
36 mp_a_x mul 480 moveto (seginit 1616) show
4 mp_a_x mul 468 moveto (6812 6867 6868 6881 6882) show
40 mp_a_x mul 468 moveto (0417 1223 1255 1616) show
0 456 moveto (REG_VER 6811) show
36 mp_a_x mul 456 moveto (SEG_KCODE 0741) show
4 mp_a_x mul 444 moveto (6811 6859) show
40 mp_a_x mul 444 moveto (0741 1150 1625 3072 3073) show
0 432 moveto (release 1502) show
40 mp_a_x mul 432 moveto (8453) show
4 mp_a_x mul 420 moveto (0381 1502 1505 2214 2220) show
36 mp_a_x mul 420 moveto (SEG_KCPU 0743) show
4 mp_a_x mul 408 moveto (2427 2434 2485 2527 2537) show
40 mp_a_x mul 408 moveto (0743 1631 1634 3016) show
4 mp_a_x mul 396 moveto (2569 2582 2618 2636 2640) show
36 mp_a_x mul 396 moveto (SEG_KDATA 0742) show
4 mp_a_x mul 384 moveto (2831 2848 3119 3476 3481) show
40 mp_a_x mul 384 moveto (0742 1154 1626 1778 3013) show
4 mp_a_x mul 372 moveto (3494 3909 3928 3982 4078) show
40 mp_a_x mul 372 moveto (8458) show
4 mp_a_x mul 360 moveto (4092 4142 4284 4313 4665) show
36 mp_a_x mul 360 moveto (SEG_NULLASM 0654) show
4 mp_a_x mul 348 moveto (4681 4693 4715 4743 4764) show
40 mp_a_x mul 348 moveto (0654 1189 8483) show
4 mp_a_x mul 336 moveto (4773 5233 5237 5258 5272) show
36 mp_a_x mul 336 moveto (SEG_TSS 0746) show
4 mp_a_x mul 324 moveto (5278 6072 6075 6088 6097) show
40 mp_a_x mul 324 moveto (0746 1776 1777 1780) show
4 mp_a_x mul 312 moveto (6108 6119 7301 7448 7462) show
36 mp_a_x mul 312 moveto (SEG_UCODE 0744) show
4 mp_a_x mul 300 moveto (7482 7509) show
40 mp_a_x mul 300 moveto (0744 1627 2264) show
0 288 moveto (ROOTDEV 0158) show
36 mp_a_x mul 288 moveto (SEG_UDATA 0745) show
4 mp_a_x mul 276 moveto (0158 4212 4215 5159) show
40 mp_a_x mul 276 moveto (0745 1628 2265) show
0 264 moveto (ROOTINO 3660) show
36 mp_a_x mul 264 moveto (SETGATE 0921) show
4 mp_a_x mul 252 moveto (3660 5159) show
40 mp_a_x mul 252 moveto (0921 3072 3073) show
0 240 moveto (run 2764) show
36 mp_a_x mul 240 moveto (setupkvm 1737) show
4 mp_a_x mul 228 moveto (2661 2764 2765 2771 2817) show
40 mp_a_x mul 228 moveto (0420 1737 1759 1960 2259) show
4 mp_a_x mul 216 moveto (2827 2840) show
40 mp_a_x mul 216 moveto (5931) show
0 204 moveto (runcmd 7906) show
36 mp_a_x mul 204 moveto (SHIFT 7008) show
4 mp_a_x mul 192 moveto (7906 7920 7937 7943 7945) show
40 mp_a_x mul 192 moveto (7008 7036 7037 7185) show
4 mp_a_x mul 180 moveto (7959 7966 7977 8025) show
36 mp_a_x mul 180 moveto (skipelem 5115) show
0 168 moveto (RUNNING 2100) show
40 mp_a_x mul 168 moveto (5115 5163) show
4 mp_a_x mul 156 moveto (2100 2477 2511 2661 3173) show
36 mp_a_x mul 156 moveto (sleep 2553) show
0 144 moveto (safestrcpy 6232) show
40 mp_a_x mul 144 moveto (0367 2439 2553 2556 2559) show
4 mp_a_x mul 132 moveto (0389 2272 2334 5981 6232) show
40 mp_a_x mul 132 moveto (2659 3479 3979 4081 4281) show
0 120 moveto (sched 2503) show
40 mp_a_x mul 120 moveto (4713 6092 6111 7466 7779) show
4 mp_a_x mul 108 moveto (0366 2389 2503 2508 2510) show
36 mp_a_x mul 108 moveto (spinlock 1401) show
4 mp_a_x mul 96 moveto (2512 2514 2526 2575) show
40 mp_a_x mul 96 moveto (0256 0367 0377 0379 0380) show
0 84 moveto (scheduler 2458) show
40 mp_a_x mul 84 moveto (0381 0409 1401 1459 1462) show
4 mp_a_x mul 72 moveto (0365 1267 2056 2458 2478) show
40 mp_a_x mul 72 moveto (1474 1502 1544 2157 2160) show
4 mp_a_x mul 60 moveto (2516) show
40 mp_a_x mul 60 moveto (2553 2759 2769 3058 3063) show
grestore
restore
showpage
%%Page: 7 7
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  cross-references  Page 11) show
4 mp_a_x mul 648 moveto (3810 3825 4025 4029 4153) show
36 mp_a_x mul 648 moveto (SVR 6615) show
4 mp_a_x mul 636 moveto (4191 4417 4563 5209 5213) show
40 mp_a_x mul 636 moveto (6615 6657) show
4 mp_a_x mul 624 moveto (6007 6012 7208 7221 7402) show
36 mp_a_x mul 624 moveto (switchkvm 1766) show
4 mp_a_x mul 612 moveto (7606) show
40 mp_a_x mul 612 moveto (0429 1254 1760 1766 2479) show
0 600 moveto (STA_R 0669 0786) show
36 mp_a_x mul 600 moveto (switchuvm 1773) show
4 mp_a_x mul 588 moveto (0669 0786 1190 1625 1627) show
40 mp_a_x mul 588 moveto (0428 1773 1782 2294 2476) show
4 mp_a_x mul 576 moveto (8484) show
40 mp_a_x mul 576 moveto (5989) show
0 564 moveto (start 1125 7708 8411) show
36 mp_a_x mul 564 moveto (swtch 2708) show
4 mp_a_x mul 552 moveto (1124 1125 1167 1175 1177) show
40 mp_a_x mul 552 moveto (0374 2478 2516 2707 2708) show
4 mp_a_x mul 540 moveto (4192 4213 4226 4239 4256) show
36 mp_a_x mul 540 moveto (syscall 3375) show
4 mp_a_x mul 528 moveto (4339 7707 7708 8410 8411) show
40 mp_a_x mul 528 moveto (0400 3107 3257 3375) show
4 mp_a_x mul 516 moveto (8467) show
36 mp_a_x mul 516 moveto (SYSCALL 7753 7760 7761 7762 7763 77) show
0 504 moveto (startothers 1274) show
40 mp_a_x mul 504 moveto (7760 7761 7762 7763 7764) show
4 mp_a_x mul 492 moveto (1208 1237 1274) show
40 mp_a_x mul 492 moveto (7765 7766 7767 7768 7769) show
0 480 moveto (stat 3604) show
40 mp_a_x mul 480 moveto (7770 7771 7772 7773 7774) show
4 mp_a_x mul 468 moveto (0257 0281 0300 3604 4414) show
40 mp_a_x mul 468 moveto (7775 7776 7777 7778 7779) show
4 mp_a_x mul 456 moveto (4887 5302 5409 5504 7803) show
40 mp_a_x mul 456 moveto (7780) show
0 444 moveto (stati 4887) show
36 mp_a_x mul 444 moveto (sys_chdir 5801) show
4 mp_a_x mul 432 moveto (0300 4887 5306) show
40 mp_a_x mul 432 moveto (3329 3359 5801) show
0 420 moveto (STA_W 0668 0785) show
36 mp_a_x mul 420 moveto (SYS_chdir 3209) show
4 mp_a_x mul 408 moveto (0668 0785 1191 1626 1628) show
40 mp_a_x mul 408 moveto (3209 3359) show
4 mp_a_x mul 396 moveto (1631 8485) show
36 mp_a_x mul 396 moveto (sys_close 5489) show
0 384 moveto (STA_X 0665 0782) show
40 mp_a_x mul 384 moveto (3330 3371 5489) show
4 mp_a_x mul 372 moveto (0665 0782 1190 1625 1627) show
36 mp_a_x mul 372 moveto (SYS_close 3221) show
4 mp_a_x mul 360 moveto (8484) show
40 mp_a_x mul 360 moveto (3221 3371) show
0 348 moveto (sti 0563) show
36 mp_a_x mul 348 moveto (sys_dup 5451) show
4 mp_a_x mul 336 moveto (0563 0565 1573 2464) show
40 mp_a_x mul 336 moveto (3331 3360 5451) show
0 324 moveto (stosb 0492) show
36 mp_a_x mul 324 moveto (SYS_dup 3210) show
4 mp_a_x mul 312 moveto (0492 0494 6160 8540) show
40 mp_a_x mul 312 moveto (3210 3360) show
0 300 moveto (stosl 0501) show
36 mp_a_x mul 300 moveto (sys_exec 5820) show
4 mp_a_x mul 288 moveto (0501 0503 6158) show
40 mp_a_x mul 288 moveto (3332 3357 5820) show
0 276 moveto (strlen 6251) show
36 mp_a_x mul 276 moveto (SYS_exec 3207) show
4 mp_a_x mul 264 moveto (0390 5962 5963 6251 8019) show
40 mp_a_x mul 264 moveto (3207 3357 7712) show
4 mp_a_x mul 252 moveto (8223) show
36 mp_a_x mul 252 moveto (sys_exit 3415) show
0 240 moveto (strncmp 6208) show
40 mp_a_x mul 240 moveto (3333 3352 3415) show
4 mp_a_x mul 228 moveto (0391 5005 6208) show
36 mp_a_x mul 228 moveto (SYS_exit 3202) show
0 216 moveto (strncpy 6218) show
40 mp_a_x mul 216 moveto (3202 3352 7717) show
4 mp_a_x mul 204 moveto (0392 5072 6218) show
36 mp_a_x mul 204 moveto (sys_fork 3409) show
0 192 moveto (STS_IG32 0800) show
40 mp_a_x mul 192 moveto (3334 3351 3409) show
4 mp_a_x mul 180 moveto (0800 0927) show
36 mp_a_x mul 180 moveto (SYS_fork 3201) show
0 168 moveto (STS_T32A 0797) show
40 mp_a_x mul 168 moveto (3201 3351) show
4 mp_a_x mul 156 moveto (0797 1776) show
36 mp_a_x mul 156 moveto (sys_fstat 5501) show
0 144 moveto (STS_TG32 0801) show
40 mp_a_x mul 144 moveto (3335 3358 5501) show
4 mp_a_x mul 132 moveto (0801 0927) show
36 mp_a_x mul 132 moveto (SYS_fstat 3208) show
0 120 moveto (sum 6426) show
40 mp_a_x mul 120 moveto (3208 3358) show
4 mp_a_x mul 108 moveto (6426 6428 6430 6432 6433) show
36 mp_a_x mul 108 moveto (sys_getpid 3438) show
4 mp_a_x mul 96 moveto (6445 6492) show
40 mp_a_x mul 96 moveto (3336 3361 3438) show
0 84 moveto (superblock 3664) show
36 mp_a_x mul 84 moveto (SYS_getpid 3211) show
4 mp_a_x mul 72 moveto (0258 0285 3664 4210 4427) show
40 mp_a_x mul 72 moveto (3211 3361) show
4 mp_a_x mul 60 moveto (4458 4484 4608) show
36 mp_a_x mul 60 moveto (sys_kill 3428) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  cross-references  Page 12) show
4 mp_a_x mul 648 moveto (3337 3356 3428) show
40 mp_a_x mul 648 moveto (3216 3366) show
0 636 moveto (SYS_kill 3206) show
36 mp_a_x mul 636 moveto (taskstate 0851) show
4 mp_a_x mul 624 moveto (3206 3356) show
40 mp_a_x mul 624 moveto (0851 2057) show
0 612 moveto (sys_link 5513) show
36 mp_a_x mul 612 moveto (TDCR 6639) show
4 mp_a_x mul 600 moveto (3338 3369 5513) show
40 mp_a_x mul 600 moveto (6639 6663) show
0 588 moveto (SYS_link 3219) show
36 mp_a_x mul 588 moveto (T_DEV 3602) show
4 mp_a_x mul 576 moveto (3219 3369) show
40 mp_a_x mul 576 moveto (3602 4907 4957 5778) show
0 564 moveto (sys_mkdir 5751) show
36 mp_a_x mul 564 moveto (T_DIR 3600) show
4 mp_a_x mul 552 moveto (3339 3370 5751) show
40 mp_a_x mul 552 moveto (3600 5016 5165 5526 5627) show
0 540 moveto (SYS_mkdir 3220) show
40 mp_a_x mul 540 moveto (5635 5685 5720 5757 5809) show
4 mp_a_x mul 528 moveto (3220 3370) show
36 mp_a_x mul 528 moveto (T_FILE 3601) show
0 516 moveto (sys_mknod 5767) show
40 mp_a_x mul 516 moveto (3601 5670 5712) show
4 mp_a_x mul 504 moveto (3340 3367 5767) show
36 mp_a_x mul 504 moveto (ticks 3064) show
0 492 moveto (SYS_mknod 3217) show
40 mp_a_x mul 492 moveto (0407 3064 3117 3118 3473) show
4 mp_a_x mul 480 moveto (3217 3367) show
40 mp_a_x mul 480 moveto (3474 3479 3493) show
0 468 moveto (sys_open 5701) show
36 mp_a_x mul 468 moveto (tickslock 3063) show
4 mp_a_x mul 456 moveto (3341 3365 5701) show
40 mp_a_x mul 456 moveto (0409 3063 3075 3116 3119) show
0 444 moveto (SYS_open 3215) show
40 mp_a_x mul 444 moveto (3472 3476 3479 3481 3492) show
4 mp_a_x mul 432 moveto (3215 3365) show
40 mp_a_x mul 432 moveto (3494) show
0 420 moveto (sys_pipe 5851) show
36 mp_a_x mul 420 moveto (TICR 6637) show
4 mp_a_x mul 408 moveto (3342 3354 5851) show
40 mp_a_x mul 408 moveto (6637 6665) show
0 396 moveto (SYS_pipe 3204) show
36 mp_a_x mul 396 moveto (TIMER 6629) show
4 mp_a_x mul 384 moveto (3204 3354) show
40 mp_a_x mul 384 moveto (6629 6664) show
0 372 moveto (sys_read 5465) show
36 mp_a_x mul 372 moveto (TIMER_16BIT 7571) show
4 mp_a_x mul 360 moveto (3343 3355 5465) show
40 mp_a_x mul 360 moveto (7571 7577) show
0 348 moveto (SYS_read 3205) show
36 mp_a_x mul 348 moveto (TIMER_DIV 7566) show
4 mp_a_x mul 336 moveto (3205 3355) show
40 mp_a_x mul 336 moveto (7566 7578 7579) show
0 324 moveto (sys_sbrk 3451) show
36 mp_a_x mul 324 moveto (TIMER_FREQ 7565) show
4 mp_a_x mul 312 moveto (3344 3362 3451) show
40 mp_a_x mul 312 moveto (7565 7566) show
0 300 moveto (SYS_sbrk 3212) show
36 mp_a_x mul 300 moveto (timerinit 7574) show
4 mp_a_x mul 288 moveto (3212 3362) show
40 mp_a_x mul 288 moveto (0403 1236 7574) show
0 276 moveto (sys_sleep 3465) show
36 mp_a_x mul 276 moveto (TIMER_MODE 7568) show
4 mp_a_x mul 264 moveto (3345 3363 3465) show
40 mp_a_x mul 264 moveto (7568 7577) show
0 252 moveto (SYS_sleep 3213) show
36 mp_a_x mul 252 moveto (TIMER_RATEGEN 7570) show
4 mp_a_x mul 240 moveto (3213 3363) show
40 mp_a_x mul 240 moveto (7570 7577) show
0 228 moveto (sys_unlink 5601) show
36 mp_a_x mul 228 moveto (TIMER_SEL0 7569) show
4 mp_a_x mul 216 moveto (3346 3368 5601) show
40 mp_a_x mul 216 moveto (7569 7577) show
0 204 moveto (SYS_unlink 3218) show
36 mp_a_x mul 204 moveto (T_IRQ0 2929) show
4 mp_a_x mul 192 moveto (3218 3368) show
40 mp_a_x mul 192 moveto (2929 3114 3123 3127 3130) show
0 180 moveto (sys_uptime 3488) show
40 mp_a_x mul 180 moveto (3134 3138 3139 3173 6657) show
4 mp_a_x mul 168 moveto (3349 3364 3488) show
40 mp_a_x mul 168 moveto (6664 6677 6867 6881 6947) show
0 156 moveto (SYS_uptime 3214) show
40 mp_a_x mul 156 moveto (6966) show
4 mp_a_x mul 144 moveto (3214 3364) show
36 mp_a_x mul 144 moveto (TPR 6613) show
0 132 moveto (sys_wait 3422) show
40 mp_a_x mul 132 moveto (6613 6693) show
4 mp_a_x mul 120 moveto (3347 3353 3422) show
36 mp_a_x mul 120 moveto (trap 3101) show
0 108 moveto (SYS_wait 3203) show
40 mp_a_x mul 108 moveto (2952 2954 3022 3101 3153) show
4 mp_a_x mul 96 moveto (3203 3353) show
40 mp_a_x mul 96 moveto (3155 3158) show
0 84 moveto (sys_write 5477) show
36 mp_a_x mul 84 moveto (trapframe 0602) show
4 mp_a_x mul 72 moveto (3348 3366 5477) show
40 mp_a_x mul 72 moveto (0602 2110 2231 3101) show
0 60 moveto (SYS_write 3216) show
36 mp_a_x mul 60 moveto (trapret 3027) show
grestore
restore
showpage
%%Page: 8 8
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  cross-references  Page 13) show
4 mp_a_x mul 648 moveto (2168 2236 3026 3027) show
40 mp_a_x mul 648 moveto (6612 6673) show
0 636 moveto (T_SYSCALL 2926) show
36 mp_a_x mul 636 moveto (wait 2403) show
4 mp_a_x mul 624 moveto (2926 3073 3103 7713 7718) show
40 mp_a_x mul 624 moveto (0369 2403 3424 7762 7833) show
4 mp_a_x mul 612 moveto (7757) show
40 mp_a_x mul 612 moveto (7944 7970 7971 8026) show
0 600 moveto (tvinit 3067) show
36 mp_a_x mul 600 moveto (waitdisk 8551) show
4 mp_a_x mul 588 moveto (0408 1230 3067) show
40 mp_a_x mul 588 moveto (8551 8563 8572) show
0 576 moveto (uart 7615) show
36 mp_a_x mul 576 moveto (wakeup 2614) show
4 mp_a_x mul 564 moveto (7615 7636 7655 7665) show
40 mp_a_x mul 564 moveto (0370 2614 3118 3922 4140) show
0 552 moveto (uartgetc 7663) show
40 mp_a_x mul 552 moveto (4312 4742 4770 6066 6069) show
4 mp_a_x mul 540 moveto (7663 7675) show
40 mp_a_x mul 540 moveto (6091 6096 6118 7442) show
0 528 moveto (uartinit 7618) show
36 mp_a_x mul 528 moveto (wakeup1 2603) show
4 mp_a_x mul 516 moveto (0412 1228 7618) show
40 mp_a_x mul 516 moveto (2170 2376 2383 2603 2617) show
0 504 moveto (uartintr 7673) show
36 mp_a_x mul 504 moveto (walkpgdir 1654) show
4 mp_a_x mul 492 moveto (0413 3135 7673) show
40 mp_a_x mul 492 moveto (1654 1687 1826 1892 1933) show
0 480 moveto (uartputc 7651) show
40 mp_a_x mul 480 moveto (1963 2006) show
4 mp_a_x mul 468 moveto (0414 7395 7397 7647 7651) show
36 mp_a_x mul 468 moveto (write_head 4254) show
0 456 moveto (userinit 2252) show
40 mp_a_x mul 456 moveto (4254 4273 4304 4307) show
4 mp_a_x mul 444 moveto (0368 1239 2252 2260) show
36 mp_a_x mul 444 moveto (writei 4952) show
0 432 moveto (uva2ka 2002) show
40 mp_a_x mul 432 moveto (0301 4952 5074 5376 5633) show
4 mp_a_x mul 420 moveto (0421 2002 2026) show
40 mp_a_x mul 420 moveto (5634) show
0 408 moveto (V2P 0217) show
36 mp_a_x mul 408 moveto (xchg 0569) show
4 mp_a_x mul 396 moveto (0217 1730 1731) show
40 mp_a_x mul 396 moveto (0569 1266 1483 1519) show
0 384 moveto (V2P_WO 0220) show
36 mp_a_x mul 384 moveto (yield 2522) show
4 mp_a_x mul 372 moveto (0220 1036 1046) show
40 mp_a_x mul 372 moveto (0371 2522 3174) show
0 360 moveto (VER 6612) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
grestore
restore
showpage
%%Page: 9 9
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/types.h  Page 1) show
0 648 moveto (0100 typedef unsigned int   uint;) show
0 636 moveto (0101 typedef unsigned short ushort;) show
0 624 moveto (0102 typedef unsigned char  uchar;) show
0 612 moveto (0103 typedef uint pde_t;) show
0 600 moveto (0104 ) show
0 588 moveto (0105 ) show
0 576 moveto (0106 ) show
0 564 moveto (0107 ) show
0 552 moveto (0108 ) show
0 540 moveto (0109 ) show
0 528 moveto (0110 ) show
0 516 moveto (0111 ) show
0 504 moveto (0112 ) show
0 492 moveto (0113 ) show
0 480 moveto (0114 ) show
0 468 moveto (0115 ) show
0 456 moveto (0116 ) show
0 444 moveto (0117 ) show
0 432 moveto (0118 ) show
0 420 moveto (0119 ) show
0 408 moveto (0120 ) show
0 396 moveto (0121 ) show
0 384 moveto (0122 ) show
0 372 moveto (0123 ) show
0 360 moveto (0124 ) show
0 348 moveto (0125 ) show
0 336 moveto (0126 ) show
0 324 moveto (0127 ) show
0 312 moveto (0128 ) show
0 300 moveto (0129 ) show
0 288 moveto (0130 ) show
0 276 moveto (0131 ) show
0 264 moveto (0132 ) show
0 252 moveto (0133 ) show
0 240 moveto (0134 ) show
0 228 moveto (0135 ) show
0 216 moveto (0136 ) show
0 204 moveto (0137 ) show
0 192 moveto (0138 ) show
0 180 moveto (0139 ) show
0 168 moveto (0140 ) show
0 156 moveto (0141 ) show
0 144 moveto (0142 ) show
0 132 moveto (0143 ) show
0 120 moveto (0144 ) show
0 108 moveto (0145 ) show
0 96 moveto (0146 ) show
0 84 moveto (0147 ) show
0 72 moveto (0148 ) show
0 60 moveto (0149 ) show
0 24 moveto (Sheet 01) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/param.h  Page 1) show
0 648 moveto (0150 #define NPROC        64  // maximum number of processes) show
0 636 moveto (0151 #define KSTACKSIZE 4096  // size of per-process kernel stack) show
0 624 moveto (0152 #define NCPU          8  // maximum number of CPUs) show
0 612 moveto (0153 #define NOFILE       16  // open files per process) show
0 600 moveto (0154 #define NFILE       100  // open files per system) show
0 588 moveto (0155 #define NBUF         10  // size of disk block cache) show
0 576 moveto (0156 #define NINODE       50  // maximum number of active i-nodes) show
0 564 moveto (0157 #define NDEV         10  // maximum major device number) show
0 552 moveto (0158 #define ROOTDEV       1  // device number of file system root disk) show
0 540 moveto (0159 #define MAXARG       32  // max exec arguments) show
0 528 moveto (0160 #define LOGSIZE      10  // max data sectors in on-disk log) show
0 516 moveto (0161 ) show
0 504 moveto (0162 ) show
0 492 moveto (0163 ) show
0 480 moveto (0164 ) show
0 468 moveto (0165 ) show
0 456 moveto (0166 ) show
0 444 moveto (0167 ) show
0 432 moveto (0168 ) show
0 420 moveto (0169 ) show
0 408 moveto (0170 ) show
0 396 moveto (0171 ) show
0 384 moveto (0172 ) show
0 372 moveto (0173 ) show
0 360 moveto (0174 ) show
0 348 moveto (0175 ) show
0 336 moveto (0176 ) show
0 324 moveto (0177 ) show
0 312 moveto (0178 ) show
0 300 moveto (0179 ) show
0 288 moveto (0180 ) show
0 276 moveto (0181 ) show
0 264 moveto (0182 ) show
0 252 moveto (0183 ) show
0 240 moveto (0184 ) show
0 228 moveto (0185 ) show
0 216 moveto (0186 ) show
0 204 moveto (0187 ) show
0 192 moveto (0188 ) show
0 180 moveto (0189 ) show
0 168 moveto (0190 ) show
0 156 moveto (0191 ) show
0 144 moveto (0192 ) show
0 132 moveto (0193 ) show
0 120 moveto (0194 ) show
0 108 moveto (0195 ) show
0 96 moveto (0196 ) show
0 84 moveto (0197 ) show
0 72 moveto (0198 ) show
0 60 moveto (0199 ) show
0 24 moveto (Sheet 01) show
grestore
restore
showpage
%%Page: 10 10
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/memlayout.h  Page 1) show
0 648 moveto (0200 // Memory layout) show
0 636 moveto (0201 ) show
0 624 moveto (0202 #define EXTMEM  0x100000            // Start of extended memory) show
0 612 moveto (0203 #define PHYSTOP 0xE000000           // Top physical memory) show
0 600 moveto (0204 #define DEVSPACE 0xFE000000         // Other devices are at high addresses) show
0 588 moveto (0205 ) show
0 576 moveto (0206 // Key addresses for address space layout \(see kmap in vm.c for layout\)) show
0 564 moveto (0207 #define KERNBASE 0x80000000         // First kernel virtual address) show
0 552 moveto (0208 #define KERNLINK \(KERNBASE+EXTMEM\)  // Address where kernel is linked) show
0 540 moveto (0209 ) show
0 528 moveto (0210 #ifndef __ASSEMBLER__) show
0 516 moveto (0211 ) show
0 504 moveto (0212 static inline uint v2p\(void *a\) { return \(\(uint\) \(a\)\)  - KERNBASE; }) show
0 492 moveto (0213 static inline void *p2v\(uint a\) { return \(void *\) \(\(a\) + KERNBASE\); }) show
0 480 moveto (0214 ) show
0 468 moveto (0215 #endif) show
0 456 moveto (0216 ) show
0 444 moveto (0217 #define V2P\(a\) \(\(\(uint\) \(a\)\) - KERNBASE\)) show
0 432 moveto (0218 #define P2V\(a\) \(\(\(void *\) \(a\)\) + KERNBASE\)) show
0 420 moveto (0219 ) show
0 408 moveto (0220 #define V2P_WO\(x\) \(\(x\) - KERNBASE\)    // same as V2P, but without casts) show
0 396 moveto (0221 #define P2V_WO\(x\) \(\(x\) + KERNBASE\)    // same as V2P, but without casts) show
0 384 moveto (0222 ) show
0 372 moveto (0223 ) show
0 360 moveto (0224 ) show
0 348 moveto (0225 ) show
0 336 moveto (0226 ) show
0 324 moveto (0227 ) show
0 312 moveto (0228 ) show
0 300 moveto (0229 ) show
0 288 moveto (0230 ) show
0 276 moveto (0231 ) show
0 264 moveto (0232 ) show
0 252 moveto (0233 ) show
0 240 moveto (0234 ) show
0 228 moveto (0235 ) show
0 216 moveto (0236 ) show
0 204 moveto (0237 ) show
0 192 moveto (0238 ) show
0 180 moveto (0239 ) show
0 168 moveto (0240 ) show
0 156 moveto (0241 ) show
0 144 moveto (0242 ) show
0 132 moveto (0243 ) show
0 120 moveto (0244 ) show
0 108 moveto (0245 ) show
0 96 moveto (0246 ) show
0 84 moveto (0247 ) show
0 72 moveto (0248 ) show
0 60 moveto (0249 ) show
0 24 moveto (Sheet 02) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/defs.h  Page 1) show
0 648 moveto (0250 struct buf;) show
0 636 moveto (0251 struct context;) show
0 624 moveto (0252 struct file;) show
0 612 moveto (0253 struct inode;) show
0 600 moveto (0254 struct pipe;) show
0 588 moveto (0255 struct proc;) show
0 576 moveto (0256 struct spinlock;) show
0 564 moveto (0257 struct stat;) show
0 552 moveto (0258 struct superblock;) show
0 540 moveto (0259 ) show
0 528 moveto (0260 // bio.c) show
0 516 moveto (0261 void            binit\(void\);) show
0 504 moveto (0262 struct buf*     bread\(uint, uint\);) show
0 492 moveto (0263 void            brelse\(struct buf*\);) show
0 480 moveto (0264 void            bwrite\(struct buf*\);) show
0 468 moveto (0265 ) show
0 456 moveto (0266 // console.c) show
0 444 moveto (0267 void            consoleinit\(void\);) show
0 432 moveto (0268 void            cprintf\(char*, ...\);) show
0 420 moveto (0269 void            consoleintr\(int\(*\)\(void\)\);) show
0 408 moveto (0270 void            panic\(char*\) __attribute__\(\(noreturn\)\);) show
0 396 moveto (0271 ) show
0 384 moveto (0272 // exec.c) show
0 372 moveto (0273 int             exec\(char*, char**\);) show
0 360 moveto (0274 ) show
0 348 moveto (0275 // file.c) show
0 336 moveto (0276 struct file*    filealloc\(void\);) show
0 324 moveto (0277 void            fileclose\(struct file*\);) show
0 312 moveto (0278 struct file*    filedup\(struct file*\);) show
0 300 moveto (0279 void            fileinit\(void\);) show
0 288 moveto (0280 int             fileread\(struct file*, char*, int n\);) show
0 276 moveto (0281 int             filestat\(struct file*, struct stat*\);) show
0 264 moveto (0282 int             filewrite\(struct file*, char*, int n\);) show
0 252 moveto (0283 ) show
0 240 moveto (0284 // fs.c) show
0 228 moveto (0285 void            readsb\(int dev, struct superblock *sb\);) show
0 216 moveto (0286 int             dirlink\(struct inode*, char*, uint\);) show
0 204 moveto (0287 struct inode*   dirlookup\(struct inode*, char*, uint*\);) show
0 192 moveto (0288 struct inode*   ialloc\(uint, short\);) show
0 180 moveto (0289 struct inode*   idup\(struct inode*\);) show
0 168 moveto (0290 void            iinit\(void\);) show
0 156 moveto (0291 void            ilock\(struct inode*\);) show
0 144 moveto (0292 void            iput\(struct inode*\);) show
0 132 moveto (0293 void            iunlock\(struct inode*\);) show
0 120 moveto (0294 void            iunlockput\(struct inode*\);) show
0 108 moveto (0295 void            iupdate\(struct inode*\);) show
0 96 moveto (0296 int             namecmp\(const char*, const char*\);) show
0 84 moveto (0297 struct inode*   namei\(char*\);) show
0 72 moveto (0298 struct inode*   nameiparent\(char*, char*\);) show
0 60 moveto (0299 int             readi\(struct inode*, char*, uint, uint\);) show
0 24 moveto (Sheet 02) show
grestore
restore
showpage
%%Page: 11 11
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/defs.h  Page 2) show
0 648 moveto (0300 void            stati\(struct inode*, struct stat*\);) show
0 636 moveto (0301 int             writei\(struct inode*, char*, uint, uint\);) show
0 624 moveto (0302 ) show
0 612 moveto (0303 // ide.c) show
0 600 moveto (0304 void            ideinit\(void\);) show
0 588 moveto (0305 void            ideintr\(void\);) show
0 576 moveto (0306 void            iderw\(struct buf*\);) show
0 564 moveto (0307 ) show
0 552 moveto (0308 // ioapic.c) show
0 540 moveto (0309 void            ioapicenable\(int irq, int cpu\);) show
0 528 moveto (0310 extern uchar    ioapicid;) show
0 516 moveto (0311 void            ioapicinit\(void\);) show
0 504 moveto (0312 ) show
0 492 moveto (0313 // kalloc.c) show
0 480 moveto (0314 char*           kalloc\(void\);) show
0 468 moveto (0315 void            kfree\(char*\);) show
0 456 moveto (0316 void            kinit1\(void*, void*\);) show
0 444 moveto (0317 void            kinit2\(void*, void*\);) show
0 432 moveto (0318 ) show
0 420 moveto (0319 // kbd.c) show
0 408 moveto (0320 void            kbdintr\(void\);) show
0 396 moveto (0321 ) show
0 384 moveto (0322 // lapic.c) show
0 372 moveto (0323 int             cpunum\(void\);) show
0 360 moveto (0324 extern volatile uint*    lapic;) show
0 348 moveto (0325 void            lapiceoi\(void\);) show
0 336 moveto (0326 void            lapicinit\(void\);) show
0 324 moveto (0327 void            lapicstartap\(uchar, uint\);) show
0 312 moveto (0328 void            microdelay\(int\);) show
0 300 moveto (0329 ) show
0 288 moveto (0330 // log.c) show
0 276 moveto (0331 void            initlog\(void\);) show
0 264 moveto (0332 void            log_write\(struct buf*\);) show
0 252 moveto (0333 void            begin_trans\(\);) show
0 240 moveto (0334 void            commit_trans\(\);) show
0 228 moveto (0335 ) show
0 216 moveto (0336 // mp.c) show
0 204 moveto (0337 extern int      ismp;) show
0 192 moveto (0338 int             mpbcpu\(void\);) show
0 180 moveto (0339 void            mpinit\(void\);) show
0 168 moveto (0340 void            mpstartthem\(void\);) show
0 156 moveto (0341 ) show
0 144 moveto (0342 // picirq.c) show
0 132 moveto (0343 void            picenable\(int\);) show
0 120 moveto (0344 void            picinit\(void\);) show
0 108 moveto (0345 ) show
0 96 moveto (0346 ) show
0 84 moveto (0347 ) show
0 72 moveto (0348 ) show
0 60 moveto (0349 ) show
0 24 moveto (Sheet 03) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/defs.h  Page 3) show
0 648 moveto (0350 // pipe.c) show
0 636 moveto (0351 int             pipealloc\(struct file**, struct file**\);) show
0 624 moveto (0352 void            pipeclose\(struct pipe*, int\);) show
0 612 moveto (0353 int             piperead\(struct pipe*, char*, int\);) show
0 600 moveto (0354 int             pipewrite\(struct pipe*, char*, int\);) show
0 588 moveto (0355 ) show
0 576 moveto (0356 ) show
0 564 moveto (0357 // proc.c) show
0 552 moveto (0358 struct proc*    copyproc\(struct proc*\);) show
0 540 moveto (0359 void            exit\(void\);) show
0 528 moveto (0360 int             fork\(void\);) show
0 516 moveto (0361 int             growproc\(int\);) show
0 504 moveto (0362 int             kill\(int\);) show
0 492 moveto (0363 void            pinit\(void\);) show
0 480 moveto (0364 void            procdump\(void\);) show
0 468 moveto (0365 void            scheduler\(void\) __attribute__\(\(noreturn\)\);) show
0 456 moveto (0366 void            sched\(void\);) show
0 444 moveto (0367 void            sleep\(void*, struct spinlock*\);) show
0 432 moveto (0368 void            userinit\(void\);) show
0 420 moveto (0369 int             wait\(void\);) show
0 408 moveto (0370 void            wakeup\(void*\);) show
0 396 moveto (0371 void            yield\(void\);) show
0 384 moveto (0372 ) show
0 372 moveto (0373 // swtch.S) show
0 360 moveto (0374 void            swtch\(struct context**, struct context*\);) show
0 348 moveto (0375 ) show
0 336 moveto (0376 // spinlock.c) show
0 324 moveto (0377 void            acquire\(struct spinlock*\);) show
0 312 moveto (0378 void            getcallerpcs\(void*, uint*\);) show
0 300 moveto (0379 int             holding\(struct spinlock*\);) show
0 288 moveto (0380 void            initlock\(struct spinlock*, char*\);) show
0 276 moveto (0381 void            release\(struct spinlock*\);) show
0 264 moveto (0382 void            pushcli\(void\);) show
0 252 moveto (0383 void            popcli\(void\);) show
0 240 moveto (0384 ) show
0 228 moveto (0385 // string.c) show
0 216 moveto (0386 int             memcmp\(const void*, const void*, uint\);) show
0 204 moveto (0387 void*           memmove\(void*, const void*, uint\);) show
0 192 moveto (0388 void*           memset\(void*, int, uint\);) show
0 180 moveto (0389 char*           safestrcpy\(char*, const char*, int\);) show
0 168 moveto (0390 int             strlen\(const char*\);) show
0 156 moveto (0391 int             strncmp\(const char*, const char*, uint\);) show
0 144 moveto (0392 char*           strncpy\(char*, const char*, int\);) show
0 132 moveto (0393 ) show
0 120 moveto (0394 // syscall.c) show
0 108 moveto (0395 int             argint\(int, int*\);) show
0 96 moveto (0396 int             argptr\(int, char**, int\);) show
0 84 moveto (0397 int             argstr\(int, char**\);) show
0 72 moveto (0398 int             fetchint\(uint, int*\);) show
0 60 moveto (0399 int             fetchstr\(uint, char**\);) show
0 24 moveto (Sheet 03) show
grestore
restore
showpage
%%Page: 12 12
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/defs.h  Page 4) show
0 648 moveto (0400 void            syscall\(void\);) show
0 636 moveto (0401 ) show
0 624 moveto (0402 // timer.c) show
0 612 moveto (0403 void            timerinit\(void\);) show
0 600 moveto (0404 ) show
0 588 moveto (0405 // trap.c) show
0 576 moveto (0406 void            idtinit\(void\);) show
0 564 moveto (0407 extern uint     ticks;) show
0 552 moveto (0408 void            tvinit\(void\);) show
0 540 moveto (0409 extern struct spinlock tickslock;) show
0 528 moveto (0410 ) show
0 516 moveto (0411 // uart.c) show
0 504 moveto (0412 void            uartinit\(void\);) show
0 492 moveto (0413 void            uartintr\(void\);) show
0 480 moveto (0414 void            uartputc\(int\);) show
0 468 moveto (0415 ) show
0 456 moveto (0416 // vm.c) show
0 444 moveto (0417 void            seginit\(void\);) show
0 432 moveto (0418 void            kvmalloc\(void\);) show
0 420 moveto (0419 void            vmenable\(void\);) show
0 408 moveto (0420 pde_t*          setupkvm\(void\);) show
0 396 moveto (0421 char*           uva2ka\(pde_t*, char*\);) show
0 384 moveto (0422 int             allocuvm\(pde_t*, uint, uint\);) show
0 372 moveto (0423 int             deallocuvm\(pde_t*, uint, uint\);) show
0 360 moveto (0424 void            freevm\(pde_t*\);) show
0 348 moveto (0425 void            inituvm\(pde_t*, char*, uint\);) show
0 336 moveto (0426 int             loaduvm\(pde_t*, char*, struct inode*, uint, uint\);) show
0 324 moveto (0427 pde_t*          copyuvm\(pde_t*, uint\);) show
0 312 moveto (0428 void            switchuvm\(struct proc*\);) show
0 300 moveto (0429 void            switchkvm\(void\);) show
0 288 moveto (0430 int             copyout\(pde_t*, uint, void*, uint\);) show
0 276 moveto (0431 void            clearpteu\(pde_t *pgdir, char *uva\);) show
0 264 moveto (0432 ) show
0 252 moveto (0433 // number of elements in fixed-size array) show
0 240 moveto (0434 #define NELEM\(x\) \(sizeof\(x\)/sizeof\(\(x\)[0]\)\)) show
0 228 moveto (0435 ) show
0 216 moveto (0436 ) show
0 204 moveto (0437 ) show
0 192 moveto (0438 ) show
0 180 moveto (0439 ) show
0 168 moveto (0440 ) show
0 156 moveto (0441 ) show
0 144 moveto (0442 ) show
0 132 moveto (0443 ) show
0 120 moveto (0444 ) show
0 108 moveto (0445 ) show
0 96 moveto (0446 ) show
0 84 moveto (0447 ) show
0 72 moveto (0448 ) show
0 60 moveto (0449 ) show
0 24 moveto (Sheet 04) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/x86.h  Page 1) show
0 648 moveto (0450 // Routines to let C code use special x86 instructions.) show
0 636 moveto (0451 ) show
0 624 moveto (0452 static inline uchar) show
0 612 moveto (0453 inb\(ushort port\)) show
0 600 moveto (0454 {) show
0 588 moveto (0455   uchar data;) show
0 576 moveto (0456 ) show
0 564 moveto (0457   asm volatile\("in %1,%0" : "=a" \(data\) : "d" \(port\)\);) show
0 552 moveto (0458   return data;) show
0 540 moveto (0459 }) show
0 528 moveto (0460 ) show
0 516 moveto (0461 static inline void) show
0 504 moveto (0462 insl\(int port, void *addr, int cnt\)) show
0 492 moveto (0463 {) show
0 480 moveto (0464   asm volatile\("cld; rep insl" :) show
0 468 moveto (0465                "=D" \(addr\), "=c" \(cnt\) :) show
0 456 moveto (0466                "d" \(port\), "0" \(addr\), "1" \(cnt\) :) show
0 444 moveto (0467                "memory", "cc"\);) show
0 432 moveto (0468 }) show
0 420 moveto (0469 ) show
0 408 moveto (0470 static inline void) show
0 396 moveto (0471 outb\(ushort port, uchar data\)) show
0 384 moveto (0472 {) show
0 372 moveto (0473   asm volatile\("out %0,%1" : : "a" \(data\), "d" \(port\)\);) show
0 360 moveto (0474 }) show
0 348 moveto (0475 ) show
0 336 moveto (0476 static inline void) show
0 324 moveto (0477 outw\(ushort port, ushort data\)) show
0 312 moveto (0478 {) show
0 300 moveto (0479   asm volatile\("out %0,%1" : : "a" \(data\), "d" \(port\)\);) show
0 288 moveto (0480 }) show
0 276 moveto (0481 ) show
0 264 moveto (0482 static inline void) show
0 252 moveto (0483 outsl\(int port, const void *addr, int cnt\)) show
0 240 moveto (0484 {) show
0 228 moveto (0485   asm volatile\("cld; rep outsl" :) show
0 216 moveto (0486                "=S" \(addr\), "=c" \(cnt\) :) show
0 204 moveto (0487                "d" \(port\), "0" \(addr\), "1" \(cnt\) :) show
0 192 moveto (0488                "cc"\);) show
0 180 moveto (0489 }) show
0 168 moveto (0490 ) show
0 156 moveto (0491 static inline void) show
0 144 moveto (0492 stosb\(void *addr, int data, int cnt\)) show
0 132 moveto (0493 {) show
0 120 moveto (0494   asm volatile\("cld; rep stosb" :) show
0 108 moveto (0495                "=D" \(addr\), "=c" \(cnt\) :) show
0 96 moveto (0496                "0" \(addr\), "1" \(cnt\), "a" \(data\) :) show
0 84 moveto (0497                "memory", "cc"\);) show
0 72 moveto (0498 }) show
0 60 moveto (0499 ) show
0 24 moveto (Sheet 04) show
grestore
restore
showpage
%%Page: 13 13
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/x86.h  Page 2) show
0 648 moveto (0500 static inline void) show
0 636 moveto (0501 stosl\(void *addr, int data, int cnt\)) show
0 624 moveto (0502 {) show
0 612 moveto (0503   asm volatile\("cld; rep stosl" :) show
0 600 moveto (0504                "=D" \(addr\), "=c" \(cnt\) :) show
0 588 moveto (0505                "0" \(addr\), "1" \(cnt\), "a" \(data\) :) show
0 576 moveto (0506                "memory", "cc"\);) show
0 564 moveto (0507 }) show
0 552 moveto (0508 ) show
0 540 moveto (0509 struct segdesc;) show
0 528 moveto (0510 ) show
0 516 moveto (0511 static inline void) show
0 504 moveto (0512 lgdt\(struct segdesc *p, int size\)) show
0 492 moveto (0513 {) show
0 480 moveto (0514   volatile ushort pd[3];) show
0 468 moveto (0515 ) show
0 456 moveto (0516   pd[0] = size-1;) show
0 444 moveto (0517   pd[1] = \(uint\)p;) show
0 432 moveto (0518   pd[2] = \(uint\)p >> 16;) show
0 420 moveto (0519 ) show
0 408 moveto (0520   asm volatile\("lgdt \(%0\)" : : "r" \(pd\)\);) show
0 396 moveto (0521 }) show
0 384 moveto (0522 ) show
0 372 moveto (0523 struct gatedesc;) show
0 360 moveto (0524 ) show
0 348 moveto (0525 static inline void) show
0 336 moveto (0526 lidt\(struct gatedesc *p, int size\)) show
0 324 moveto (0527 {) show
0 312 moveto (0528   volatile ushort pd[3];) show
0 300 moveto (0529 ) show
0 288 moveto (0530   pd[0] = size-1;) show
0 276 moveto (0531   pd[1] = \(uint\)p;) show
0 264 moveto (0532   pd[2] = \(uint\)p >> 16;) show
0 252 moveto (0533 ) show
0 240 moveto (0534   asm volatile\("lidt \(%0\)" : : "r" \(pd\)\);) show
0 228 moveto (0535 }) show
0 216 moveto (0536 ) show
0 204 moveto (0537 static inline void) show
0 192 moveto (0538 ltr\(ushort sel\)) show
0 180 moveto (0539 {) show
0 168 moveto (0540   asm volatile\("ltr %0" : : "r" \(sel\)\);) show
0 156 moveto (0541 }) show
0 144 moveto (0542 ) show
0 132 moveto (0543 static inline uint) show
0 120 moveto (0544 readeflags\(void\)) show
0 108 moveto (0545 {) show
0 96 moveto (0546   uint eflags;) show
0 84 moveto (0547   asm volatile\("pushfl; popl %0" : "=r" \(eflags\)\);) show
0 72 moveto (0548   return eflags;) show
0 60 moveto (0549 }) show
0 24 moveto (Sheet 05) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/x86.h  Page 3) show
0 648 moveto (0550 static inline void) show
0 636 moveto (0551 loadgs\(ushort v\)) show
0 624 moveto (0552 {) show
0 612 moveto (0553   asm volatile\("movw %0, %%gs" : : "r" \(v\)\);) show
0 600 moveto (0554 }) show
0 588 moveto (0555 ) show
0 576 moveto (0556 static inline void) show
0 564 moveto (0557 cli\(void\)) show
0 552 moveto (0558 {) show
0 540 moveto (0559   asm volatile\("cli"\);) show
0 528 moveto (0560 }) show
0 516 moveto (0561 ) show
0 504 moveto (0562 static inline void) show
0 492 moveto (0563 sti\(void\)) show
0 480 moveto (0564 {) show
0 468 moveto (0565   asm volatile\("sti"\);) show
0 456 moveto (0566 }) show
0 444 moveto (0567 ) show
0 432 moveto (0568 static inline uint) show
0 420 moveto (0569 xchg\(volatile uint *addr, uint newval\)) show
0 408 moveto (0570 {) show
0 396 moveto (0571   uint result;) show
0 384 moveto (0572 ) show
0 372 moveto (0573   // The + in "+m" denotes a read-modify-write operand.) show
0 360 moveto (0574   asm volatile\("lock; xchgl %0, %1" :) show
0 348 moveto (0575                "+m" \(*addr\), "=a" \(result\) :) show
0 336 moveto (0576                "1" \(newval\) :) show
0 324 moveto (0577                "cc"\);) show
0 312 moveto (0578   return result;) show
0 300 moveto (0579 }) show
0 288 moveto (0580 ) show
0 276 moveto (0581 static inline uint) show
0 264 moveto (0582 rcr2\(void\)) show
0 252 moveto (0583 {) show
0 240 moveto (0584   uint val;) show
0 228 moveto (0585   asm volatile\("movl %%cr2,%0" : "=r" \(val\)\);) show
0 216 moveto (0586   return val;) show
0 204 moveto (0587 }) show
0 192 moveto (0588 ) show
0 180 moveto (0589 static inline void) show
0 168 moveto (0590 lcr3\(uint val\)) show
0 156 moveto (0591 {) show
0 144 moveto (0592   asm volatile\("movl %0,%%cr3" : : "r" \(val\)\);) show
0 132 moveto (0593 }) show
0 120 moveto (0594 ) show
0 108 moveto (0595 ) show
0 96 moveto (0596 ) show
0 84 moveto (0597 ) show
0 72 moveto (0598 ) show
0 60 moveto (0599 ) show
0 24 moveto (Sheet 05) show
grestore
restore
showpage
%%Page: 14 14
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/x86.h  Page 4) show
0 648 moveto (0600 // Layout of the trap frame built on the stack by the) show
0 636 moveto (0601 // hardware and by trapasm.S, and passed to trap\(\).) show
0 624 moveto (0602 struct trapframe {) show
0 612 moveto (0603   // registers as pushed by pusha) show
0 600 moveto (0604   uint edi;) show
0 588 moveto (0605   uint esi;) show
0 576 moveto (0606   uint ebp;) show
0 564 moveto (0607   uint oesp;      // useless & ignored) show
0 552 moveto (0608   uint ebx;) show
0 540 moveto (0609   uint edx;) show
0 528 moveto (0610   uint ecx;) show
0 516 moveto (0611   uint eax;) show
0 504 moveto (0612 ) show
0 492 moveto (0613   // rest of trap frame) show
0 480 moveto (0614   ushort gs;) show
0 468 moveto (0615   ushort padding1;) show
0 456 moveto (0616   ushort fs;) show
0 444 moveto (0617   ushort padding2;) show
0 432 moveto (0618   ushort es;) show
0 420 moveto (0619   ushort padding3;) show
0 408 moveto (0620   ushort ds;) show
0 396 moveto (0621   ushort padding4;) show
0 384 moveto (0622   uint trapno;) show
0 372 moveto (0623 ) show
0 360 moveto (0624   // below here defined by x86 hardware) show
0 348 moveto (0625   uint err;) show
0 336 moveto (0626   uint eip;) show
0 324 moveto (0627   ushort cs;) show
0 312 moveto (0628   ushort padding5;) show
0 300 moveto (0629   uint eflags;) show
0 288 moveto (0630 ) show
0 276 moveto (0631   // below here only when crossing rings, such as from user to kernel) show
0 264 moveto (0632   uint esp;) show
0 252 moveto (0633   ushort ss;) show
0 240 moveto (0634   ushort padding6;) show
0 228 moveto (0635 };) show
0 216 moveto (0636 ) show
0 204 moveto (0637 ) show
0 192 moveto (0638 ) show
0 180 moveto (0639 ) show
0 168 moveto (0640 ) show
0 156 moveto (0641 ) show
0 144 moveto (0642 ) show
0 132 moveto (0643 ) show
0 120 moveto (0644 ) show
0 108 moveto (0645 ) show
0 96 moveto (0646 ) show
0 84 moveto (0647 ) show
0 72 moveto (0648 ) show
0 60 moveto (0649 ) show
0 24 moveto (Sheet 06) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/asm.h  Page 1) show
0 648 moveto (0650 //) show
0 636 moveto (0651 // assembler macros to create x86 segments) show
0 624 moveto (0652 //) show
0 612 moveto (0653 ) show
0 600 moveto (0654 #define SEG_NULLASM                                             \\) show
0 588 moveto (0655         .word 0, 0;                                             \\) show
0 576 moveto (0656         .byte 0, 0, 0, 0) show
0 564 moveto (0657 ) show
0 552 moveto (0658 // The 0xC0 means the limit is in 4096-byte units) show
0 540 moveto (0659 // and \(for executable segments\) 32-bit mode.) show
0 528 moveto (0660 #define SEG_ASM\(type,base,lim\)                                  \\) show
0 516 moveto (0661         .word \(\(\(lim\) >> 12\) & 0xffff\), \(\(base\) & 0xffff\);      \\) show
0 504 moveto (0662         .byte \(\(\(base\) >> 16\) & 0xff\), \(0x90 | \(type\)\),         \\) show
0 492 moveto (0663                 \(0xC0 | \(\(\(lim\) >> 28\) & 0xf\)\), \(\(\(base\) >> 24\) & 0xff\)) show
0 480 moveto (0664 ) show
0 468 moveto (0665 #define STA_X     0x8       // Executable segment) show
0 456 moveto (0666 #define STA_E     0x4       // Expand down \(non-executable segments\)) show
0 444 moveto (0667 #define STA_C     0x4       // Conforming code segment \(executable only\)) show
0 432 moveto (0668 #define STA_W     0x2       // Writeable \(non-executable segments\)) show
0 420 moveto (0669 #define STA_R     0x2       // Readable \(executable segments\)) show
0 408 moveto (0670 #define STA_A     0x1       // Accessed) show
0 396 moveto (0671 ) show
0 384 moveto (0672 ) show
0 372 moveto (0673 ) show
0 360 moveto (0674 ) show
0 348 moveto (0675 ) show
0 336 moveto (0676 ) show
0 324 moveto (0677 ) show
0 312 moveto (0678 ) show
0 300 moveto (0679 ) show
0 288 moveto (0680 ) show
0 276 moveto (0681 ) show
0 264 moveto (0682 ) show
0 252 moveto (0683 ) show
0 240 moveto (0684 ) show
0 228 moveto (0685 ) show
0 216 moveto (0686 ) show
0 204 moveto (0687 ) show
0 192 moveto (0688 ) show
0 180 moveto (0689 ) show
0 168 moveto (0690 ) show
0 156 moveto (0691 ) show
0 144 moveto (0692 ) show
0 132 moveto (0693 ) show
0 120 moveto (0694 ) show
0 108 moveto (0695 ) show
0 96 moveto (0696 ) show
0 84 moveto (0697 ) show
0 72 moveto (0698 ) show
0 60 moveto (0699 ) show
0 24 moveto (Sheet 06) show
grestore
restore
showpage
%%Page: 15 15
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/mmu.h  Page 1) show
0 648 moveto (0700 // This file contains definitions for the) show
0 636 moveto (0701 // x86 memory management unit \(MMU\).) show
0 624 moveto (0702 ) show
0 612 moveto (0703 // Eflags register) show
0 600 moveto (0704 #define FL_CF           0x00000001      // Carry Flag) show
0 588 moveto (0705 #define FL_PF           0x00000004      // Parity Flag) show
0 576 moveto (0706 #define FL_AF           0x00000010      // Auxiliary carry Flag) show
0 564 moveto (0707 #define FL_ZF           0x00000040      // Zero Flag) show
0 552 moveto (0708 #define FL_SF           0x00000080      // Sign Flag) show
0 540 moveto (0709 #define FL_TF           0x00000100      // Trap Flag) show
0 528 moveto (0710 #define FL_IF           0x00000200      // Interrupt Enable) show
0 516 moveto (0711 #define FL_DF           0x00000400      // Direction Flag) show
0 504 moveto (0712 #define FL_OF           0x00000800      // Overflow Flag) show
0 492 moveto (0713 #define FL_IOPL_MASK    0x00003000      // I/O Privilege Level bitmask) show
0 480 moveto (0714 #define FL_IOPL_0       0x00000000      //   IOPL == 0) show
0 468 moveto (0715 #define FL_IOPL_1       0x00001000      //   IOPL == 1) show
0 456 moveto (0716 #define FL_IOPL_2       0x00002000      //   IOPL == 2) show
0 444 moveto (0717 #define FL_IOPL_3       0x00003000      //   IOPL == 3) show
0 432 moveto (0718 #define FL_NT           0x00004000      // Nested Task) show
0 420 moveto (0719 #define FL_RF           0x00010000      // Resume Flag) show
0 408 moveto (0720 #define FL_VM           0x00020000      // Virtual 8086 mode) show
0 396 moveto (0721 #define FL_AC           0x00040000      // Alignment Check) show
0 384 moveto (0722 #define FL_VIF          0x00080000      // Virtual Interrupt Flag) show
0 372 moveto (0723 #define FL_VIP          0x00100000      // Virtual Interrupt Pending) show
0 360 moveto (0724 #define FL_ID           0x00200000      // ID flag) show
0 348 moveto (0725 ) show
0 336 moveto (0726 // Control Register flags) show
0 324 moveto (0727 #define CR0_PE          0x00000001      // Protection Enable) show
0 312 moveto (0728 #define CR0_MP          0x00000002      // Monitor coProcessor) show
0 300 moveto (0729 #define CR0_EM          0x00000004      // Emulation) show
0 288 moveto (0730 #define CR0_TS          0x00000008      // Task Switched) show
0 276 moveto (0731 #define CR0_ET          0x00000010      // Extension Type) show
0 264 moveto (0732 #define CR0_NE          0x00000020      // Numeric Errror) show
0 252 moveto (0733 #define CR0_WP          0x00010000      // Write Protect) show
0 240 moveto (0734 #define CR0_AM          0x00040000      // Alignment Mask) show
0 228 moveto (0735 #define CR0_NW          0x20000000      // Not Writethrough) show
0 216 moveto (0736 #define CR0_CD          0x40000000      // Cache Disable) show
0 204 moveto (0737 #define CR0_PG          0x80000000      // Paging) show
0 192 moveto (0738 ) show
0 180 moveto (0739 #define CR4_PSE         0x00000010      // Page size extension) show
0 168 moveto (0740 ) show
0 156 moveto (0741 #define SEG_KCODE 1  // kernel code) show
0 144 moveto (0742 #define SEG_KDATA 2  // kernel data+stack) show
0 132 moveto (0743 #define SEG_KCPU  3  // kernel per-cpu data) show
0 120 moveto (0744 #define SEG_UCODE 4  // user code) show
0 108 moveto (0745 #define SEG_UDATA 5  // user data+stack) show
0 96 moveto (0746 #define SEG_TSS   6  // this process's task state) show
0 84 moveto (0747 ) show
0 72 moveto (0748 ) show
0 60 moveto (0749 ) show
0 24 moveto (Sheet 07) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/mmu.h  Page 2) show
0 648 moveto (0750 #ifndef __ASSEMBLER__) show
0 636 moveto (0751 // Segment Descriptor) show
0 624 moveto (0752 struct segdesc {) show
0 612 moveto (0753   uint lim_15_0 : 16;  // Low bits of segment limit) show
0 600 moveto (0754   uint base_15_0 : 16; // Low bits of segment base address) show
0 588 moveto (0755   uint base_23_16 : 8; // Middle bits of segment base address) show
0 576 moveto (0756   uint type : 4;       // Segment type \(see STS_ constants\)) show
0 564 moveto (0757   uint s : 1;          // 0 = system, 1 = application) show
0 552 moveto (0758   uint dpl : 2;        // Descriptor Privilege Level) show
0 540 moveto (0759   uint p : 1;          // Present) show
0 528 moveto (0760   uint lim_19_16 : 4;  // High bits of segment limit) show
0 516 moveto (0761   uint avl : 1;        // Unused \(available for software use\)) show
0 504 moveto (0762   uint rsv1 : 1;       // Reserved) show
0 492 moveto (0763   uint db : 1;         // 0 = 16-bit segment, 1 = 32-bit segment) show
0 480 moveto (0764   uint g : 1;          // Granularity: limit scaled by 4K when set) show
0 468 moveto (0765   uint base_31_24 : 8; // High bits of segment base address) show
0 456 moveto (0766 };) show
0 444 moveto (0767 ) show
0 432 moveto (0768 // Normal segment) show
0 420 moveto (0769 #define SEG\(type, base, lim, dpl\) \(struct segdesc\)    \\) show
0 408 moveto (0770 { \(\(lim\) >> 12\) & 0xffff, \(uint\)\(base\) & 0xffff,      \\) show
0 396 moveto (0771   \(\(uint\)\(base\) >> 16\) & 0xff, type, 1, dpl, 1,       \\) show
0 384 moveto (0772   \(uint\)\(lim\) >> 28, 0, 0, 1, 1, \(uint\)\(base\) >> 24 }) show
0 372 moveto (0773 #define SEG16\(type, base, lim, dpl\) \(struct segdesc\)  \\) show
0 360 moveto (0774 { \(lim\) & 0xffff, \(uint\)\(base\) & 0xffff,              \\) show
0 348 moveto (0775   \(\(uint\)\(base\) >> 16\) & 0xff, type, 1, dpl, 1,       \\) show
0 336 moveto (0776   \(uint\)\(lim\) >> 16, 0, 0, 1, 0, \(uint\)\(base\) >> 24 }) show
0 324 moveto (0777 #endif) show
0 312 moveto (0778 ) show
0 300 moveto (0779 #define DPL_USER    0x3     // User DPL) show
0 288 moveto (0780 ) show
0 276 moveto (0781 // Application segment type bits) show
0 264 moveto (0782 #define STA_X       0x8     // Executable segment) show
0 252 moveto (0783 #define STA_E       0x4     // Expand down \(non-executable segments\)) show
0 240 moveto (0784 #define STA_C       0x4     // Conforming code segment \(executable only\)) show
0 228 moveto (0785 #define STA_W       0x2     // Writeable \(non-executable segments\)) show
0 216 moveto (0786 #define STA_R       0x2     // Readable \(executable segments\)) show
0 204 moveto (0787 #define STA_A       0x1     // Accessed) show
0 192 moveto (0788 ) show
0 180 moveto (0789 // System segment type bits) show
0 168 moveto (0790 #define STS_T16A    0x1     // Available 16-bit TSS) show
0 156 moveto (0791 #define STS_LDT     0x2     // Local Descriptor Table) show
0 144 moveto (0792 #define STS_T16B    0x3     // Busy 16-bit TSS) show
0 132 moveto (0793 #define STS_CG16    0x4     // 16-bit Call Gate) show
0 120 moveto (0794 #define STS_TG      0x5     // Task Gate / Coum Transmitions) show
0 108 moveto (0795 #define STS_IG16    0x6     // 16-bit Interrupt Gate) show
0 96 moveto (0796 #define STS_TG16    0x7     // 16-bit Trap Gate) show
0 84 moveto (0797 #define STS_T32A    0x9     // Available 32-bit TSS) show
0 72 moveto (0798 #define STS_T32B    0xB     // Busy 32-bit TSS) show
0 60 moveto (0799 #define STS_CG32    0xC     // 32-bit Call Gate) show
0 24 moveto (Sheet 07) show
grestore
restore
showpage
%%Page: 16 16
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/mmu.h  Page 3) show
0 648 moveto (0800 #define STS_IG32    0xE     // 32-bit Interrupt Gate) show
0 636 moveto (0801 #define STS_TG32    0xF     // 32-bit Trap Gate) show
0 624 moveto (0802 ) show
0 612 moveto (0803 // A virtual address 'la' has a three-part structure as follows:) show
0 600 moveto (0804 //) show
0 588 moveto (0805 // +--------10------+-------10-------+---------12----------+) show
0 576 moveto (0806 // | Page Directory |   Page Table   | Offset within Page  |) show
0 564 moveto (0807 // |      Index     |      Index     |                     |) show
0 552 moveto (0808 // +----------------+----------------+---------------------+) show
0 540 moveto (0809 //  \\--- PDX\(va\) --/ \\--- PTX\(va\) --/) show
0 528 moveto (0810 ) show
0 516 moveto (0811 // page directory index) show
0 504 moveto (0812 #define PDX\(va\)         \(\(\(uint\)\(va\) >> PDXSHIFT\) & 0x3FF\)) show
0 492 moveto (0813 ) show
0 480 moveto (0814 // page table index) show
0 468 moveto (0815 #define PTX\(va\)         \(\(\(uint\)\(va\) >> PTXSHIFT\) & 0x3FF\)) show
0 456 moveto (0816 ) show
0 444 moveto (0817 // construct virtual address from indexes and offset) show
0 432 moveto (0818 #define PGADDR\(d, t, o\) \(\(uint\)\(\(d\) << PDXSHIFT | \(t\) << PTXSHIFT | \(o\)\)\)) show
0 420 moveto (0819 ) show
0 408 moveto (0820 // Page directory and page table constants.) show
0 396 moveto (0821 #define NPDENTRIES      1024    // # directory entries per page directory) show
0 384 moveto (0822 #define NPTENTRIES      1024    // # PTEs per page table) show
0 372 moveto (0823 #define PGSIZE          4096    // bytes mapped by a page) show
0 360 moveto (0824 ) show
0 348 moveto (0825 #define PGSHIFT         12      // log2\(PGSIZE\)) show
0 336 moveto (0826 #define PTXSHIFT        12      // offset of PTX in a linear address) show
0 324 moveto (0827 #define PDXSHIFT        22      // offset of PDX in a linear address) show
0 312 moveto (0828 ) show
0 300 moveto (0829 #define PGROUNDUP\(sz\)  \(\(\(sz\)+PGSIZE-1\) & ~\(PGSIZE-1\)\)) show
0 288 moveto (0830 #define PGROUNDDOWN\(a\) \(\(\(a\)\) & ~\(PGSIZE-1\)\)) show
0 276 moveto (0831 ) show
0 264 moveto (0832 // Page table/directory entry flags.) show
0 252 moveto (0833 #define PTE_P           0x001   // Present) show
0 240 moveto (0834 #define PTE_W           0x002   // Writeable) show
0 228 moveto (0835 #define PTE_U           0x004   // User) show
0 216 moveto (0836 #define PTE_PWT         0x008   // Write-Through) show
0 204 moveto (0837 #define PTE_PCD         0x010   // Cache-Disable) show
0 192 moveto (0838 #define PTE_A           0x020   // Accessed) show
0 180 moveto (0839 #define PTE_D           0x040   // Dirty) show
0 168 moveto (0840 #define PTE_PS          0x080   // Page Size) show
0 156 moveto (0841 #define PTE_MBZ         0x180   // Bits must be zero) show
0 144 moveto (0842 ) show
0 132 moveto (0843 // Address in page table or page directory entry) show
0 120 moveto (0844 #define PTE_ADDR\(pte\)   \(\(uint\)\(pte\) & ~0xFFF\)) show
0 108 moveto (0845 ) show
0 96 moveto (0846 #ifndef __ASSEMBLER__) show
0 84 moveto (0847 typedef uint pte_t;) show
0 72 moveto (0848 ) show
0 60 moveto (0849 ) show
0 24 moveto (Sheet 08) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/mmu.h  Page 4) show
0 648 moveto (0850 // Task state segment format) show
0 636 moveto (0851 struct taskstate {) show
0 624 moveto (0852   uint link;         // Old ts selector) show
0 612 moveto (0853   uint esp0;         // Stack pointers and segment selectors) show
0 600 moveto (0854   ushort ss0;        //   after an increase in privilege level) show
0 588 moveto (0855   ushort padding1;) show
0 576 moveto (0856   uint *esp1;) show
0 564 moveto (0857   ushort ss1;) show
0 552 moveto (0858   ushort padding2;) show
0 540 moveto (0859   uint *esp2;) show
0 528 moveto (0860   ushort ss2;) show
0 516 moveto (0861   ushort padding3;) show
0 504 moveto (0862   void *cr3;         // Page directory base) show
0 492 moveto (0863   uint *eip;         // Saved state from last task switch) show
0 480 moveto (0864   uint eflags;) show
0 468 moveto (0865   uint eax;          // More saved state \(registers\)) show
0 456 moveto (0866   uint ecx;) show
0 444 moveto (0867   uint edx;) show
0 432 moveto (0868   uint ebx;) show
0 420 moveto (0869   uint *esp;) show
0 408 moveto (0870   uint *ebp;) show
0 396 moveto (0871   uint esi;) show
0 384 moveto (0872   uint edi;) show
0 372 moveto (0873   ushort es;         // Even more saved state \(segment selectors\)) show
0 360 moveto (0874   ushort padding4;) show
0 348 moveto (0875   ushort cs;) show
0 336 moveto (0876   ushort padding5;) show
0 324 moveto (0877   ushort ss;) show
0 312 moveto (0878   ushort padding6;) show
0 300 moveto (0879   ushort ds;) show
0 288 moveto (0880   ushort padding7;) show
0 276 moveto (0881   ushort fs;) show
0 264 moveto (0882   ushort padding8;) show
0 252 moveto (0883   ushort gs;) show
0 240 moveto (0884   ushort padding9;) show
0 228 moveto (0885   ushort ldt;) show
0 216 moveto (0886   ushort padding10;) show
0 204 moveto (0887   ushort t;          // Trap on task switch) show
0 192 moveto (0888   ushort iomb;       // I/O map base address) show
0 180 moveto (0889 };) show
0 168 moveto (0890 ) show
0 156 moveto (0891 ) show
0 144 moveto (0892 ) show
0 132 moveto (0893 ) show
0 120 moveto (0894 ) show
0 108 moveto (0895 ) show
0 96 moveto (0896 ) show
0 84 moveto (0897 ) show
0 72 moveto (0898 ) show
0 60 moveto (0899 ) show
0 24 moveto (Sheet 08) show
grestore
restore
showpage
%%Page: 17 17
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/mmu.h  Page 5) show
0 648 moveto (0900 // Gate descriptors for interrupts and traps) show
0 636 moveto (0901 struct gatedesc {) show
0 624 moveto (0902   uint off_15_0 : 16;   // low 16 bits of offset in segment) show
0 612 moveto (0903   uint cs : 16;         // code segment selector) show
0 600 moveto (0904   uint args : 5;        // # args, 0 for interrupt/trap gates) show
0 588 moveto (0905   uint rsv1 : 3;        // reserved\(should be zero I guess\)) show
0 576 moveto (0906   uint type : 4;        // type\(STS_{TG,IG32,TG32}\)) show
0 564 moveto (0907   uint s : 1;           // must be 0 \(system\)) show
0 552 moveto (0908   uint dpl : 2;         // descriptor\(meaning new\) privilege level) show
0 540 moveto (0909   uint p : 1;           // Present) show
0 528 moveto (0910   uint off_31_16 : 16;  // high bits of offset in segment) show
0 516 moveto (0911 };) show
0 504 moveto (0912 ) show
0 492 moveto (0913 // Set up a normal interrupt/trap gate descriptor.) show
0 480 moveto (0914 // - istrap: 1 for a trap \(= exception\) gate, 0 for an interrupt gate.) show
0 468 moveto (0915 //   interrupt gate clears FL_IF, trap gate leaves FL_IF alone) show
0 456 moveto (0916 // - sel: Code segment selector for interrupt/trap handler) show
0 444 moveto (0917 // - off: Offset in code segment for interrupt/trap handler) show
0 432 moveto (0918 // - dpl: Descriptor Privilege Level -) show
0 420 moveto (0919 //        the privilege level required for software to invoke) show
0 408 moveto (0920 //        this interrupt/trap gate explicitly using an int instruction.) show
0 396 moveto (0921 #define SETGATE\(gate, istrap, sel, off, d\)                \\) show
0 384 moveto (0922 {                                                         \\) show
0 372 moveto (0923   \(gate\).off_15_0 = \(uint\)\(off\) & 0xffff;                \\) show
0 360 moveto (0924   \(gate\).cs = \(sel\);                                      \\) show
0 348 moveto (0925   \(gate\).args = 0;                                        \\) show
0 336 moveto (0926   \(gate\).rsv1 = 0;                                        \\) show
0 324 moveto (0927   \(gate\).type = \(istrap\) ? STS_TG32 : STS_IG32;           \\) show
0 312 moveto (0928   \(gate\).s = 0;                                           \\) show
0 300 moveto (0929   \(gate\).dpl = \(d\);                                       \\) show
0 288 moveto (0930   \(gate\).p = 1;                                           \\) show
0 276 moveto (0931   \(gate\).off_31_16 = \(uint\)\(off\) >> 16;                  \\) show
0 264 moveto (0932 }) show
0 252 moveto (0933 ) show
0 240 moveto (0934 #endif) show
0 228 moveto (0935 ) show
0 216 moveto (0936 ) show
0 204 moveto (0937 ) show
0 192 moveto (0938 ) show
0 180 moveto (0939 ) show
0 168 moveto (0940 ) show
0 156 moveto (0941 ) show
0 144 moveto (0942 ) show
0 132 moveto (0943 ) show
0 120 moveto (0944 ) show
0 108 moveto (0945 ) show
0 96 moveto (0946 ) show
0 84 moveto (0947 ) show
0 72 moveto (0948 ) show
0 60 moveto (0949 ) show
0 24 moveto (Sheet 09) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/elf.h  Page 1) show
0 648 moveto (0950 // Format of an ELF executable file) show
0 636 moveto (0951 ) show
0 624 moveto (0952 #define ELF_MAGIC 0x464C457FU  // "\\x7FELF" in little endian) show
0 612 moveto (0953 ) show
0 600 moveto (0954 // File header) show
0 588 moveto (0955 struct elfhdr {) show
0 576 moveto (0956   uint magic;  // must equal ELF_MAGIC) show
0 564 moveto (0957   uchar elf[12];) show
0 552 moveto (0958   ushort type;) show
0 540 moveto (0959   ushort machine;) show
0 528 moveto (0960   uint version;) show
0 516 moveto (0961   uint entry;) show
0 504 moveto (0962   uint phoff;) show
0 492 moveto (0963   uint shoff;) show
0 480 moveto (0964   uint flags;) show
0 468 moveto (0965   ushort ehsize;) show
0 456 moveto (0966   ushort phentsize;) show
0 444 moveto (0967   ushort phnum;) show
0 432 moveto (0968   ushort shentsize;) show
0 420 moveto (0969   ushort shnum;) show
0 408 moveto (0970   ushort shstrndx;) show
0 396 moveto (0971 };) show
0 384 moveto (0972 ) show
0 372 moveto (0973 // Program section header) show
0 360 moveto (0974 struct proghdr {) show
0 348 moveto (0975   uint type;) show
0 336 moveto (0976   uint off;) show
0 324 moveto (0977   uint vaddr;) show
0 312 moveto (0978   uint paddr;) show
0 300 moveto (0979   uint filesz;) show
0 288 moveto (0980   uint memsz;) show
0 276 moveto (0981   uint flags;) show
0 264 moveto (0982   uint align;) show
0 252 moveto (0983 };) show
0 240 moveto (0984 ) show
0 228 moveto (0985 // Values for Proghdr type) show
0 216 moveto (0986 #define ELF_PROG_LOAD           1) show
0 204 moveto (0987 ) show
0 192 moveto (0988 // Flag bits for Proghdr flags) show
0 180 moveto (0989 #define ELF_PROG_FLAG_EXEC      1) show
0 168 moveto (0990 #define ELF_PROG_FLAG_WRITE     2) show
0 156 moveto (0991 #define ELF_PROG_FLAG_READ      4) show
0 144 moveto (0992 ) show
0 132 moveto (0993 ) show
0 120 moveto (0994 ) show
0 108 moveto (0995 ) show
0 96 moveto (0996 ) show
0 84 moveto (0997 ) show
0 72 moveto (0998 ) show
0 60 moveto (0999 ) show
0 24 moveto (Sheet 09) show
grestore
restore
showpage
%%Page: 18 18
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/entry.S  Page 1) show
0 648 moveto (1000 # Multiboot header, for multiboot boot loaders like GNU Grub.) show
0 636 moveto (1001 # http://www.gnu.org/software/grub/manual/multiboot/multiboot.html) show
0 624 moveto (1002 #) show
0 612 moveto (1003 # Using GRUB 2, you can boot xv6 from a file stored in a) show
0 600 moveto (1004 # Linux file system by copying kernel or kernelmemfs to /boot) show
0 588 moveto (1005 # and then adding this menu entry:) show
0 576 moveto (1006 #) show
0 564 moveto (1007 # menuentry "xv6" {) show
0 552 moveto (1008 # ) show
8 mp_a_x mul 552 moveto (insmod ext2) show
0 540 moveto (1009 # ) show
8 mp_a_x mul 540 moveto (set root='\(hd0,msdos1\)') show
0 528 moveto (1010 # ) show
8 mp_a_x mul 528 moveto (set kernel='/boot/kernel') show
0 516 moveto (1011 # ) show
8 mp_a_x mul 516 moveto (echo "Loading ${kernel}...") show
0 504 moveto (1012 # ) show
8 mp_a_x mul 504 moveto (multiboot ${kernel} ${kernel}) show
0 492 moveto (1013 # ) show
8 mp_a_x mul 492 moveto (boot) show
0 480 moveto (1014 # }) show
0 468 moveto (1015 ) show
0 456 moveto (1016 #include "asm.h") show
0 444 moveto (1017 #include "memlayout.h") show
0 432 moveto (1018 #include "mmu.h") show
0 420 moveto (1019 #include "param.h") show
0 408 moveto (1020 ) show
0 396 moveto (1021 # Multiboot header.  Data to direct multiboot loader.) show
0 384 moveto (1022 .p2align 2) show
0 372 moveto (1023 .text) show
0 360 moveto (1024 .globl multiboot_header) show
0 348 moveto (1025 multiboot_header:) show
0 336 moveto (1026   #define magic 0x1badb002) show
0 324 moveto (1027   #define flags 0) show
0 312 moveto (1028   .long magic) show
0 300 moveto (1029   .long flags) show
0 288 moveto (1030   .long \(-magic-flags\)) show
0 276 moveto (1031 ) show
0 264 moveto (1032 # By convention, the _start symbol specifies the ELF entry point.) show
0 252 moveto (1033 # Since we haven't set up virtual memory yet, our entry point is) show
0 240 moveto (1034 # the physical address of 'entry'.) show
0 228 moveto (1035 .globl _start) show
0 216 moveto (1036 _start = V2P_WO\(entry\)) show
0 204 moveto (1037 ) show
0 192 moveto (1038 # Entering xv6 on boot processor, with paging off.) show
0 180 moveto (1039 .globl entry) show
0 168 moveto (1040 entry:) show
0 156 moveto (1041   # Turn on page size extension for 4Mbyte pages) show
0 144 moveto (1042   movl    %cr4, %eax) show
0 132 moveto (1043   orl     $\(CR4_PSE\), %eax) show
0 120 moveto (1044   movl    %eax, %cr4) show
0 108 moveto (1045   # Set page directory) show
0 96 moveto (1046   movl    $\(V2P_WO\(entrypgdir\)\), %eax) show
0 84 moveto (1047   movl    %eax, %cr3) show
0 72 moveto (1048   # Turn on paging.) show
0 60 moveto (1049   movl    %cr0, %eax) show
0 24 moveto (Sheet 10) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/entry.S  Page 2) show
0 648 moveto (1050   orl     $\(CR0_PG|CR0_WP\), %eax) show
0 636 moveto (1051   movl    %eax, %cr0) show
0 624 moveto (1052 ) show
0 612 moveto (1053   # Set up the stack pointer.) show
0 600 moveto (1054   movl $\(stack + KSTACKSIZE\), %esp) show
0 588 moveto (1055 ) show
0 576 moveto (1056   # Jump to main\(\), and switch to executing at) show
0 564 moveto (1057   # high addresses. The indirect call is needed because) show
0 552 moveto (1058   # the assembler produces a PC-relative instruction) show
0 540 moveto (1059   # for a direct jump.) show
0 528 moveto (1060   mov $main, %eax) show
0 516 moveto (1061   jmp *%eax) show
0 504 moveto (1062 ) show
0 492 moveto (1063 .comm stack, KSTACKSIZE) show
0 480 moveto (1064 ) show
0 468 moveto (1065 ) show
0 456 moveto (1066 ) show
0 444 moveto (1067 ) show
0 432 moveto (1068 ) show
0 420 moveto (1069 ) show
0 408 moveto (1070 ) show
0 396 moveto (1071 ) show
0 384 moveto (1072 ) show
0 372 moveto (1073 ) show
0 360 moveto (1074 ) show
0 348 moveto (1075 ) show
0 336 moveto (1076 ) show
0 324 moveto (1077 ) show
0 312 moveto (1078 ) show
0 300 moveto (1079 ) show
0 288 moveto (1080 ) show
0 276 moveto (1081 ) show
0 264 moveto (1082 ) show
0 252 moveto (1083 ) show
0 240 moveto (1084 ) show
0 228 moveto (1085 ) show
0 216 moveto (1086 ) show
0 204 moveto (1087 ) show
0 192 moveto (1088 ) show
0 180 moveto (1089 ) show
0 168 moveto (1090 ) show
0 156 moveto (1091 ) show
0 144 moveto (1092 ) show
0 132 moveto (1093 ) show
0 120 moveto (1094 ) show
0 108 moveto (1095 ) show
0 96 moveto (1096 ) show
0 84 moveto (1097 ) show
0 72 moveto (1098 ) show
0 60 moveto (1099 ) show
0 24 moveto (Sheet 10) show
grestore
restore
showpage
%%Page: 19 19
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/entryother.S  Page 1) show
0 648 moveto (1100 #include "asm.h") show
0 636 moveto (1101 #include "memlayout.h") show
0 624 moveto (1102 #include "mmu.h") show
0 612 moveto (1103 ) show
0 600 moveto (1104 # Each non-boot CPU \("AP"\) is started up in response to a STARTUP) show
0 588 moveto (1105 # IPI from the boot CPU.  Section B.4.2 of the Multi-Processor) show
0 576 moveto (1106 # Specification says that the AP will start in real mode with CS:IP) show
0 564 moveto (1107 # set to XY00:0000, where XY is an 8-bit value sent with the) show
0 552 moveto (1108 # STARTUP. Thus this code must start at a 4096-byte boundary.) show
0 540 moveto (1109 #) show
0 528 moveto (1110 # Because this code sets DS to zero, it must sit) show
0 516 moveto (1111 # at an address in the low 2^16 bytes.) show
0 504 moveto (1112 #) show
0 492 moveto (1113 # Startothers \(in main.c\) sends the STARTUPs one at a time.) show
0 480 moveto (1114 # It copies this code \(start\) at 0x7000.  It puts the address of) show
0 468 moveto (1115 # a newly allocated per-core stack in start-4,the address of the) show
0 456 moveto (1116 # place to jump to \(mpenter\) in start-8, and the physical address) show
0 444 moveto (1117 # of entrypgdir in start-12.) show
0 432 moveto (1118 #) show
0 420 moveto (1119 # This code is identical to bootasm.S except:) show
0 408 moveto (1120 #   - it does not need to enable A20) show
0 396 moveto (1121 #   - it uses the address at start-4, start-8, and start-12) show
0 384 moveto (1122 ) show
0 372 moveto (1123 .code16) show
0 360 moveto (1124 .globl start) show
0 348 moveto (1125 start:) show
0 336 moveto (1126   cli) show
0 324 moveto (1127 ) show
0 312 moveto (1128   xorw    %ax,%ax) show
0 300 moveto (1129   movw    %ax,%ds) show
0 288 moveto (1130   movw    %ax,%es) show
0 276 moveto (1131   movw    %ax,%ss) show
0 264 moveto (1132 ) show
0 252 moveto (1133   lgdt    gdtdesc) show
0 240 moveto (1134   movl    %cr0, %eax) show
0 228 moveto (1135   orl     $CR0_PE, %eax) show
0 216 moveto (1136   movl    %eax, %cr0) show
0 204 moveto (1137 ) show
0 192 moveto (1138 ) show
0 180 moveto (1139 ) show
0 168 moveto (1140 ) show
0 156 moveto (1141 ) show
0 144 moveto (1142 ) show
0 132 moveto (1143 ) show
0 120 moveto (1144 ) show
0 108 moveto (1145 ) show
0 96 moveto (1146 ) show
0 84 moveto (1147 ) show
0 72 moveto (1148 ) show
0 60 moveto (1149 ) show
0 24 moveto (Sheet 11) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/entryother.S  Page 2) show
0 648 moveto (1150   ljmpl    $\(SEG_KCODE<<3\), $\(start32\)) show
0 636 moveto (1151 ) show
0 624 moveto (1152 .code32) show
0 612 moveto (1153 start32:) show
0 600 moveto (1154   movw    $\(SEG_KDATA<<3\), %ax) show
0 588 moveto (1155   movw    %ax, %ds) show
0 576 moveto (1156   movw    %ax, %es) show
0 564 moveto (1157   movw    %ax, %ss) show
0 552 moveto (1158   movw    $0, %ax) show
0 540 moveto (1159   movw    %ax, %fs) show
0 528 moveto (1160   movw    %ax, %gs) show
0 516 moveto (1161 ) show
0 504 moveto (1162   # Turn on page size extension for 4Mbyte pages) show
0 492 moveto (1163   movl    %cr4, %eax) show
0 480 moveto (1164   orl     $\(CR4_PSE\), %eax) show
0 468 moveto (1165   movl    %eax, %cr4) show
0 456 moveto (1166   # Use enterpgdir as our initial page table) show
0 444 moveto (1167   movl    \(start-12\), %eax) show
0 432 moveto (1168   movl    %eax, %cr3) show
0 420 moveto (1169   # Turn on paging.) show
0 408 moveto (1170   movl    %cr0, %eax) show
0 396 moveto (1171   orl     $\(CR0_PE|CR0_PG|CR0_WP\), %eax) show
0 384 moveto (1172   movl    %eax, %cr0) show
0 372 moveto (1173 ) show
0 360 moveto (1174   # Switch to the stack allocated by startothers\(\)) show
0 348 moveto (1175   movl    \(start-4\), %esp) show
0 336 moveto (1176   # Call mpenter\(\)) show
0 324 moveto (1177   call) show
17 mp_a_x mul 324 moveto (*\(start-8\)) show
0 312 moveto (1178 ) show
0 300 moveto (1179   movw    $0x8a00, %ax) show
0 288 moveto (1180   movw    %ax, %dx) show
0 276 moveto (1181   outw    %ax, %dx) show
0 264 moveto (1182   movw    $0x8ae0, %ax) show
0 252 moveto (1183   outw    %ax, %dx) show
0 240 moveto (1184 spin:) show
0 228 moveto (1185   jmp     spin) show
0 216 moveto (1186 ) show
0 204 moveto (1187 .p2align 2) show
0 192 moveto (1188 gdt:) show
0 180 moveto (1189   SEG_NULLASM) show
0 168 moveto (1190   SEG_ASM\(STA_X|STA_R, 0, 0xffffffff\)) show
0 156 moveto (1191   SEG_ASM\(STA_W, 0, 0xffffffff\)) show
0 144 moveto (1192 ) show
0 132 moveto (1193 ) show
0 120 moveto (1194 gdtdesc:) show
0 108 moveto (1195   .word   \(gdtdesc - gdt - 1\)) show
0 96 moveto (1196   .long   gdt) show
0 84 moveto (1197 ) show
0 72 moveto (1198 ) show
0 60 moveto (1199 ) show
0 24 moveto (Sheet 11) show
grestore
restore
showpage
%%Page: 20 20
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/main.c  Page 1) show
0 648 moveto (1200 #include "types.h") show
0 636 moveto (1201 #include "defs.h") show
0 624 moveto (1202 #include "param.h") show
0 612 moveto (1203 #include "memlayout.h") show
0 600 moveto (1204 #include "mmu.h") show
0 588 moveto (1205 #include "proc.h") show
0 576 moveto (1206 #include "x86.h") show
0 564 moveto (1207 ) show
0 552 moveto (1208 static void startothers\(void\);) show
0 540 moveto (1209 static void mpmain\(void\)  __attribute__\(\(noreturn\)\);) show
0 528 moveto (1210 extern pde_t *kpgdir;) show
0 516 moveto (1211 extern char end[]; // first address after kernel loaded from ELF file) show
0 504 moveto (1212 ) show
0 492 moveto (1213 // Bootstrap processor starts running C code here.) show
0 480 moveto (1214 // Allocate a real stack and switch to it, first) show
0 468 moveto (1215 // doing some setup required for memory allocator to work.) show
0 456 moveto (1216 int) show
0 444 moveto (1217 main\(void\)) show
0 432 moveto (1218 {) show
0 420 moveto (1219   kinit1\(end, P2V\(4*1024*1024\)\); // phys page allocator) show
0 408 moveto (1220   kvmalloc\(\);      // kernel page table) show
0 396 moveto (1221   mpinit\(\);        // collect info about this machine) show
0 384 moveto (1222   lapicinit\(\);) show
0 372 moveto (1223   seginit\(\);       // set up segments) show
0 360 moveto (1224   cprintf\("\\ncpu%d: starting xv6\\n\\n", cpu->id\);) show
0 348 moveto (1225   picinit\(\);       // interrupt controller) show
0 336 moveto (1226   ioapicinit\(\);    // another interrupt controller) show
0 324 moveto (1227   consoleinit\(\);   // I/O devices & their interrupts) show
0 312 moveto (1228   uartinit\(\);      // serial port) show
0 300 moveto (1229   pinit\(\);         // process table) show
0 288 moveto (1230   tvinit\(\);        // trap vectors) show
0 276 moveto (1231   binit\(\);         // buffer cache) show
0 264 moveto (1232   fileinit\(\);      // file table) show
0 252 moveto (1233   iinit\(\);         // inode cache) show
0 240 moveto (1234   ideinit\(\);       // disk) show
0 228 moveto (1235   if\(!ismp\)) show
0 216 moveto (1236     timerinit\(\);   // uniprocessor timer) show
0 204 moveto (1237   startothers\(\);   // start other processors) show
0 192 moveto (1238   kinit2\(P2V\(4*1024*1024\), P2V\(PHYSTOP\)\); // must come after startothers\(\)) show
0 180 moveto (1239   userinit\(\);      // first user process) show
0 168 moveto (1240   // Finish setting up this processor in mpmain.) show
0 156 moveto (1241   mpmain\(\);) show
0 144 moveto (1242 }) show
0 132 moveto (1243 ) show
0 120 moveto (1244 ) show
0 108 moveto (1245 ) show
0 96 moveto (1246 ) show
0 84 moveto (1247 ) show
0 72 moveto (1248 ) show
0 60 moveto (1249 ) show
0 24 moveto (Sheet 12) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/main.c  Page 2) show
0 648 moveto (1250 // Other CPUs jump here from entryother.S.) show
0 636 moveto (1251 static void) show
0 624 moveto (1252 mpenter\(void\)) show
0 612 moveto (1253 {) show
0 600 moveto (1254   switchkvm\(\);) show
0 588 moveto (1255   seginit\(\);) show
0 576 moveto (1256   lapicinit\(\);) show
0 564 moveto (1257   mpmain\(\);) show
0 552 moveto (1258 }) show
0 540 moveto (1259 ) show
0 528 moveto (1260 // Common CPU setup code.) show
0 516 moveto (1261 static void) show
0 504 moveto (1262 mpmain\(void\)) show
0 492 moveto (1263 {) show
0 480 moveto (1264   cprintf\("cpu%d: starting\\n", cpu->id\);) show
0 468 moveto (1265   idtinit\(\);       // load idt register) show
0 456 moveto (1266   xchg\(&cpu->started, 1\); // tell startothers\(\) we're up) show
0 444 moveto (1267   scheduler\(\);     // start running processes) show
0 432 moveto (1268 }) show
0 420 moveto (1269 ) show
0 408 moveto (1270 pde_t entrypgdir[];  // For entry.S) show
0 396 moveto (1271 ) show
0 384 moveto (1272 // Start the non-boot \(AP\) processors.) show
0 372 moveto (1273 static void) show
0 360 moveto (1274 startothers\(void\)) show
0 348 moveto (1275 {) show
0 336 moveto (1276   extern uchar _binary_entryother_start[], _binary_entryother_size[];) show
0 324 moveto (1277   uchar *code;) show
0 312 moveto (1278   struct cpu *c;) show
0 300 moveto (1279   char *stack;) show
0 288 moveto (1280 ) show
0 276 moveto (1281   // Write entry code to unused memory at 0x7000.) show
0 264 moveto (1282   // The linker has placed the image of entryother.S in) show
0 252 moveto (1283   // _binary_entryother_start.) show
0 240 moveto (1284   code = p2v\(0x7000\);) show
0 228 moveto (1285   memmove\(code, _binary_entryother_start, \(uint\)_binary_entryother_size\);) show
0 216 moveto (1286 ) show
0 204 moveto (1287   for\(c = cpus; c < cpus+ncpu; c++\){) show
0 192 moveto (1288     if\(c == cpus+cpunum\(\)\)  // We've started already.) show
0 180 moveto (1289       continue;) show
0 168 moveto (1290 ) show
0 156 moveto (1291     // Tell entryother.S what stack to use, where to enter, and what) show
0 144 moveto (1292     // pgdir to use. We cannot use kpgdir yet, because the AP processor) show
0 132 moveto (1293     // is running in low  memory, so we use entrypgdir for the APs too.) show
0 120 moveto (1294     stack = kalloc\(\);) show
0 108 moveto (1295     *\(void**\)\(code-4\) = stack + KSTACKSIZE;) show
0 96 moveto (1296     *\(void**\)\(code-8\) = mpenter;) show
0 84 moveto (1297     *\(int**\)\(code-12\) = \(void *\) v2p\(entrypgdir\);) show
0 72 moveto (1298 ) show
0 60 moveto (1299     lapicstartap\(c->id, v2p\(code\)\);) show
0 24 moveto (Sheet 12) show
grestore
restore
showpage
%%Page: 21 21
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/main.c  Page 3) show
0 648 moveto (1300     // wait for cpu to finish mpmain\(\)) show
0 636 moveto (1301     while\(c->started == 0\)) show
0 624 moveto (1302       ;) show
0 612 moveto (1303   }) show
0 600 moveto (1304 }) show
0 588 moveto (1305 ) show
0 576 moveto (1306 // Boot page table used in entry.S and entryother.S.) show
0 564 moveto (1307 // Page directories \(and page tables\), must start on a page boundary,) show
0 552 moveto (1308 // hence the "__aligned__" attribute.) show
0 540 moveto (1309 // Use PTE_PS in page directory entry to enable 4Mbyte pages.) show
0 528 moveto (1310 __attribute__\(\(__aligned__\(PGSIZE\)\)\)) show
0 516 moveto (1311 pde_t entrypgdir[NPDENTRIES] = {) show
0 504 moveto (1312   // Map VA's [0, 4MB\) to PA's [0, 4MB\)) show
0 492 moveto (1313   [0] = \(0\) | PTE_P | PTE_W | PTE_PS,) show
0 480 moveto (1314   // Map VA's [KERNBASE, KERNBASE+4MB\) to PA's [0, 4MB\)) show
0 468 moveto (1315   [KERNBASE>>PDXSHIFT] = \(0\) | PTE_P | PTE_W | PTE_PS,) show
0 456 moveto (1316 };) show
0 444 moveto (1317 ) show
0 432 moveto (1318 ) show
0 420 moveto (1319 ) show
0 408 moveto (1320 ) show
0 396 moveto (1321 ) show
0 384 moveto (1322 ) show
0 372 moveto (1323 ) show
0 360 moveto (1324 ) show
0 348 moveto (1325 ) show
0 336 moveto (1326 ) show
0 324 moveto (1327 ) show
0 312 moveto (1328 ) show
0 300 moveto (1329 ) show
0 288 moveto (1330 ) show
0 276 moveto (1331 ) show
0 264 moveto (1332 ) show
0 252 moveto (1333 ) show
0 240 moveto (1334 ) show
0 228 moveto (1335 ) show
0 216 moveto (1336 ) show
0 204 moveto (1337 ) show
0 192 moveto (1338 ) show
0 180 moveto (1339 ) show
0 168 moveto (1340 ) show
0 156 moveto (1341 ) show
0 144 moveto (1342 ) show
0 132 moveto (1343 ) show
0 120 moveto (1344 ) show
0 108 moveto (1345 ) show
0 96 moveto (1346 ) show
0 84 moveto (1347 ) show
0 72 moveto (1348 ) show
0 60 moveto (1349 ) show
0 24 moveto (Sheet 13) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/main.c  Page 4) show
0 648 moveto (1350 // Blank page.) show
0 636 moveto (1351 ) show
0 624 moveto (1352 ) show
0 612 moveto (1353 ) show
0 600 moveto (1354 ) show
0 588 moveto (1355 ) show
0 576 moveto (1356 ) show
0 564 moveto (1357 ) show
0 552 moveto (1358 ) show
0 540 moveto (1359 ) show
0 528 moveto (1360 ) show
0 516 moveto (1361 ) show
0 504 moveto (1362 ) show
0 492 moveto (1363 ) show
0 480 moveto (1364 ) show
0 468 moveto (1365 ) show
0 456 moveto (1366 ) show
0 444 moveto (1367 ) show
0 432 moveto (1368 ) show
0 420 moveto (1369 ) show
0 408 moveto (1370 ) show
0 396 moveto (1371 ) show
0 384 moveto (1372 ) show
0 372 moveto (1373 ) show
0 360 moveto (1374 ) show
0 348 moveto (1375 ) show
0 336 moveto (1376 ) show
0 324 moveto (1377 ) show
0 312 moveto (1378 ) show
0 300 moveto (1379 ) show
0 288 moveto (1380 ) show
0 276 moveto (1381 ) show
0 264 moveto (1382 ) show
0 252 moveto (1383 ) show
0 240 moveto (1384 ) show
0 228 moveto (1385 ) show
0 216 moveto (1386 ) show
0 204 moveto (1387 ) show
0 192 moveto (1388 ) show
0 180 moveto (1389 ) show
0 168 moveto (1390 ) show
0 156 moveto (1391 ) show
0 144 moveto (1392 ) show
0 132 moveto (1393 ) show
0 120 moveto (1394 ) show
0 108 moveto (1395 ) show
0 96 moveto (1396 ) show
0 84 moveto (1397 ) show
0 72 moveto (1398 ) show
0 60 moveto (1399 ) show
0 24 moveto (Sheet 13) show
grestore
restore
showpage
%%Page: 22 22
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/spinlock.h  Page 1) show
0 648 moveto (1400 // Mutual exclusion lock.) show
0 636 moveto (1401 struct spinlock {) show
0 624 moveto (1402   uint locked;       // Is the lock held?) show
0 612 moveto (1403 ) show
0 600 moveto (1404   // For debugging:) show
0 588 moveto (1405   char *name;        // Name of lock.) show
0 576 moveto (1406   struct cpu *cpu;   // The cpu holding the lock.) show
0 564 moveto (1407   uint pcs[10];      // The call stack \(an array of program counters\)) show
0 552 moveto (1408                      // that locked the lock.) show
0 540 moveto (1409 };) show
0 528 moveto (1410 ) show
0 516 moveto (1411 ) show
0 504 moveto (1412 ) show
0 492 moveto (1413 ) show
0 480 moveto (1414 ) show
0 468 moveto (1415 ) show
0 456 moveto (1416 ) show
0 444 moveto (1417 ) show
0 432 moveto (1418 ) show
0 420 moveto (1419 ) show
0 408 moveto (1420 ) show
0 396 moveto (1421 ) show
0 384 moveto (1422 ) show
0 372 moveto (1423 ) show
0 360 moveto (1424 ) show
0 348 moveto (1425 ) show
0 336 moveto (1426 ) show
0 324 moveto (1427 ) show
0 312 moveto (1428 ) show
0 300 moveto (1429 ) show
0 288 moveto (1430 ) show
0 276 moveto (1431 ) show
0 264 moveto (1432 ) show
0 252 moveto (1433 ) show
0 240 moveto (1434 ) show
0 228 moveto (1435 ) show
0 216 moveto (1436 ) show
0 204 moveto (1437 ) show
0 192 moveto (1438 ) show
0 180 moveto (1439 ) show
0 168 moveto (1440 ) show
0 156 moveto (1441 ) show
0 144 moveto (1442 ) show
0 132 moveto (1443 ) show
0 120 moveto (1444 ) show
0 108 moveto (1445 ) show
0 96 moveto (1446 ) show
0 84 moveto (1447 ) show
0 72 moveto (1448 ) show
0 60 moveto (1449 ) show
0 24 moveto (Sheet 14) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/spinlock.c  Page 1) show
0 648 moveto (1450 // Mutual exclusion spin locks.) show
0 636 moveto (1451 ) show
0 624 moveto (1452 #include "types.h") show
0 612 moveto (1453 #include "defs.h") show
0 600 moveto (1454 #include "param.h") show
0 588 moveto (1455 #include "x86.h") show
0 576 moveto (1456 #include "memlayout.h") show
0 564 moveto (1457 #include "mmu.h") show
0 552 moveto (1458 #include "proc.h") show
0 540 moveto (1459 #include "spinlock.h") show
0 528 moveto (1460 ) show
0 516 moveto (1461 void) show
0 504 moveto (1462 initlock\(struct spinlock *lk, char *name\)) show
0 492 moveto (1463 {) show
0 480 moveto (1464   lk->name = name;) show
0 468 moveto (1465   lk->locked = 0;) show
0 456 moveto (1466   lk->cpu = 0;) show
0 444 moveto (1467 }) show
0 432 moveto (1468 ) show
0 420 moveto (1469 // Acquire the lock.) show
0 408 moveto (1470 // Loops \(spins\) until the lock is acquired.) show
0 396 moveto (1471 // Holding a lock for a long time may cause) show
0 384 moveto (1472 // other CPUs to waste time spinning to acquire it.) show
0 372 moveto (1473 void) show
0 360 moveto (1474 acquire\(struct spinlock *lk\)) show
0 348 moveto (1475 {) show
0 336 moveto (1476   pushcli\(\); // disable interrupts to avoid deadlock.) show
0 324 moveto (1477   if\(holding\(lk\)\)) show
0 312 moveto (1478     panic\("acquire"\);) show
0 300 moveto (1479 ) show
0 288 moveto (1480   // The xchg is atomic.) show
0 276 moveto (1481   // It also serializes, so that reads after acquire are not) show
0 264 moveto (1482   // reordered before it.) show
0 252 moveto (1483   while\(xchg\(&lk->locked, 1\) != 0\)) show
0 240 moveto (1484     ;) show
0 228 moveto (1485 ) show
0 216 moveto (1486   // Record info about lock acquisition for debugging.) show
0 204 moveto (1487   lk->cpu = cpu;) show
0 192 moveto (1488   getcallerpcs\(&lk, lk->pcs\);) show
0 180 moveto (1489 }) show
0 168 moveto (1490 ) show
0 156 moveto (1491 ) show
0 144 moveto (1492 ) show
0 132 moveto (1493 ) show
0 120 moveto (1494 ) show
0 108 moveto (1495 ) show
0 96 moveto (1496 ) show
0 84 moveto (1497 ) show
0 72 moveto (1498 ) show
0 60 moveto (1499 ) show
0 24 moveto (Sheet 14) show
grestore
restore
showpage
%%Page: 23 23
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/spinlock.c  Page 2) show
0 648 moveto (1500 // Release the lock.) show
0 636 moveto (1501 void) show
0 624 moveto (1502 release\(struct spinlock *lk\)) show
0 612 moveto (1503 {) show
0 600 moveto (1504   if\(!holding\(lk\)\)) show
0 588 moveto (1505     panic\("release"\);) show
0 576 moveto (1506 ) show
0 564 moveto (1507   lk->pcs[0] = 0;) show
0 552 moveto (1508   lk->cpu = 0;) show
0 540 moveto (1509 ) show
0 528 moveto (1510   // The xchg serializes, so that reads before release are) show
0 516 moveto (1511   // not reordered after it.  The 1996 PentiumPro manual \(Volume 3,) show
0 504 moveto (1512   // 7.2\) says reads can be carried out speculatively and in) show
0 492 moveto (1513   // any order, which implies we need to serialize here.) show
0 480 moveto (1514   // But the 2007 Intel 64 Architecture Memory Ordering White) show
0 468 moveto (1515   // Paper says that Intel 64 and IA-32 will not move a load) show
0 456 moveto (1516   // after a store. So lock->locked = 0 would work here.) show
0 444 moveto (1517   // The xchg being asm volatile ensures gcc emits it after) show
0 432 moveto (1518   // the above assignments \(and after the critical section\).) show
0 420 moveto (1519   xchg\(&lk->locked, 0\);) show
0 408 moveto (1520 ) show
0 396 moveto (1521   popcli\(\);) show
0 384 moveto (1522 }) show
0 372 moveto (1523 ) show
0 360 moveto (1524 // Record the current call stack in pcs[] by following the %ebp chain.) show
0 348 moveto (1525 void) show
0 336 moveto (1526 getcallerpcs\(void *v, uint pcs[]\)) show
0 324 moveto (1527 {) show
0 312 moveto (1528   uint *ebp;) show
0 300 moveto (1529   int i;) show
0 288 moveto (1530 ) show
0 276 moveto (1531   ebp = \(uint*\)v - 2;) show
0 264 moveto (1532   for\(i = 0; i < 10; i++\){) show
0 252 moveto (1533     if\(ebp == 0 || ebp < \(uint*\)KERNBASE || ebp == \(uint*\)0xffffffff\)) show
0 240 moveto (1534       break;) show
0 228 moveto (1535     pcs[i] = ebp[1];     // saved %eip) show
0 216 moveto (1536     ebp = \(uint*\)ebp[0]; // saved %ebp) show
0 204 moveto (1537   }) show
0 192 moveto (1538   for\(; i < 10; i++\)) show
0 180 moveto (1539     pcs[i] = 0;) show
0 168 moveto (1540 }) show
0 156 moveto (1541 ) show
0 144 moveto (1542 // Check whether this cpu is holding the lock.) show
0 132 moveto (1543 int) show
0 120 moveto (1544 holding\(struct spinlock *lock\)) show
0 108 moveto (1545 {) show
0 96 moveto (1546   return lock->locked && lock->cpu == cpu;) show
0 84 moveto (1547 }) show
0 72 moveto (1548 ) show
0 60 moveto (1549 ) show
0 24 moveto (Sheet 15) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/spinlock.c  Page 3) show
0 648 moveto (1550 // Pushcli/popcli are like cli/sti except that they are matched:) show
0 636 moveto (1551 // it takes two popcli to undo two pushcli.  Also, if interrupts) show
0 624 moveto (1552 // are off, then pushcli, popcli leaves them off.) show
0 612 moveto (1553 ) show
0 600 moveto (1554 void) show
0 588 moveto (1555 pushcli\(void\)) show
0 576 moveto (1556 {) show
0 564 moveto (1557   int eflags;) show
0 552 moveto (1558 ) show
0 540 moveto (1559   eflags = readeflags\(\);) show
0 528 moveto (1560   cli\(\);) show
0 516 moveto (1561   if\(cpu->ncli++ == 0\)) show
0 504 moveto (1562     cpu->intena = eflags & FL_IF;) show
0 492 moveto (1563 }) show
0 480 moveto (1564 ) show
0 468 moveto (1565 void) show
0 456 moveto (1566 popcli\(void\)) show
0 444 moveto (1567 {) show
0 432 moveto (1568   if\(readeflags\(\)&FL_IF\)) show
0 420 moveto (1569     panic\("popcli - interruptible"\);) show
0 408 moveto (1570   if\(--cpu->ncli < 0\)) show
0 396 moveto (1571     panic\("popcli"\);) show
0 384 moveto (1572   if\(cpu->ncli == 0 && cpu->intena\)) show
0 372 moveto (1573     sti\(\);) show
0 360 moveto (1574 }) show
0 348 moveto (1575 ) show
0 336 moveto (1576 ) show
0 324 moveto (1577 ) show
0 312 moveto (1578 ) show
0 300 moveto (1579 ) show
0 288 moveto (1580 ) show
0 276 moveto (1581 ) show
0 264 moveto (1582 ) show
0 252 moveto (1583 ) show
0 240 moveto (1584 ) show
0 228 moveto (1585 ) show
0 216 moveto (1586 ) show
0 204 moveto (1587 ) show
0 192 moveto (1588 ) show
0 180 moveto (1589 ) show
0 168 moveto (1590 ) show
0 156 moveto (1591 ) show
0 144 moveto (1592 ) show
0 132 moveto (1593 ) show
0 120 moveto (1594 ) show
0 108 moveto (1595 ) show
0 96 moveto (1596 ) show
0 84 moveto (1597 ) show
0 72 moveto (1598 ) show
0 60 moveto (1599 ) show
0 24 moveto (Sheet 15) show
grestore
restore
showpage
%%Page: 24 24
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/vm.c  Page 1) show
0 648 moveto (1600 #include "param.h") show
0 636 moveto (1601 #include "types.h") show
0 624 moveto (1602 #include "defs.h") show
0 612 moveto (1603 #include "x86.h") show
0 600 moveto (1604 #include "memlayout.h") show
0 588 moveto (1605 #include "mmu.h") show
0 576 moveto (1606 #include "proc.h") show
0 564 moveto (1607 #include "elf.h") show
0 552 moveto (1608 ) show
0 540 moveto (1609 extern char data[];  // defined by kernel.ld) show
0 528 moveto (1610 pde_t *kpgdir;  // for use in scheduler\(\)) show
0 516 moveto (1611 struct segdesc gdt[NSEGS];) show
0 504 moveto (1612 ) show
0 492 moveto (1613 // Set up CPU's kernel segment descriptors.) show
0 480 moveto (1614 // Run once on entry on each CPU.) show
0 468 moveto (1615 void) show
0 456 moveto (1616 seginit\(void\)) show
0 444 moveto (1617 {) show
0 432 moveto (1618   struct cpu *c;) show
0 420 moveto (1619 ) show
0 408 moveto (1620   // Map "logical" addresses to virtual addresses using identity map.) show
0 396 moveto (1621   // Cannot share a CODE descriptor for both kernel and user) show
0 384 moveto (1622   // because it would have to have DPL_USR, but the CPU forbids) show
0 372 moveto (1623   // an interrupt from CPL=0 to DPL=3.) show
0 360 moveto (1624   c = &cpus[cpunum\(\)];) show
0 348 moveto (1625   c->gdt[SEG_KCODE] = SEG\(STA_X|STA_R, 0, 0xffffffff, 0\);) show
0 336 moveto (1626   c->gdt[SEG_KDATA] = SEG\(STA_W, 0, 0xffffffff, 0\);) show
0 324 moveto (1627   c->gdt[SEG_UCODE] = SEG\(STA_X|STA_R, 0, 0xffffffff, DPL_USER\);) show
0 312 moveto (1628   c->gdt[SEG_UDATA] = SEG\(STA_W, 0, 0xffffffff, DPL_USER\);) show
0 300 moveto (1629 ) show
0 288 moveto (1630   // Map cpu, and curproc) show
0 276 moveto (1631   c->gdt[SEG_KCPU] = SEG\(STA_W, &c->cpu, 8, 0\);) show
0 264 moveto (1632 ) show
0 252 moveto (1633   lgdt\(c->gdt, sizeof\(c->gdt\)\);) show
0 240 moveto (1634   loadgs\(SEG_KCPU << 3\);) show
0 228 moveto (1635 ) show
0 216 moveto (1636   // Initialize cpu-local storage.) show
0 204 moveto (1637   cpu = c;) show
0 192 moveto (1638   proc = 0;) show
0 180 moveto (1639 }) show
0 168 moveto (1640 ) show
0 156 moveto (1641 ) show
0 144 moveto (1642 ) show
0 132 moveto (1643 ) show
0 120 moveto (1644 ) show
0 108 moveto (1645 ) show
0 96 moveto (1646 ) show
0 84 moveto (1647 ) show
0 72 moveto (1648 ) show
0 60 moveto (1649 ) show
0 24 moveto (Sheet 16) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/vm.c  Page 2) show
0 648 moveto (1650 // Return the address of the PTE in page table pgdir) show
0 636 moveto (1651 // that corresponds to virtual address va.  If alloc!=0,) show
0 624 moveto (1652 // create any required page table pages.) show
0 612 moveto (1653 static pte_t *) show
0 600 moveto (1654 walkpgdir\(pde_t *pgdir, const void *va, int alloc\)) show
0 588 moveto (1655 {) show
0 576 moveto (1656   pde_t *pde;) show
0 564 moveto (1657   pte_t *pgtab;) show
0 552 moveto (1658 ) show
0 540 moveto (1659   pde = &pgdir[PDX\(va\)];) show
0 528 moveto (1660   if\(*pde & PTE_P\){) show
0 516 moveto (1661     pgtab = \(pte_t*\)p2v\(PTE_ADDR\(*pde\)\);) show
0 504 moveto (1662   } else {) show
0 492 moveto (1663     if\(!alloc || \(pgtab = \(pte_t*\)kalloc\(\)\) == 0\)) show
0 480 moveto (1664       return 0;) show
0 468 moveto (1665     // Make sure all those PTE_P bits are zero.) show
0 456 moveto (1666     memset\(pgtab, 0, PGSIZE\);) show
0 444 moveto (1667     // The permissions here are overly generous, but they can) show
0 432 moveto (1668     // be further restricted by the permissions in the page table) show
0 420 moveto (1669     // entries, if necessary.) show
0 408 moveto (1670     *pde = v2p\(pgtab\) | PTE_P | PTE_W | PTE_U;) show
0 396 moveto (1671   }) show
0 384 moveto (1672   return &pgtab[PTX\(va\)];) show
0 372 moveto (1673 }) show
0 360 moveto (1674 ) show
0 348 moveto (1675 // Create PTEs for virtual addresses starting at va that refer to) show
0 336 moveto (1676 // physical addresses starting at pa. va and size might not) show
0 324 moveto (1677 // be page-aligned.) show
0 312 moveto (1678 static int) show
0 300 moveto (1679 mappages\(pde_t *pgdir, void *va, uint size, uint pa, int perm\)) show
0 288 moveto (1680 {) show
0 276 moveto (1681   char *a, *last;) show
0 264 moveto (1682   pte_t *pte;) show
0 252 moveto (1683 ) show
0 240 moveto (1684   a = \(char*\)PGROUNDDOWN\(\(uint\)va\);) show
0 228 moveto (1685   last = \(char*\)PGROUNDDOWN\(\(\(uint\)va\) + size - 1\);) show
0 216 moveto (1686   for\(;;\){) show
0 204 moveto (1687     if\(\(pte = walkpgdir\(pgdir, a, 1\)\) == 0\)) show
0 192 moveto (1688       return -1;) show
0 180 moveto (1689     if\(*pte & PTE_P\)) show
0 168 moveto (1690       panic\("remap"\);) show
0 156 moveto (1691     *pte = pa | perm | PTE_P;) show
0 144 moveto (1692     if\(a == last\)) show
0 132 moveto (1693       break;) show
0 120 moveto (1694     a += PGSIZE;) show
0 108 moveto (1695     pa += PGSIZE;) show
0 96 moveto (1696   }) show
0 84 moveto (1697   return 0;) show
0 72 moveto (1698 }) show
0 60 moveto (1699 ) show
0 24 moveto (Sheet 16) show
grestore
restore
showpage
%%Page: 25 25
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/vm.c  Page 3) show
0 648 moveto (1700 // There is one page table per process, plus one that's used when) show
0 636 moveto (1701 // a CPU is not running any process \(kpgdir\). The kernel uses the) show
0 624 moveto (1702 // current process's page table during system calls and interrupts;) show
0 612 moveto (1703 // page protection bits prevent user code from using the kernel's) show
0 600 moveto (1704 // mappings.) show
0 588 moveto (1705 //) show
0 576 moveto (1706 // setupkvm\(\) and exec\(\) set up every page table like this:) show
0 564 moveto (1707 //) show
0 552 moveto (1708 //   0..KERNBASE: user memory \(text+data+stack+heap\), mapped to) show
0 540 moveto (1709 //                phys memory allocated by the kernel) show
0 528 moveto (1710 //   KERNBASE..KERNBASE+EXTMEM: mapped to 0..EXTMEM \(for I/O space\)) show
0 516 moveto (1711 //   KERNBASE+EXTMEM..data: mapped to EXTMEM..V2P\(data\)) show
0 504 moveto (1712 //                for the kernel's instructions and r/o data) show
0 492 moveto (1713 //   data..KERNBASE+PHYSTOP: mapped to V2P\(data\)..PHYSTOP,) show
0 480 moveto (1714 //                                  rw data + free physical memory) show
0 468 moveto (1715 //   0xfe000000..0: mapped direct \(devices such as ioapic\)) show
0 456 moveto (1716 //) show
0 444 moveto (1717 // The kernel allocates physical memory for its heap and for user memory) show
0 432 moveto (1718 // between V2P\(end\) and the end of physical memory \(PHYSTOP\)) show
0 420 moveto (1719 // \(directly addressable from end..P2V\(PHYSTOP\)\).) show
0 408 moveto (1720 ) show
0 396 moveto (1721 // This table defines the kernel's mappings, which are present in) show
0 384 moveto (1722 // every process's page table.) show
0 372 moveto (1723 static struct kmap {) show
0 360 moveto (1724   void *virt;) show
0 348 moveto (1725   uint phys_start;) show
0 336 moveto (1726   uint phys_end;) show
0 324 moveto (1727   int perm;) show
0 312 moveto (1728 } kmap[] = {) show
0 300 moveto (1729  { \(void*\)KERNBASE, 0,             EXTMEM,    PTE_W}, // I/O space) show
0 288 moveto (1730  { \(void*\)KERNLINK, V2P\(KERNLINK\), V2P\(data\), 0},     // kern text+rodata) show
0 276 moveto (1731  { \(void*\)data,     V2P\(data\),     PHYSTOP,   PTE_W}, // kern data+memory) show
0 264 moveto (1732  { \(void*\)DEVSPACE, DEVSPACE,      0,         PTE_W}, // more devices) show
0 252 moveto (1733 };) show
0 240 moveto (1734 ) show
0 228 moveto (1735 // Set up kernel part of a page table.) show
0 216 moveto (1736 pde_t*) show
0 204 moveto (1737 setupkvm\(void\)) show
0 192 moveto (1738 {) show
0 180 moveto (1739   pde_t *pgdir;) show
0 168 moveto (1740   struct kmap *k;) show
0 156 moveto (1741 ) show
0 144 moveto (1742   if\(\(pgdir = \(pde_t*\)kalloc\(\)\) == 0\)) show
0 132 moveto (1743     return 0;) show
0 120 moveto (1744   memset\(pgdir, 0, PGSIZE\);) show
0 108 moveto (1745   if \(p2v\(PHYSTOP\) > \(void*\)DEVSPACE\)) show
0 96 moveto (1746     panic\("PHYSTOP too high"\);) show
0 84 moveto (1747   for\(k = kmap; k < &kmap[NELEM\(kmap\)]; k++\)) show
0 72 moveto (1748     if\(mappages\(pgdir, k->virt, k->phys_end - k->phys_start,) show
0 60 moveto (1749                 \(uint\)k->phys_start, k->perm\) < 0\)) show
0 24 moveto (Sheet 17) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/vm.c  Page 4) show
0 648 moveto (1750       return 0;) show
0 636 moveto (1751   return pgdir;) show
0 624 moveto (1752 }) show
0 612 moveto (1753 ) show
0 600 moveto (1754 // Allocate one page table for the machine for the kernel address) show
0 588 moveto (1755 // space for scheduler processes.) show
0 576 moveto (1756 void) show
0 564 moveto (1757 kvmalloc\(void\)) show
0 552 moveto (1758 {) show
0 540 moveto (1759   kpgdir = setupkvm\(\);) show
0 528 moveto (1760   switchkvm\(\);) show
0 516 moveto (1761 }) show
0 504 moveto (1762 ) show
0 492 moveto (1763 // Switch h/w page table register to the kernel-only page table,) show
0 480 moveto (1764 // for when no process is running.) show
0 468 moveto (1765 void) show
0 456 moveto (1766 switchkvm\(void\)) show
0 444 moveto (1767 {) show
0 432 moveto (1768   lcr3\(v2p\(kpgdir\)\);   // switch to the kernel page table) show
0 420 moveto (1769 }) show
0 408 moveto (1770 ) show
0 396 moveto (1771 // Switch TSS and h/w page table to correspond to process p.) show
0 384 moveto (1772 void) show
0 372 moveto (1773 switchuvm\(struct proc *p\)) show
0 360 moveto (1774 {) show
0 348 moveto (1775   pushcli\(\);) show
0 336 moveto (1776   cpu->gdt[SEG_TSS] = SEG16\(STS_T32A, &cpu->ts, sizeof\(cpu->ts\)-1, 0\);) show
0 324 moveto (1777   cpu->gdt[SEG_TSS].s = 0;) show
0 312 moveto (1778   cpu->ts.ss0 = SEG_KDATA << 3;) show
0 300 moveto (1779   cpu->ts.esp0 = \(uint\)proc->kstack + KSTACKSIZE;) show
0 288 moveto (1780   ltr\(SEG_TSS << 3\);) show
0 276 moveto (1781   if\(p->pgdir == 0\)) show
0 264 moveto (1782     panic\("switchuvm: no pgdir"\);) show
0 252 moveto (1783   lcr3\(v2p\(p->pgdir\)\);  // switch to new address space) show
0 240 moveto (1784   popcli\(\);) show
0 228 moveto (1785 }) show
0 216 moveto (1786 ) show
0 204 moveto (1787 ) show
0 192 moveto (1788 ) show
0 180 moveto (1789 ) show
0 168 moveto (1790 ) show
0 156 moveto (1791 ) show
0 144 moveto (1792 ) show
0 132 moveto (1793 ) show
0 120 moveto (1794 ) show
0 108 moveto (1795 ) show
0 96 moveto (1796 ) show
0 84 moveto (1797 ) show
0 72 moveto (1798 ) show
0 60 moveto (1799 ) show
0 24 moveto (Sheet 17) show
grestore
restore
showpage
%%Page: 26 26
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/vm.c  Page 5) show
0 648 moveto (1800 // Load the initcode into address 0 of pgdir.) show
0 636 moveto (1801 // sz must be less than a page.) show
0 624 moveto (1802 void) show
0 612 moveto (1803 inituvm\(pde_t *pgdir, char *init, uint sz\)) show
0 600 moveto (1804 {) show
0 588 moveto (1805   char *mem;) show
0 576 moveto (1806 ) show
0 564 moveto (1807   if\(sz >= PGSIZE\)) show
0 552 moveto (1808     panic\("inituvm: more than a page"\);) show
0 540 moveto (1809   mem = kalloc\(\);) show
0 528 moveto (1810   memset\(mem, 0, PGSIZE\);) show
0 516 moveto (1811   mappages\(pgdir, 0, PGSIZE, v2p\(mem\), PTE_W|PTE_U\);) show
0 504 moveto (1812   memmove\(mem, init, sz\);) show
0 492 moveto (1813 }) show
0 480 moveto (1814 ) show
0 468 moveto (1815 // Load a program segment into pgdir.  addr must be page-aligned) show
0 456 moveto (1816 // and the pages from addr to addr+sz must already be mapped.) show
0 444 moveto (1817 int) show
0 432 moveto (1818 loaduvm\(pde_t *pgdir, char *addr, struct inode *ip, uint offset, uint sz\)) show
0 420 moveto (1819 {) show
0 408 moveto (1820   uint i, pa, n;) show
0 396 moveto (1821   pte_t *pte;) show
0 384 moveto (1822 ) show
0 372 moveto (1823   if\(\(uint\) addr % PGSIZE != 0\)) show
0 360 moveto (1824     panic\("loaduvm: addr must be page aligned"\);) show
0 348 moveto (1825   for\(i = 0; i < sz; i += PGSIZE\){) show
0 336 moveto (1826     if\(\(pte = walkpgdir\(pgdir, addr+i, 0\)\) == 0\)) show
0 324 moveto (1827       panic\("loaduvm: address should exist"\);) show
0 312 moveto (1828     pa = PTE_ADDR\(*pte\);) show
0 300 moveto (1829     if\(sz - i < PGSIZE\)) show
0 288 moveto (1830       n = sz - i;) show
0 276 moveto (1831     else) show
0 264 moveto (1832       n = PGSIZE;) show
0 252 moveto (1833     if\(readi\(ip, p2v\(pa\), offset+i, n\) != n\)) show
0 240 moveto (1834       return -1;) show
0 228 moveto (1835   }) show
0 216 moveto (1836   return 0;) show
0 204 moveto (1837 }) show
0 192 moveto (1838 ) show
0 180 moveto (1839 ) show
0 168 moveto (1840 ) show
0 156 moveto (1841 ) show
0 144 moveto (1842 ) show
0 132 moveto (1843 ) show
0 120 moveto (1844 ) show
0 108 moveto (1845 ) show
0 96 moveto (1846 ) show
0 84 moveto (1847 ) show
0 72 moveto (1848 ) show
0 60 moveto (1849 ) show
0 24 moveto (Sheet 18) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/vm.c  Page 6) show
0 648 moveto (1850 // Allocate page tables and physical memory to grow process from oldsz to) show
0 636 moveto (1851 // newsz, which need not be page aligned.  Returns new size or 0 on error.) show
0 624 moveto (1852 int) show
0 612 moveto (1853 allocuvm\(pde_t *pgdir, uint oldsz, uint newsz\)) show
0 600 moveto (1854 {) show
0 588 moveto (1855   char *mem;) show
0 576 moveto (1856   uint a;) show
0 564 moveto (1857 ) show
0 552 moveto (1858   if\(newsz >= KERNBASE\)) show
0 540 moveto (1859     return 0;) show
0 528 moveto (1860   if\(newsz < oldsz\)) show
0 516 moveto (1861     return oldsz;) show
0 504 moveto (1862 ) show
0 492 moveto (1863   a = PGROUNDUP\(oldsz\);) show
0 480 moveto (1864   for\(; a < newsz; a += PGSIZE\){) show
0 468 moveto (1865     mem = kalloc\(\);) show
0 456 moveto (1866     if\(mem == 0\){) show
0 444 moveto (1867       cprintf\("allocuvm out of memory\\n"\);) show
0 432 moveto (1868       deallocuvm\(pgdir, newsz, oldsz\);) show
0 420 moveto (1869       return 0;) show
0 408 moveto (1870     }) show
0 396 moveto (1871     memset\(mem, 0, PGSIZE\);) show
0 384 moveto (1872     mappages\(pgdir, \(char*\)a, PGSIZE, v2p\(mem\), PTE_W|PTE_U\);) show
0 372 moveto (1873   }) show
0 360 moveto (1874   return newsz;) show
0 348 moveto (1875 }) show
0 336 moveto (1876 ) show
0 324 moveto (1877 // Deallocate user pages to bring the process size from oldsz to) show
0 312 moveto (1878 // newsz.  oldsz and newsz need not be page-aligned, nor does newsz) show
0 300 moveto (1879 // need to be less than oldsz.  oldsz can be larger than the actual) show
0 288 moveto (1880 // process size.  Returns the new process size.) show
0 276 moveto (1881 int) show
0 264 moveto (1882 deallocuvm\(pde_t *pgdir, uint oldsz, uint newsz\)) show
0 252 moveto (1883 {) show
0 240 moveto (1884   pte_t *pte;) show
0 228 moveto (1885   uint a, pa;) show
0 216 moveto (1886 ) show
0 204 moveto (1887   if\(newsz >= oldsz\)) show
0 192 moveto (1888     return oldsz;) show
0 180 moveto (1889 ) show
0 168 moveto (1890   a = PGROUNDUP\(newsz\);) show
0 156 moveto (1891   for\(; a  < oldsz; a += PGSIZE\){) show
0 144 moveto (1892     pte = walkpgdir\(pgdir, \(char*\)a, 0\);) show
0 132 moveto (1893     if\(!pte\)) show
0 120 moveto (1894       a += \(NPTENTRIES - 1\) * PGSIZE;) show
0 108 moveto (1895     else if\(\(*pte & PTE_P\) != 0\){) show
0 96 moveto (1896       pa = PTE_ADDR\(*pte\);) show
0 84 moveto (1897       if\(pa == 0\)) show
0 72 moveto (1898         panic\("kfree"\);) show
0 60 moveto (1899       char *v = p2v\(pa\);) show
0 24 moveto (Sheet 18) show
grestore
restore
showpage
%%Page: 27 27
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/vm.c  Page 7) show
0 648 moveto (1900       kfree\(v\);) show
0 636 moveto (1901       *pte = 0;) show
0 624 moveto (1902     }) show
0 612 moveto (1903   }) show
0 600 moveto (1904   return newsz;) show
0 588 moveto (1905 }) show
0 576 moveto (1906 ) show
0 564 moveto (1907 // Free a page table and all the physical memory pages) show
0 552 moveto (1908 // in the user part.) show
0 540 moveto (1909 void) show
0 528 moveto (1910 freevm\(pde_t *pgdir\)) show
0 516 moveto (1911 {) show
0 504 moveto (1912   uint i;) show
0 492 moveto (1913 ) show
0 480 moveto (1914   if\(pgdir == 0\)) show
0 468 moveto (1915     panic\("freevm: no pgdir"\);) show
0 456 moveto (1916   deallocuvm\(pgdir, KERNBASE, 0\);) show
0 444 moveto (1917   for\(i = 0; i < NPDENTRIES; i++\){) show
0 432 moveto (1918     if\(pgdir[i] & PTE_P\){) show
0 420 moveto (1919       char * v = p2v\(PTE_ADDR\(pgdir[i]\)\);) show
0 408 moveto (1920       kfree\(v\);) show
0 396 moveto (1921     }) show
0 384 moveto (1922   }) show
0 372 moveto (1923   kfree\(\(char*\)pgdir\);) show
0 360 moveto (1924 }) show
0 348 moveto (1925 ) show
0 336 moveto (1926 // Clear PTE_U on a page. Used to create an inaccessible) show
0 324 moveto (1927 // page beneath the user stack.) show
0 312 moveto (1928 void) show
0 300 moveto (1929 clearpteu\(pde_t *pgdir, char *uva\)) show
0 288 moveto (1930 {) show
0 276 moveto (1931   pte_t *pte;) show
0 264 moveto (1932 ) show
0 252 moveto (1933   pte = walkpgdir\(pgdir, uva, 0\);) show
0 240 moveto (1934   if\(pte == 0\)) show
0 228 moveto (1935     panic\("clearpteu"\);) show
0 216 moveto (1936   *pte &= ~PTE_U;) show
0 204 moveto (1937 }) show
0 192 moveto (1938 ) show
0 180 moveto (1939 ) show
0 168 moveto (1940 ) show
0 156 moveto (1941 ) show
0 144 moveto (1942 ) show
0 132 moveto (1943 ) show
0 120 moveto (1944 ) show
0 108 moveto (1945 ) show
0 96 moveto (1946 ) show
0 84 moveto (1947 ) show
0 72 moveto (1948 ) show
0 60 moveto (1949 ) show
0 24 moveto (Sheet 19) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/vm.c  Page 8) show
0 648 moveto (1950 // Given a parent process's page table, create a copy) show
0 636 moveto (1951 // of it for a child.) show
0 624 moveto (1952 pde_t*) show
0 612 moveto (1953 copyuvm\(pde_t *pgdir, uint sz\)) show
0 600 moveto (1954 {) show
0 588 moveto (1955   pde_t *d;) show
0 576 moveto (1956   pte_t *pte;) show
0 564 moveto (1957   uint pa, i;) show
0 552 moveto (1958   char *mem;) show
0 540 moveto (1959 ) show
0 528 moveto (1960   if\(\(d = setupkvm\(\)\) == 0\)) show
0 516 moveto (1961     return 0;) show
0 504 moveto (1962   for\(i = 0; i < sz; i += PGSIZE\){) show
0 492 moveto (1963     if\(\(pte = walkpgdir\(pgdir, \(void *\) i, 0\)\) == 0\)) show
0 480 moveto (1964       panic\("copyuvm: pte should exist"\);) show
0 468 moveto (1965     if\(!\(*pte & PTE_P\)\)) show
0 456 moveto (1966       panic\("copyuvm: page not present"\);) show
0 444 moveto (1967     pa = PTE_ADDR\(*pte\);) show
0 432 moveto (1968     if\(\(mem = kalloc\(\)\) == 0\)) show
0 420 moveto (1969       goto bad;) show
0 408 moveto (1970     memmove\(mem, \(char*\)p2v\(pa\), PGSIZE\);) show
0 396 moveto (1971     if\(mappages\(d, \(void*\)i, PGSIZE, v2p\(mem\), PTE_W|PTE_U\) < 0\)) show
0 384 moveto (1972       goto bad;) show
0 372 moveto (1973   }) show
0 360 moveto (1974   return d;) show
0 348 moveto (1975 ) show
0 336 moveto (1976 bad:) show
0 324 moveto (1977   freevm\(d\);) show
0 312 moveto (1978   return 0;) show
0 300 moveto (1979 }) show
0 288 moveto (1980 ) show
0 276 moveto (1981 ) show
0 264 moveto (1982 ) show
0 252 moveto (1983 ) show
0 240 moveto (1984 ) show
0 228 moveto (1985 ) show
0 216 moveto (1986 ) show
0 204 moveto (1987 ) show
0 192 moveto (1988 ) show
0 180 moveto (1989 ) show
0 168 moveto (1990 ) show
0 156 moveto (1991 ) show
0 144 moveto (1992 ) show
0 132 moveto (1993 ) show
0 120 moveto (1994 ) show
0 108 moveto (1995 ) show
0 96 moveto (1996 ) show
0 84 moveto (1997 ) show
0 72 moveto (1998 ) show
0 60 moveto (1999 ) show
0 24 moveto (Sheet 19) show
grestore
restore
showpage
%%Page: 28 28
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/vm.c  Page 9) show
0 648 moveto (2000 // Map user virtual address to kernel address.) show
0 636 moveto (2001 char*) show
0 624 moveto (2002 uva2ka\(pde_t *pgdir, char *uva\)) show
0 612 moveto (2003 {) show
0 600 moveto (2004   pte_t *pte;) show
0 588 moveto (2005 ) show
0 576 moveto (2006   pte = walkpgdir\(pgdir, uva, 0\);) show
0 564 moveto (2007   if\(\(*pte & PTE_P\) == 0\)) show
0 552 moveto (2008     return 0;) show
0 540 moveto (2009   if\(\(*pte & PTE_U\) == 0\)) show
0 528 moveto (2010     return 0;) show
0 516 moveto (2011   return \(char*\)p2v\(PTE_ADDR\(*pte\)\);) show
0 504 moveto (2012 }) show
0 492 moveto (2013 ) show
0 480 moveto (2014 // Copy len bytes from p to user address va in page table pgdir.) show
0 468 moveto (2015 // Most useful when pgdir is not the current page table.) show
0 456 moveto (2016 // uva2ka ensures this only works for PTE_U pages.) show
0 444 moveto (2017 int) show
0 432 moveto (2018 copyout\(pde_t *pgdir, uint va, void *p, uint len\)) show
0 420 moveto (2019 {) show
0 408 moveto (2020   char *buf, *pa0;) show
0 396 moveto (2021   uint n, va0;) show
0 384 moveto (2022 ) show
0 372 moveto (2023   buf = \(char*\)p;) show
0 360 moveto (2024   while\(len > 0\){) show
0 348 moveto (2025     va0 = \(uint\)PGROUNDDOWN\(va\);) show
0 336 moveto (2026     pa0 = uva2ka\(pgdir, \(char*\)va0\);) show
0 324 moveto (2027     if\(pa0 == 0\)) show
0 312 moveto (2028       return -1;) show
0 300 moveto (2029     n = PGSIZE - \(va - va0\);) show
0 288 moveto (2030     if\(n > len\)) show
0 276 moveto (2031       n = len;) show
0 264 moveto (2032     memmove\(pa0 + \(va - va0\), buf, n\);) show
0 252 moveto (2033     len -= n;) show
0 240 moveto (2034     buf += n;) show
0 228 moveto (2035     va = va0 + PGSIZE;) show
0 216 moveto (2036   }) show
0 204 moveto (2037   return 0;) show
0 192 moveto (2038 }) show
0 180 moveto (2039 ) show
0 168 moveto (2040 ) show
0 156 moveto (2041 ) show
0 144 moveto (2042 ) show
0 132 moveto (2043 ) show
0 120 moveto (2044 ) show
0 108 moveto (2045 ) show
0 96 moveto (2046 ) show
0 84 moveto (2047 ) show
0 72 moveto (2048 ) show
0 60 moveto (2049 ) show
0 24 moveto (Sheet 20) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/proc.h  Page 1) show
0 648 moveto (2050 // Segments in proc->gdt.) show
0 636 moveto (2051 #define NSEGS     7) show
0 624 moveto (2052 ) show
0 612 moveto (2053 // Per-CPU state) show
0 600 moveto (2054 struct cpu {) show
0 588 moveto (2055   uchar id;                    // Local APIC ID; index into cpus[] below) show
0 576 moveto (2056   struct context *scheduler;   // swtch\(\) here to enter scheduler) show
0 564 moveto (2057   struct taskstate ts;         // Used by x86 to find stack for interrupt) show
0 552 moveto (2058   struct segdesc gdt[NSEGS];   // x86 global descriptor table) show
0 540 moveto (2059   volatile uint started;       // Has the CPU started?) show
0 528 moveto (2060   int ncli;                    // Depth of pushcli nesting.) show
0 516 moveto (2061   int intena;                  // Were interrupts enabled before pushcli?) show
0 504 moveto (2062 ) show
0 492 moveto (2063   // Cpu-local storage variables; see below) show
0 480 moveto (2064   struct cpu *cpu;) show
0 468 moveto (2065   struct proc *proc;           // The currently-running process.) show
0 456 moveto (2066 };) show
0 444 moveto (2067 ) show
0 432 moveto (2068 extern struct cpu cpus[NCPU];) show
0 420 moveto (2069 extern int ncpu;) show
0 408 moveto (2070 ) show
0 396 moveto (2071 // Per-CPU variables, holding pointers to the) show
0 384 moveto (2072 // current cpu and to the current process.) show
0 372 moveto (2073 // The asm suffix tells gcc to use "%gs:0" to refer to cpu) show
0 360 moveto (2074 // and "%gs:4" to refer to proc.  seginit sets up the) show
0 348 moveto (2075 // %gs segment register so that %gs refers to the memory) show
0 336 moveto (2076 // holding those two variables in the local cpu's struct cpu.) show
0 324 moveto (2077 // This is similar to how thread-local variables are implemented) show
0 312 moveto (2078 // in thread libraries such as Linux pthreads.) show
0 300 moveto (2079 extern struct cpu *cpu asm\("%gs:0"\);       // &cpus[cpunum\(\)]) show
0 288 moveto (2080 extern struct proc *proc asm\("%gs:4"\);     // cpus[cpunum\(\)].proc) show
0 276 moveto (2081 ) show
0 264 moveto (2082 ) show
0 252 moveto (2083 // Saved registers for kernel context switches.) show
0 240 moveto (2084 // Don't need to save all the segment registers \(%cs, etc\),) show
0 228 moveto (2085 // because they are constant across kernel contexts.) show
0 216 moveto (2086 // Don't need to save %eax, %ecx, %edx, because the) show
0 204 moveto (2087 // x86 convention is that the caller has saved them.) show
0 192 moveto (2088 // Contexts are stored at the bottom of the stack they) show
0 180 moveto (2089 // describe; the stack pointer is the address of the context.) show
0 168 moveto (2090 // The layout of the context matches the layout of the stack in swtch.S) show
0 156 moveto (2091 // at the "Switch stacks" comment. Switch doesn't save eip explicitly,) show
0 144 moveto (2092 // but it is on the stack and allocproc\(\) manipulates it.) show
0 132 moveto (2093 struct context {) show
0 120 moveto (2094   uint edi;) show
0 108 moveto (2095   uint esi;) show
0 96 moveto (2096   uint ebx;) show
0 84 moveto (2097   uint ebp;) show
0 72 moveto (2098   uint eip;) show
0 60 moveto (2099 };) show
0 24 moveto (Sheet 20) show
grestore
restore
showpage
%%Page: 29 29
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/proc.h  Page 2) show
0 648 moveto (2100 enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };) show
0 636 moveto (2101 ) show
0 624 moveto (2102 // Per-process state) show
0 612 moveto (2103 struct proc {) show
0 600 moveto (2104   uint sz;                     // Size of process memory \(bytes\)) show
0 588 moveto (2105   pde_t* pgdir;                // Page table) show
0 576 moveto (2106   char *kstack;                // Bottom of kernel stack for this process) show
0 564 moveto (2107   enum procstate state;        // Process state) show
0 552 moveto (2108   volatile int pid;            // Process ID) show
0 540 moveto (2109   struct proc *parent;         // Parent process) show
0 528 moveto (2110   struct trapframe *tf;        // Trap frame for current syscall) show
0 516 moveto (2111   struct context *context;     // swtch\(\) here to run process) show
0 504 moveto (2112   void *chan;                  // If non-zero, sleeping on chan) show
0 492 moveto (2113   int killed;                  // If non-zero, have been killed) show
0 480 moveto (2114   struct file *ofile[NOFILE];  // Open files) show
0 468 moveto (2115   struct inode *cwd;           // Current directory) show
0 456 moveto (2116   char name[16];               // Process name \(debugging\)) show
0 444 moveto (2117 };) show
0 432 moveto (2118 ) show
0 420 moveto (2119 // Process memory is laid out contiguously, low addresses first:) show
0 408 moveto (2120 //   text) show
0 396 moveto (2121 //   original data and bss) show
0 384 moveto (2122 //   fixed-size stack) show
0 372 moveto (2123 //   expandable heap) show
0 360 moveto (2124 ) show
0 348 moveto (2125 ) show
0 336 moveto (2126 ) show
0 324 moveto (2127 ) show
0 312 moveto (2128 ) show
0 300 moveto (2129 ) show
0 288 moveto (2130 ) show
0 276 moveto (2131 ) show
0 264 moveto (2132 ) show
0 252 moveto (2133 ) show
0 240 moveto (2134 ) show
0 228 moveto (2135 ) show
0 216 moveto (2136 ) show
0 204 moveto (2137 ) show
0 192 moveto (2138 ) show
0 180 moveto (2139 ) show
0 168 moveto (2140 ) show
0 156 moveto (2141 ) show
0 144 moveto (2142 ) show
0 132 moveto (2143 ) show
0 120 moveto (2144 ) show
0 108 moveto (2145 ) show
0 96 moveto (2146 ) show
0 84 moveto (2147 ) show
0 72 moveto (2148 ) show
0 60 moveto (2149 ) show
0 24 moveto (Sheet 21) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/proc.c  Page 1) show
0 648 moveto (2150 #include "types.h") show
0 636 moveto (2151 #include "defs.h") show
0 624 moveto (2152 #include "param.h") show
0 612 moveto (2153 #include "memlayout.h") show
0 600 moveto (2154 #include "mmu.h") show
0 588 moveto (2155 #include "x86.h") show
0 576 moveto (2156 #include "proc.h") show
0 564 moveto (2157 #include "spinlock.h") show
0 552 moveto (2158 ) show
0 540 moveto (2159 struct {) show
0 528 moveto (2160   struct spinlock lock;) show
0 516 moveto (2161   struct proc proc[NPROC];) show
0 504 moveto (2162 } ptable;) show
0 492 moveto (2163 ) show
0 480 moveto (2164 static struct proc *initproc;) show
0 468 moveto (2165 ) show
0 456 moveto (2166 int nextpid = 1;) show
0 444 moveto (2167 extern void forkret\(void\);) show
0 432 moveto (2168 extern void trapret\(void\);) show
0 420 moveto (2169 ) show
0 408 moveto (2170 static void wakeup1\(void *chan\);) show
0 396 moveto (2171 ) show
0 384 moveto (2172 void) show
0 372 moveto (2173 pinit\(void\)) show
0 360 moveto (2174 {) show
0 348 moveto (2175   initlock\(&ptable.lock, "ptable"\);) show
0 336 moveto (2176 }) show
0 324 moveto (2177 ) show
0 312 moveto (2178 ) show
0 300 moveto (2179 ) show
0 288 moveto (2180 ) show
0 276 moveto (2181 ) show
0 264 moveto (2182 ) show
0 252 moveto (2183 ) show
0 240 moveto (2184 ) show
0 228 moveto (2185 ) show
0 216 moveto (2186 ) show
0 204 moveto (2187 ) show
0 192 moveto (2188 ) show
0 180 moveto (2189 ) show
0 168 moveto (2190 ) show
0 156 moveto (2191 ) show
0 144 moveto (2192 ) show
0 132 moveto (2193 ) show
0 120 moveto (2194 ) show
0 108 moveto (2195 ) show
0 96 moveto (2196 ) show
0 84 moveto (2197 ) show
0 72 moveto (2198 ) show
0 60 moveto (2199 ) show
0 24 moveto (Sheet 21) show
grestore
restore
showpage
%%Page: 30 30
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/proc.c  Page 2) show
0 648 moveto (2200 // Look in the process table for an UNUSED proc.) show
0 636 moveto (2201 // If found, change state to EMBRYO and initialize) show
0 624 moveto (2202 // state required to run in the kernel.) show
0 612 moveto (2203 // Otherwise return 0.) show
0 600 moveto (2204 static struct proc*) show
0 588 moveto (2205 allocproc\(void\)) show
0 576 moveto (2206 {) show
0 564 moveto (2207   struct proc *p;) show
0 552 moveto (2208   char *sp;) show
0 540 moveto (2209 ) show
0 528 moveto (2210   acquire\(&ptable.lock\);) show
0 516 moveto (2211   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\)) show
0 504 moveto (2212     if\(p->state == UNUSED\)) show
0 492 moveto (2213       goto found;) show
0 480 moveto (2214   release\(&ptable.lock\);) show
0 468 moveto (2215   return 0;) show
0 456 moveto (2216 ) show
0 444 moveto (2217 found:) show
0 432 moveto (2218   p->state = EMBRYO;) show
0 420 moveto (2219   p->pid = nextpid++;) show
0 408 moveto (2220   release\(&ptable.lock\);) show
0 396 moveto (2221 ) show
0 384 moveto (2222   // Allocate kernel stack.) show
0 372 moveto (2223   if\(\(p->kstack = kalloc\(\)\) == 0\){) show
0 360 moveto (2224     p->state = UNUSED;) show
0 348 moveto (2225     return 0;) show
0 336 moveto (2226   }) show
0 324 moveto (2227   sp = p->kstack + KSTACKSIZE;) show
0 312 moveto (2228 ) show
0 300 moveto (2229   // Leave room for trap frame.) show
0 288 moveto (2230   sp -= sizeof *p->tf;) show
0 276 moveto (2231   p->tf = \(struct trapframe*\)sp;) show
0 264 moveto (2232 ) show
0 252 moveto (2233   // Set up new context to start executing at forkret,) show
0 240 moveto (2234   // which returns to trapret.) show
0 228 moveto (2235   sp -= 4;) show
0 216 moveto (2236   *\(uint*\)sp = \(uint\)trapret;) show
0 204 moveto (2237 ) show
0 192 moveto (2238   sp -= sizeof *p->context;) show
0 180 moveto (2239   p->context = \(struct context*\)sp;) show
0 168 moveto (2240   memset\(p->context, 0, sizeof *p->context\);) show
0 156 moveto (2241   p->context->eip = \(uint\)forkret;) show
0 144 moveto (2242 ) show
0 132 moveto (2243   return p;) show
0 120 moveto (2244 }) show
0 108 moveto (2245 ) show
0 96 moveto (2246 ) show
0 84 moveto (2247 ) show
0 72 moveto (2248 ) show
0 60 moveto (2249 ) show
0 24 moveto (Sheet 22) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/proc.c  Page 3) show
0 648 moveto (2250 // Set up first user process.) show
0 636 moveto (2251 void) show
0 624 moveto (2252 userinit\(void\)) show
0 612 moveto (2253 {) show
0 600 moveto (2254   struct proc *p;) show
0 588 moveto (2255   extern char _binary_initcode_start[], _binary_initcode_size[];) show
0 576 moveto (2256 ) show
0 564 moveto (2257   p = allocproc\(\);) show
0 552 moveto (2258   initproc = p;) show
0 540 moveto (2259   if\(\(p->pgdir = setupkvm\(\)\) == 0\)) show
0 528 moveto (2260     panic\("userinit: out of memory?"\);) show
0 516 moveto (2261   inituvm\(p->pgdir, _binary_initcode_start, \(int\)_binary_initcode_size\);) show
0 504 moveto (2262   p->sz = PGSIZE;) show
0 492 moveto (2263   memset\(p->tf, 0, sizeof\(*p->tf\)\);) show
0 480 moveto (2264   p->tf->cs = \(SEG_UCODE << 3\) | DPL_USER;) show
0 468 moveto (2265   p->tf->ds = \(SEG_UDATA << 3\) | DPL_USER;) show
0 456 moveto (2266   p->tf->es = p->tf->ds;) show
0 444 moveto (2267   p->tf->ss = p->tf->ds;) show
0 432 moveto (2268   p->tf->eflags = FL_IF;) show
0 420 moveto (2269   p->tf->esp = PGSIZE;) show
0 408 moveto (2270   p->tf->eip = 0;  // beginning of initcode.S) show
0 396 moveto (2271 ) show
0 384 moveto (2272   safestrcpy\(p->name, "initcode", sizeof\(p->name\)\);) show
0 372 moveto (2273   p->cwd = namei\("/"\);) show
0 360 moveto (2274 ) show
0 348 moveto (2275   p->state = RUNNABLE;) show
0 336 moveto (2276 }) show
0 324 moveto (2277 ) show
0 312 moveto (2278 // Grow current process's memory by n bytes.) show
0 300 moveto (2279 // Return 0 on success, -1 on failure.) show
0 288 moveto (2280 int) show
0 276 moveto (2281 growproc\(int n\)) show
0 264 moveto (2282 {) show
0 252 moveto (2283   uint sz;) show
0 240 moveto (2284 ) show
0 228 moveto (2285   sz = proc->sz;) show
0 216 moveto (2286   if\(n > 0\){) show
0 204 moveto (2287     if\(\(sz = allocuvm\(proc->pgdir, sz, sz + n\)\) == 0\)) show
0 192 moveto (2288       return -1;) show
0 180 moveto (2289   } else if\(n < 0\){) show
0 168 moveto (2290     if\(\(sz = deallocuvm\(proc->pgdir, sz, sz + n\)\) == 0\)) show
0 156 moveto (2291       return -1;) show
0 144 moveto (2292   }) show
0 132 moveto (2293   proc->sz = sz;) show
0 120 moveto (2294   switchuvm\(proc\);) show
0 108 moveto (2295   return 0;) show
0 96 moveto (2296 }) show
0 84 moveto (2297 ) show
0 72 moveto (2298 ) show
0 60 moveto (2299 ) show
0 24 moveto (Sheet 22) show
grestore
restore
showpage
%%Page: 31 31
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/proc.c  Page 4) show
0 648 moveto (2300 // Create a new process copying p as the parent.) show
0 636 moveto (2301 // Sets up stack to return as if from system call.) show
0 624 moveto (2302 // Caller must set state of returned proc to RUNNABLE.) show
0 612 moveto (2303 int) show
0 600 moveto (2304 fork\(void\)) show
0 588 moveto (2305 {) show
0 576 moveto (2306   int i, pid;) show
0 564 moveto (2307   struct proc *np;) show
0 552 moveto (2308 ) show
0 540 moveto (2309   // Allocate process.) show
0 528 moveto (2310   if\(\(np = allocproc\(\)\) == 0\)) show
0 516 moveto (2311     return -1;) show
0 504 moveto (2312 ) show
0 492 moveto (2313   // Copy process state from p.) show
0 480 moveto (2314   if\(\(np->pgdir = copyuvm\(proc->pgdir, proc->sz\)\) == 0\){) show
0 468 moveto (2315     kfree\(np->kstack\);) show
0 456 moveto (2316     np->kstack = 0;) show
0 444 moveto (2317     np->state = UNUSED;) show
0 432 moveto (2318     return -1;) show
0 420 moveto (2319   }) show
0 408 moveto (2320   np->sz = proc->sz;) show
0 396 moveto (2321   np->parent = proc;) show
0 384 moveto (2322   *np->tf = *proc->tf;) show
0 372 moveto (2323 ) show
0 360 moveto (2324   // Clear %eax so that fork returns 0 in the child.) show
0 348 moveto (2325   np->tf->eax = 0;) show
0 336 moveto (2326 ) show
0 324 moveto (2327   for\(i = 0; i < NOFILE; i++\)) show
0 312 moveto (2328     if\(proc->ofile[i]\)) show
0 300 moveto (2329       np->ofile[i] = filedup\(proc->ofile[i]\);) show
0 288 moveto (2330   np->cwd = idup\(proc->cwd\);) show
0 276 moveto (2331 ) show
0 264 moveto (2332   pid = np->pid;) show
0 252 moveto (2333   np->state = RUNNABLE;) show
0 240 moveto (2334   safestrcpy\(np->name, proc->name, sizeof\(proc->name\)\);) show
0 228 moveto (2335   return pid;) show
0 216 moveto (2336 }) show
0 204 moveto (2337 ) show
0 192 moveto (2338 ) show
0 180 moveto (2339 ) show
0 168 moveto (2340 ) show
0 156 moveto (2341 ) show
0 144 moveto (2342 ) show
0 132 moveto (2343 ) show
0 120 moveto (2344 ) show
0 108 moveto (2345 ) show
0 96 moveto (2346 ) show
0 84 moveto (2347 ) show
0 72 moveto (2348 ) show
0 60 moveto (2349 ) show
0 24 moveto (Sheet 23) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/proc.c  Page 5) show
0 648 moveto (2350 // Exit the current process.  Does not return.) show
0 636 moveto (2351 // An exited process remains in the zombie state) show
0 624 moveto (2352 // until its parent calls wait\(\) to find out it exited.) show
0 612 moveto (2353 void) show
0 600 moveto (2354 exit\(void\)) show
0 588 moveto (2355 {) show
0 576 moveto (2356   struct proc *p;) show
0 564 moveto (2357   int fd;) show
0 552 moveto (2358 ) show
0 540 moveto (2359   if\(proc == initproc\)) show
0 528 moveto (2360     panic\("init exiting"\);) show
0 516 moveto (2361 ) show
0 504 moveto (2362   // Close all open files.) show
0 492 moveto (2363   for\(fd = 0; fd < NOFILE; fd++\){) show
0 480 moveto (2364     if\(proc->ofile[fd]\){) show
0 468 moveto (2365       fileclose\(proc->ofile[fd]\);) show
0 456 moveto (2366       proc->ofile[fd] = 0;) show
0 444 moveto (2367     }) show
0 432 moveto (2368   }) show
0 420 moveto (2369 ) show
0 408 moveto (2370   iput\(proc->cwd\);) show
0 396 moveto (2371   proc->cwd = 0;) show
0 384 moveto (2372 ) show
0 372 moveto (2373   acquire\(&ptable.lock\);) show
0 360 moveto (2374 ) show
0 348 moveto (2375   // Parent might be sleeping in wait\(\).) show
0 336 moveto (2376   wakeup1\(proc->parent\);) show
0 324 moveto (2377 ) show
0 312 moveto (2378   // Pass abandoned children to init.) show
0 300 moveto (2379   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 288 moveto (2380     if\(p->parent == proc\){) show
0 276 moveto (2381       p->parent = initproc;) show
0 264 moveto (2382       if\(p->state == ZOMBIE\)) show
0 252 moveto (2383         wakeup1\(initproc\);) show
0 240 moveto (2384     }) show
0 228 moveto (2385   }) show
0 216 moveto (2386 ) show
0 204 moveto (2387   // Jump into the scheduler, never to return.) show
0 192 moveto (2388   proc->state = ZOMBIE;) show
0 180 moveto (2389   sched\(\);) show
0 168 moveto (2390   panic\("zombie exit"\);) show
0 156 moveto (2391 }) show
0 144 moveto (2392 ) show
0 132 moveto (2393 ) show
0 120 moveto (2394 ) show
0 108 moveto (2395 ) show
0 96 moveto (2396 ) show
0 84 moveto (2397 ) show
0 72 moveto (2398 ) show
0 60 moveto (2399 ) show
0 24 moveto (Sheet 23) show
grestore
restore
showpage
%%Page: 32 32
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/proc.c  Page 6) show
0 648 moveto (2400 // Wait for a child process to exit and return its pid.) show
0 636 moveto (2401 // Return -1 if this process has no children.) show
0 624 moveto (2402 int) show
0 612 moveto (2403 wait\(void\)) show
0 600 moveto (2404 {) show
0 588 moveto (2405   struct proc *p;) show
0 576 moveto (2406   int havekids, pid;) show
0 564 moveto (2407 ) show
0 552 moveto (2408   acquire\(&ptable.lock\);) show
0 540 moveto (2409   for\(;;\){) show
0 528 moveto (2410     // Scan through table looking for zombie children.) show
0 516 moveto (2411     havekids = 0;) show
0 504 moveto (2412     for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 492 moveto (2413       if\(p->parent != proc\)) show
0 480 moveto (2414         continue;) show
0 468 moveto (2415       havekids = 1;) show
0 456 moveto (2416       if\(p->state == ZOMBIE\){) show
0 444 moveto (2417         // Found one.) show
0 432 moveto (2418         pid = p->pid;) show
0 420 moveto (2419         kfree\(p->kstack\);) show
0 408 moveto (2420         p->kstack = 0;) show
0 396 moveto (2421         freevm\(p->pgdir\);) show
0 384 moveto (2422         p->state = UNUSED;) show
0 372 moveto (2423         p->pid = 0;) show
0 360 moveto (2424         p->parent = 0;) show
0 348 moveto (2425         p->name[0] = 0;) show
0 336 moveto (2426         p->killed = 0;) show
0 324 moveto (2427         release\(&ptable.lock\);) show
0 312 moveto (2428         return pid;) show
0 300 moveto (2429       }) show
0 288 moveto (2430     }) show
0 276 moveto (2431 ) show
0 264 moveto (2432     // No point waiting if we don't have any children.) show
0 252 moveto (2433     if\(!havekids || proc->killed\){) show
0 240 moveto (2434       release\(&ptable.lock\);) show
0 228 moveto (2435       return -1;) show
0 216 moveto (2436     }) show
0 204 moveto (2437 ) show
0 192 moveto (2438     // Wait for children to exit.  \(See wakeup1 call in proc_exit.\)) show
0 180 moveto (2439     sleep\(proc, &ptable.lock\);  ) show
0 168 moveto (2440   }) show
0 156 moveto (2441 }) show
0 144 moveto (2442 ) show
0 132 moveto (2443 ) show
0 120 moveto (2444 ) show
0 108 moveto (2445 ) show
0 96 moveto (2446 ) show
0 84 moveto (2447 ) show
0 72 moveto (2448 ) show
0 60 moveto (2449 ) show
0 24 moveto (Sheet 24) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/proc.c  Page 7) show
0 648 moveto (2450 // Per-CPU process scheduler.) show
0 636 moveto (2451 // Each CPU calls scheduler\(\) after setting itself up.) show
0 624 moveto (2452 // Scheduler never returns.  It loops, doing:) show
0 612 moveto (2453 //  - choose a process to run) show
0 600 moveto (2454 //  - swtch to start running that process) show
0 588 moveto (2455 //  - eventually that process transfers control) show
0 576 moveto (2456 //      via swtch back to the scheduler.) show
0 564 moveto (2457 void) show
0 552 moveto (2458 scheduler\(void\)) show
0 540 moveto (2459 {) show
0 528 moveto (2460   struct proc *p;) show
0 516 moveto (2461 ) show
0 504 moveto (2462   for\(;;\){) show
0 492 moveto (2463     // Enable interrupts on this processor.) show
0 480 moveto (2464     sti\(\);) show
0 468 moveto (2465 ) show
0 456 moveto (2466     // Loop over process table looking for process to run.) show
0 444 moveto (2467     acquire\(&ptable.lock\);) show
0 432 moveto (2468     for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 420 moveto (2469       if\(p->state != RUNNABLE\)) show
0 408 moveto (2470         continue;) show
0 396 moveto (2471 ) show
0 384 moveto (2472       // Switch to chosen process.  It is the process's job) show
0 372 moveto (2473       // to release ptable.lock and then reacquire it) show
0 360 moveto (2474       // before jumping back to us.) show
0 348 moveto (2475       proc = p;) show
0 336 moveto (2476       switchuvm\(p\);) show
0 324 moveto (2477       p->state = RUNNING;) show
0 312 moveto (2478       swtch\(&cpu->scheduler, proc->context\);) show
0 300 moveto (2479       switchkvm\(\);) show
0 288 moveto (2480 ) show
0 276 moveto (2481       // Process is done running for now.) show
0 264 moveto (2482       // It should have changed its p->state before coming back.) show
0 252 moveto (2483       proc = 0;) show
0 240 moveto (2484     }) show
0 228 moveto (2485     release\(&ptable.lock\);) show
0 216 moveto (2486 ) show
0 204 moveto (2487   }) show
0 192 moveto (2488 }) show
0 180 moveto (2489 ) show
0 168 moveto (2490 ) show
0 156 moveto (2491 ) show
0 144 moveto (2492 ) show
0 132 moveto (2493 ) show
0 120 moveto (2494 ) show
0 108 moveto (2495 ) show
0 96 moveto (2496 ) show
0 84 moveto (2497 ) show
0 72 moveto (2498 ) show
0 60 moveto (2499 ) show
0 24 moveto (Sheet 24) show
grestore
restore
showpage
%%Page: 33 33
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/proc.c  Page 8) show
0 648 moveto (2500 // Enter scheduler.  Must hold only ptable.lock) show
0 636 moveto (2501 // and have changed proc->state.) show
0 624 moveto (2502 void) show
0 612 moveto (2503 sched\(void\)) show
0 600 moveto (2504 {) show
0 588 moveto (2505   int intena;) show
0 576 moveto (2506 ) show
0 564 moveto (2507   if\(!holding\(&ptable.lock\)\)) show
0 552 moveto (2508     panic\("sched ptable.lock"\);) show
0 540 moveto (2509   if\(cpu->ncli != 1\)) show
0 528 moveto (2510     panic\("sched locks"\);) show
0 516 moveto (2511   if\(proc->state == RUNNING\)) show
0 504 moveto (2512     panic\("sched running"\);) show
0 492 moveto (2513   if\(readeflags\(\)&FL_IF\)) show
0 480 moveto (2514     panic\("sched interruptible"\);) show
0 468 moveto (2515   intena = cpu->intena;) show
0 456 moveto (2516   swtch\(&proc->context, cpu->scheduler\);) show
0 444 moveto (2517   cpu->intena = intena;) show
0 432 moveto (2518 }) show
0 420 moveto (2519 ) show
0 408 moveto (2520 // Give up the CPU for one scheduling round.) show
0 396 moveto (2521 void) show
0 384 moveto (2522 yield\(void\)) show
0 372 moveto (2523 {) show
0 360 moveto (2524   acquire\(&ptable.lock\);  ) show
0 348 moveto (2525   proc->state = RUNNABLE;) show
0 336 moveto (2526   sched\(\);) show
0 324 moveto (2527   release\(&ptable.lock\);) show
0 312 moveto (2528 }) show
0 300 moveto (2529 ) show
0 288 moveto (2530 // A fork child's very first scheduling by scheduler\(\)) show
0 276 moveto (2531 // will swtch here.  "Return" to user space.) show
0 264 moveto (2532 void) show
0 252 moveto (2533 forkret\(void\)) show
0 240 moveto (2534 {) show
0 228 moveto (2535   static int first = 1;) show
0 216 moveto (2536   // Still holding ptable.lock from scheduler.) show
0 204 moveto (2537   release\(&ptable.lock\);) show
0 192 moveto (2538 ) show
0 180 moveto (2539   if \(first\) {) show
0 168 moveto (2540     // Some initialization functions must be run in the context) show
0 156 moveto (2541     // of a regular process \(e.g., they call sleep\), and thus cannot) show
0 144 moveto (2542     // be run from main\(\).) show
0 132 moveto (2543     first = 0;) show
0 120 moveto (2544     initlog\(\);) show
0 108 moveto (2545   }) show
0 96 moveto (2546 ) show
0 84 moveto (2547   // Return to "caller", actually trapret \(see allocproc\).) show
0 72 moveto (2548 }) show
0 60 moveto (2549 ) show
0 24 moveto (Sheet 25) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/proc.c  Page 9) show
0 648 moveto (2550 // Atomically release lock and sleep on chan.) show
0 636 moveto (2551 // Reacquires lock when awakened.) show
0 624 moveto (2552 void) show
0 612 moveto (2553 sleep\(void *chan, struct spinlock *lk\)) show
0 600 moveto (2554 {) show
0 588 moveto (2555   if\(proc == 0\)) show
0 576 moveto (2556     panic\("sleep"\);) show
0 564 moveto (2557 ) show
0 552 moveto (2558   if\(lk == 0\)) show
0 540 moveto (2559     panic\("sleep without lk"\);) show
0 528 moveto (2560 ) show
0 516 moveto (2561   // Must acquire ptable.lock in order to) show
0 504 moveto (2562   // change p->state and then call sched.) show
0 492 moveto (2563   // Once we hold ptable.lock, we can be) show
0 480 moveto (2564   // guaranteed that we won't miss any wakeup) show
0 468 moveto (2565   // \(wakeup runs with ptable.lock locked\),) show
0 456 moveto (2566   // so it's okay to release lk.) show
0 444 moveto (2567   if\(lk != &ptable.lock\){  ) show
0 432 moveto (2568     acquire\(&ptable.lock\);  ) show
0 420 moveto (2569     release\(lk\);) show
0 408 moveto (2570   }) show
0 396 moveto (2571 ) show
0 384 moveto (2572   // Go to sleep.) show
0 372 moveto (2573   proc->chan = chan;) show
0 360 moveto (2574   proc->state = SLEEPING;) show
0 348 moveto (2575   sched\(\);) show
0 336 moveto (2576 ) show
0 324 moveto (2577   // Tidy up.) show
0 312 moveto (2578   proc->chan = 0;) show
0 300 moveto (2579 ) show
0 288 moveto (2580   // Reacquire original lock.) show
0 276 moveto (2581   if\(lk != &ptable.lock\){  ) show
0 264 moveto (2582     release\(&ptable.lock\);) show
0 252 moveto (2583     acquire\(lk\);) show
0 240 moveto (2584   }) show
0 228 moveto (2585 }) show
0 216 moveto (2586 ) show
0 204 moveto (2587 ) show
0 192 moveto (2588 ) show
0 180 moveto (2589 ) show
0 168 moveto (2590 ) show
0 156 moveto (2591 ) show
0 144 moveto (2592 ) show
0 132 moveto (2593 ) show
0 120 moveto (2594 ) show
0 108 moveto (2595 ) show
0 96 moveto (2596 ) show
0 84 moveto (2597 ) show
0 72 moveto (2598 ) show
0 60 moveto (2599 ) show
0 24 moveto (Sheet 25) show
grestore
restore
showpage
%%Page: 34 34
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/proc.c  Page 10) show
0 648 moveto (2600 // Wake up all processes sleeping on chan.) show
0 636 moveto (2601 // The ptable lock must be held.) show
0 624 moveto (2602 static void) show
0 612 moveto (2603 wakeup1\(void *chan\)) show
0 600 moveto (2604 {) show
0 588 moveto (2605   struct proc *p;) show
0 576 moveto (2606 ) show
0 564 moveto (2607   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\)) show
0 552 moveto (2608     if\(p->state == SLEEPING && p->chan == chan\)) show
0 540 moveto (2609       p->state = RUNNABLE;) show
0 528 moveto (2610 }) show
0 516 moveto (2611 ) show
0 504 moveto (2612 // Wake up all processes sleeping on chan.) show
0 492 moveto (2613 void) show
0 480 moveto (2614 wakeup\(void *chan\)) show
0 468 moveto (2615 {) show
0 456 moveto (2616   acquire\(&ptable.lock\);) show
0 444 moveto (2617   wakeup1\(chan\);) show
0 432 moveto (2618   release\(&ptable.lock\);) show
0 420 moveto (2619 }) show
0 408 moveto (2620 ) show
0 396 moveto (2621 // Kill the process with the given pid.) show
0 384 moveto (2622 // Process won't exit until it returns) show
0 372 moveto (2623 // to user space \(see trap in trap.c\).) show
0 360 moveto (2624 int) show
0 348 moveto (2625 kill\(int pid\)) show
0 336 moveto (2626 {) show
0 324 moveto (2627   struct proc *p;) show
0 312 moveto (2628 ) show
0 300 moveto (2629   acquire\(&ptable.lock\);) show
0 288 moveto (2630   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 276 moveto (2631     if\(p->pid == pid\){) show
0 264 moveto (2632       p->killed = 1;) show
0 252 moveto (2633       // Wake process from sleep if necessary.) show
0 240 moveto (2634       if\(p->state == SLEEPING\)) show
0 228 moveto (2635         p->state = RUNNABLE;) show
0 216 moveto (2636       release\(&ptable.lock\);) show
0 204 moveto (2637       return 0;) show
0 192 moveto (2638     }) show
0 180 moveto (2639   }) show
0 168 moveto (2640   release\(&ptable.lock\);) show
0 156 moveto (2641   return -1;) show
0 144 moveto (2642 }) show
0 132 moveto (2643 ) show
0 120 moveto (2644 ) show
0 108 moveto (2645 ) show
0 96 moveto (2646 ) show
0 84 moveto (2647 ) show
0 72 moveto (2648 ) show
0 60 moveto (2649 ) show
0 24 moveto (Sheet 26) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/proc.c  Page 11) show
0 648 moveto (2650 // Print a process listing to console.  For debugging.) show
0 636 moveto (2651 // Runs when user types ^P on console.) show
0 624 moveto (2652 // No lock to avoid wedging a stuck machine further.) show
0 612 moveto (2653 void) show
0 600 moveto (2654 procdump\(void\)) show
0 588 moveto (2655 {) show
0 576 moveto (2656   static char *states[] = {) show
0 564 moveto (2657   [UNUSED]    "unused",) show
0 552 moveto (2658   [EMBRYO]    "embryo",) show
0 540 moveto (2659   [SLEEPING]  "sleep ",) show
0 528 moveto (2660   [RUNNABLE]  "runble",) show
0 516 moveto (2661   [RUNNING]   "run   ",) show
0 504 moveto (2662   [ZOMBIE]    "zombie") show
0 492 moveto (2663   };) show
0 480 moveto (2664   int i;) show
0 468 moveto (2665   struct proc *p;) show
0 456 moveto (2666   char *state;) show
0 444 moveto (2667   uint pc[10];) show
0 432 moveto (2668 ) show
0 420 moveto (2669   for\(p = ptable.proc; p < &ptable.proc[NPROC]; p++\){) show
0 408 moveto (2670     if\(p->state == UNUSED\)) show
0 396 moveto (2671       continue;) show
0 384 moveto (2672     if\(p->state >= 0 && p->state < NELEM\(states\) && states[p->state]\)) show
0 372 moveto (2673       state = states[p->state];) show
0 360 moveto (2674     else) show
0 348 moveto (2675       state = "???";) show
0 336 moveto (2676     cprintf\("%d %s %s", p->pid, state, p->name\);) show
0 324 moveto (2677     if\(p->state == SLEEPING\){) show
0 312 moveto (2678       getcallerpcs\(\(uint*\)p->context->ebp+2, pc\);) show
0 300 moveto (2679       for\(i=0; i<10 && pc[i] != 0; i++\)) show
0 288 moveto (2680         cprintf\(" %p", pc[i]\);) show
0 276 moveto (2681     }) show
0 264 moveto (2682     cprintf\("\\n"\);) show
0 252 moveto (2683   }) show
0 240 moveto (2684 }) show
0 228 moveto (2685 ) show
0 216 moveto (2686 ) show
0 204 moveto (2687 ) show
0 192 moveto (2688 ) show
0 180 moveto (2689 ) show
0 168 moveto (2690 ) show
0 156 moveto (2691 ) show
0 144 moveto (2692 ) show
0 132 moveto (2693 ) show
0 120 moveto (2694 ) show
0 108 moveto (2695 ) show
0 96 moveto (2696 ) show
0 84 moveto (2697 ) show
0 72 moveto (2698 ) show
0 60 moveto (2699 ) show
0 24 moveto (Sheet 26) show
grestore
restore
showpage
%%Page: 35 35
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/swtch.S  Page 1) show
0 648 moveto (2700 # Context switch) show
0 636 moveto (2701 #) show
0 624 moveto (2702 #   void swtch\(struct context **old, struct context *new\);) show
0 612 moveto (2703 #) show
0 600 moveto (2704 # Save current register context in old) show
0 588 moveto (2705 # and then load register context from new.) show
0 576 moveto (2706 ) show
0 564 moveto (2707 .globl swtch) show
0 552 moveto (2708 swtch:) show
0 540 moveto (2709   movl 4\(%esp\), %eax) show
0 528 moveto (2710   movl 8\(%esp\), %edx) show
0 516 moveto (2711 ) show
0 504 moveto (2712   # Save old callee-save registers) show
0 492 moveto (2713   pushl %ebp) show
0 480 moveto (2714   pushl %ebx) show
0 468 moveto (2715   pushl %esi) show
0 456 moveto (2716   pushl %edi) show
0 444 moveto (2717 ) show
0 432 moveto (2718   # Switch stacks) show
0 420 moveto (2719   movl %esp, \(%eax\)) show
0 408 moveto (2720   movl %edx, %esp) show
0 396 moveto (2721 ) show
0 384 moveto (2722   # Load new callee-save registers) show
0 372 moveto (2723   popl %edi) show
0 360 moveto (2724   popl %esi) show
0 348 moveto (2725   popl %ebx) show
0 336 moveto (2726   popl %ebp) show
0 324 moveto (2727   ret) show
0 312 moveto (2728 ) show
0 300 moveto (2729 ) show
0 288 moveto (2730 ) show
0 276 moveto (2731 ) show
0 264 moveto (2732 ) show
0 252 moveto (2733 ) show
0 240 moveto (2734 ) show
0 228 moveto (2735 ) show
0 216 moveto (2736 ) show
0 204 moveto (2737 ) show
0 192 moveto (2738 ) show
0 180 moveto (2739 ) show
0 168 moveto (2740 ) show
0 156 moveto (2741 ) show
0 144 moveto (2742 ) show
0 132 moveto (2743 ) show
0 120 moveto (2744 ) show
0 108 moveto (2745 ) show
0 96 moveto (2746 ) show
0 84 moveto (2747 ) show
0 72 moveto (2748 ) show
0 60 moveto (2749 ) show
0 24 moveto (Sheet 27) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/kalloc.c  Page 1) show
0 648 moveto (2750 // Physical memory allocator, intended to allocate) show
0 636 moveto (2751 // memory for user processes, kernel stacks, page table pages,) show
0 624 moveto (2752 // and pipe buffers. Allocates 4096-byte pages.) show
0 612 moveto (2753 ) show
0 600 moveto (2754 #include "types.h") show
0 588 moveto (2755 #include "defs.h") show
0 576 moveto (2756 #include "param.h") show
0 564 moveto (2757 #include "memlayout.h") show
0 552 moveto (2758 #include "mmu.h") show
0 540 moveto (2759 #include "spinlock.h") show
0 528 moveto (2760 ) show
0 516 moveto (2761 void freerange\(void *vstart, void *vend\);) show
0 504 moveto (2762 extern char end[]; // first address after kernel loaded from ELF file) show
0 492 moveto (2763 ) show
0 480 moveto (2764 struct run {) show
0 468 moveto (2765   struct run *next;) show
0 456 moveto (2766 };) show
0 444 moveto (2767 ) show
0 432 moveto (2768 struct {) show
0 420 moveto (2769   struct spinlock lock;) show
0 408 moveto (2770   int use_lock;) show
0 396 moveto (2771   struct run *freelist;) show
0 384 moveto (2772 } kmem;) show
0 372 moveto (2773 ) show
0 360 moveto (2774 // Initialization happens in two phases.) show
0 348 moveto (2775 // 1. main\(\) calls kinit1\(\) while still using entrypgdir to place just) show
0 336 moveto (2776 // the pages mapped by entrypgdir on free list.) show
0 324 moveto (2777 // 2. main\(\) calls kinit2\(\) with the rest of the physical pages) show
0 312 moveto (2778 // after installing a full page table that maps them on all cores.) show
0 300 moveto (2779 void) show
0 288 moveto (2780 kinit1\(void *vstart, void *vend\)) show
0 276 moveto (2781 {) show
0 264 moveto (2782   initlock\(&kmem.lock, "kmem"\);) show
0 252 moveto (2783   kmem.use_lock = 0;) show
0 240 moveto (2784   freerange\(vstart, vend\);) show
0 228 moveto (2785 }) show
0 216 moveto (2786 ) show
0 204 moveto (2787 void) show
0 192 moveto (2788 kinit2\(void *vstart, void *vend\)) show
0 180 moveto (2789 {) show
0 168 moveto (2790   freerange\(vstart, vend\);) show
0 156 moveto (2791   kmem.use_lock = 1;) show
0 144 moveto (2792 }) show
0 132 moveto (2793 ) show
0 120 moveto (2794 ) show
0 108 moveto (2795 ) show
0 96 moveto (2796 ) show
0 84 moveto (2797 ) show
0 72 moveto (2798 ) show
0 60 moveto (2799 ) show
0 24 moveto (Sheet 27) show
grestore
restore
showpage
%%Page: 36 36
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/kalloc.c  Page 2) show
0 648 moveto (2800 void) show
0 636 moveto (2801 freerange\(void *vstart, void *vend\)) show
0 624 moveto (2802 {) show
0 612 moveto (2803   char *p;) show
0 600 moveto (2804   p = \(char*\)PGROUNDUP\(\(uint\)vstart\);) show
0 588 moveto (2805   for\(; p + PGSIZE <= \(char*\)vend; p += PGSIZE\)) show
0 576 moveto (2806     kfree\(p\);) show
0 564 moveto (2807 }) show
0 552 moveto (2808 ) show
0 540 moveto (2809 ) show
0 528 moveto (2810 // Free the page of physical memory pointed at by v,) show
0 516 moveto (2811 // which normally should have been returned by a) show
0 504 moveto (2812 // call to kalloc\(\).  \(The exception is when) show
0 492 moveto (2813 // initializing the allocator; see kinit above.\)) show
0 480 moveto (2814 void) show
0 468 moveto (2815 kfree\(char *v\)) show
0 456 moveto (2816 {) show
0 444 moveto (2817   struct run *r;) show
0 432 moveto (2818 ) show
0 420 moveto (2819   if\(\(uint\)v % PGSIZE || v < end || v2p\(v\) >= PHYSTOP\)) show
0 408 moveto (2820     panic\("kfree"\);) show
0 396 moveto (2821 ) show
0 384 moveto (2822   // Fill with junk to catch dangling refs.) show
0 372 moveto (2823   memset\(v, 1, PGSIZE\);) show
0 360 moveto (2824 ) show
0 348 moveto (2825   if\(kmem.use_lock\)) show
0 336 moveto (2826     acquire\(&kmem.lock\);) show
0 324 moveto (2827   r = \(struct run*\)v;) show
0 312 moveto (2828   r->next = kmem.freelist;) show
0 300 moveto (2829   kmem.freelist = r;) show
0 288 moveto (2830   if\(kmem.use_lock\)) show
0 276 moveto (2831     release\(&kmem.lock\);) show
0 264 moveto (2832 }) show
0 252 moveto (2833 ) show
0 240 moveto (2834 // Allocate one 4096-byte page of physical memory.) show
0 228 moveto (2835 // Returns a pointer that the kernel can use.) show
0 216 moveto (2836 // Returns 0 if the memory cannot be allocated.) show
0 204 moveto (2837 char*) show
0 192 moveto (2838 kalloc\(void\)) show
0 180 moveto (2839 {) show
0 168 moveto (2840   struct run *r;) show
0 156 moveto (2841 ) show
0 144 moveto (2842   if\(kmem.use_lock\)) show
0 132 moveto (2843     acquire\(&kmem.lock\);) show
0 120 moveto (2844   r = kmem.freelist;) show
0 108 moveto (2845   if\(r\)) show
0 96 moveto (2846     kmem.freelist = r->next;) show
0 84 moveto (2847   if\(kmem.use_lock\)) show
0 72 moveto (2848     release\(&kmem.lock\);) show
0 60 moveto (2849   return \(char*\)r;) show
0 24 moveto (Sheet 28) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/kalloc.c  Page 3) show
0 648 moveto (2850 }) show
0 636 moveto (2851 ) show
0 624 moveto (2852 ) show
0 612 moveto (2853 ) show
0 600 moveto (2854 ) show
0 588 moveto (2855 ) show
0 576 moveto (2856 ) show
0 564 moveto (2857 ) show
0 552 moveto (2858 ) show
0 540 moveto (2859 ) show
0 528 moveto (2860 ) show
0 516 moveto (2861 ) show
0 504 moveto (2862 ) show
0 492 moveto (2863 ) show
0 480 moveto (2864 ) show
0 468 moveto (2865 ) show
0 456 moveto (2866 ) show
0 444 moveto (2867 ) show
0 432 moveto (2868 ) show
0 420 moveto (2869 ) show
0 408 moveto (2870 ) show
0 396 moveto (2871 ) show
0 384 moveto (2872 ) show
0 372 moveto (2873 ) show
0 360 moveto (2874 ) show
0 348 moveto (2875 ) show
0 336 moveto (2876 ) show
0 324 moveto (2877 ) show
0 312 moveto (2878 ) show
0 300 moveto (2879 ) show
0 288 moveto (2880 ) show
0 276 moveto (2881 ) show
0 264 moveto (2882 ) show
0 252 moveto (2883 ) show
0 240 moveto (2884 ) show
0 228 moveto (2885 ) show
0 216 moveto (2886 ) show
0 204 moveto (2887 ) show
0 192 moveto (2888 ) show
0 180 moveto (2889 ) show
0 168 moveto (2890 ) show
0 156 moveto (2891 ) show
0 144 moveto (2892 ) show
0 132 moveto (2893 ) show
0 120 moveto (2894 ) show
0 108 moveto (2895 ) show
0 96 moveto (2896 ) show
0 84 moveto (2897 ) show
0 72 moveto (2898 ) show
0 60 moveto (2899 ) show
0 24 moveto (Sheet 28) show
grestore
restore
showpage
%%Page: 37 37
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/traps.h  Page 1) show
0 648 moveto (2900 // x86 trap and interrupt constants.) show
0 636 moveto (2901 ) show
0 624 moveto (2902 // Processor-defined:) show
0 612 moveto (2903 #define T_DIVIDE         0      // divide error) show
0 600 moveto (2904 #define T_DEBUG          1      // debug exception) show
0 588 moveto (2905 #define T_NMI            2      // non-maskable interrupt) show
0 576 moveto (2906 #define T_BRKPT          3      // breakpoint) show
0 564 moveto (2907 #define T_OFLOW          4      // overflow) show
0 552 moveto (2908 #define T_BOUND          5      // bounds check) show
0 540 moveto (2909 #define T_ILLOP          6      // illegal opcode) show
0 528 moveto (2910 #define T_DEVICE         7      // device not available) show
0 516 moveto (2911 #define T_DBLFLT         8      // double fault) show
0 504 moveto (2912 // #define T_COPROC      9      // reserved \(not used since 486\)) show
0 492 moveto (2913 #define T_TSS           10      // invalid task switch segment) show
0 480 moveto (2914 #define T_SEGNP         11      // segment not present) show
0 468 moveto (2915 #define T_STACK         12      // stack exception) show
0 456 moveto (2916 #define T_GPFLT         13      // general protection fault) show
0 444 moveto (2917 #define T_PGFLT         14      // page fault) show
0 432 moveto (2918 // #define T_RES        15      // reserved) show
0 420 moveto (2919 #define T_FPERR         16      // floating point error) show
0 408 moveto (2920 #define T_ALIGN         17      // aligment check) show
0 396 moveto (2921 #define T_MCHK          18      // machine check) show
0 384 moveto (2922 #define T_SIMDERR       19      // SIMD floating point error) show
0 372 moveto (2923 ) show
0 360 moveto (2924 // These are arbitrarily chosen, but with care not to overlap) show
0 348 moveto (2925 // processor defined exceptions or interrupt vectors.) show
0 336 moveto (2926 #define T_SYSCALL       64      // system call) show
0 324 moveto (2927 #define T_DEFAULT      500      // catchall) show
0 312 moveto (2928 ) show
0 300 moveto (2929 #define T_IRQ0          32      // IRQ 0 corresponds to int T_IRQ) show
0 288 moveto (2930 ) show
0 276 moveto (2931 #define IRQ_TIMER        0) show
0 264 moveto (2932 #define IRQ_KBD          1) show
0 252 moveto (2933 #define IRQ_COM1         4) show
0 240 moveto (2934 #define IRQ_IDE         14) show
0 228 moveto (2935 #define IRQ_ERROR       19) show
0 216 moveto (2936 #define IRQ_SPURIOUS    31) show
0 204 moveto (2937 ) show
0 192 moveto (2938 ) show
0 180 moveto (2939 ) show
0 168 moveto (2940 ) show
0 156 moveto (2941 ) show
0 144 moveto (2942 ) show
0 132 moveto (2943 ) show
0 120 moveto (2944 ) show
0 108 moveto (2945 ) show
0 96 moveto (2946 ) show
0 84 moveto (2947 ) show
0 72 moveto (2948 ) show
0 60 moveto (2949 ) show
0 24 moveto (Sheet 29) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/vectors.pl  Page 1) show
0 648 moveto (2950 #!/usr/bin/perl -w) show
0 636 moveto (2951 ) show
0 624 moveto (2952 # Generate vectors.S, the trap/interrupt entry points.) show
0 612 moveto (2953 # There has to be one entry point per interrupt number) show
0 600 moveto (2954 # since otherwise there's no way for trap\(\) to discover) show
0 588 moveto (2955 # the interrupt number.) show
0 576 moveto (2956 ) show
0 564 moveto (2957 print "# generated by vectors.pl - do not edit\\n";) show
0 552 moveto (2958 print "# handlers\\n";) show
0 540 moveto (2959 print ".globl alltraps\\n";) show
0 528 moveto (2960 for\(my $i = 0; $i < 256; $i++\){) show
0 516 moveto (2961     print ".globl vector$i\\n";) show
0 504 moveto (2962     print "vector$i:\\n";) show
0 492 moveto (2963     if\(!\($i == 8 || \($i >= 10 && $i <= 14\) || $i == 17\)\){) show
0 480 moveto (2964         print "  pushl \\$0\\n";) show
0 468 moveto (2965     }) show
0 456 moveto (2966     print "  pushl \\$$i\\n";) show
0 444 moveto (2967     print "  jmp alltraps\\n";) show
0 432 moveto (2968 }) show
0 420 moveto (2969 ) show
0 408 moveto (2970 print "\\n# vector table\\n";) show
0 396 moveto (2971 print ".data\\n";) show
0 384 moveto (2972 print ".globl vectors\\n";) show
0 372 moveto (2973 print "vectors:\\n";) show
0 360 moveto (2974 for\(my $i = 0; $i < 256; $i++\){) show
0 348 moveto (2975     print "  .long vector$i\\n";) show
0 336 moveto (2976 }) show
0 324 moveto (2977 ) show
0 312 moveto (2978 # sample output:) show
0 300 moveto (2979 #   # handlers) show
0 288 moveto (2980 #   .globl alltraps) show
0 276 moveto (2981 #   .globl vector0) show
0 264 moveto (2982 #   vector0:) show
0 252 moveto (2983 #     pushl $0) show
0 240 moveto (2984 #     pushl $0) show
0 228 moveto (2985 #     jmp alltraps) show
0 216 moveto (2986 #   ...) show
0 204 moveto (2987 #) show
0 192 moveto (2988 #   # vector table) show
0 180 moveto (2989 #   .data) show
0 168 moveto (2990 #   .globl vectors) show
0 156 moveto (2991 #   vectors:) show
0 144 moveto (2992 #     .long vector0) show
0 132 moveto (2993 #     .long vector1) show
0 120 moveto (2994 #     .long vector2) show
0 108 moveto (2995 #   ...) show
0 96 moveto (2996 ) show
0 84 moveto (2997 ) show
0 72 moveto (2998 ) show
0 60 moveto (2999 ) show
0 24 moveto (Sheet 29) show
grestore
restore
showpage
%%Page: 38 38
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/trapasm.S  Page 1) show
0 648 moveto (3000 #include "mmu.h") show
0 636 moveto (3001 ) show
0 624 moveto (3002   # vectors.S sends all traps here.) show
0 612 moveto (3003 .globl alltraps) show
0 600 moveto (3004 alltraps:) show
0 588 moveto (3005   # Build trap frame.) show
0 576 moveto (3006   pushl %ds) show
0 564 moveto (3007   pushl %es) show
0 552 moveto (3008   pushl %fs) show
0 540 moveto (3009   pushl %gs) show
0 528 moveto (3010   pushal) show
0 516 moveto (3011 ) show
0 504 moveto (3012   # Set up data and per-cpu segments.) show
0 492 moveto (3013   movw $\(SEG_KDATA<<3\), %ax) show
0 480 moveto (3014   movw %ax, %ds) show
0 468 moveto (3015   movw %ax, %es) show
0 456 moveto (3016   movw $\(SEG_KCPU<<3\), %ax) show
0 444 moveto (3017   movw %ax, %fs) show
0 432 moveto (3018   movw %ax, %gs) show
0 420 moveto (3019 ) show
0 408 moveto (3020   # Call trap\(tf\), where tf=%esp) show
0 396 moveto (3021   pushl %esp) show
0 384 moveto (3022   call trap) show
0 372 moveto (3023   addl $4, %esp) show
0 360 moveto (3024 ) show
0 348 moveto (3025   # Return falls through to trapret...) show
0 336 moveto (3026 .globl trapret) show
0 324 moveto (3027 trapret:) show
0 312 moveto (3028   popal) show
0 300 moveto (3029   popl %gs) show
0 288 moveto (3030   popl %fs) show
0 276 moveto (3031   popl %es) show
0 264 moveto (3032   popl %ds) show
0 252 moveto (3033   addl $0x8, %esp  # trapno and errcode) show
0 240 moveto (3034   iret) show
0 228 moveto (3035 ) show
0 216 moveto (3036 ) show
0 204 moveto (3037 ) show
0 192 moveto (3038 ) show
0 180 moveto (3039 ) show
0 168 moveto (3040 ) show
0 156 moveto (3041 ) show
0 144 moveto (3042 ) show
0 132 moveto (3043 ) show
0 120 moveto (3044 ) show
0 108 moveto (3045 ) show
0 96 moveto (3046 ) show
0 84 moveto (3047 ) show
0 72 moveto (3048 ) show
0 60 moveto (3049 ) show
0 24 moveto (Sheet 30) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/trap.c  Page 1) show
0 648 moveto (3050 #include "types.h") show
0 636 moveto (3051 #include "defs.h") show
0 624 moveto (3052 #include "param.h") show
0 612 moveto (3053 #include "memlayout.h") show
0 600 moveto (3054 #include "mmu.h") show
0 588 moveto (3055 #include "proc.h") show
0 576 moveto (3056 #include "x86.h") show
0 564 moveto (3057 #include "traps.h") show
0 552 moveto (3058 #include "spinlock.h") show
0 540 moveto (3059 ) show
0 528 moveto (3060 // Interrupt descriptor table \(shared by all CPUs\).) show
0 516 moveto (3061 struct gatedesc idt[256];) show
0 504 moveto (3062 extern uint vectors[];  // in vectors.S: array of 256 entry pointers) show
0 492 moveto (3063 struct spinlock tickslock;) show
0 480 moveto (3064 uint ticks;) show
0 468 moveto (3065 ) show
0 456 moveto (3066 void) show
0 444 moveto (3067 tvinit\(void\)) show
0 432 moveto (3068 {) show
0 420 moveto (3069   int i;) show
0 408 moveto (3070 ) show
0 396 moveto (3071   for\(i = 0; i < 256; i++\)) show
0 384 moveto (3072     SETGATE\(idt[i], 0, SEG_KCODE<<3, vectors[i], 0\);) show
0 372 moveto (3073   SETGATE\(idt[T_SYSCALL], 1, SEG_KCODE<<3, vectors[T_SYSCALL], DPL_USER\);) show
0 360 moveto (3074 ) show
0 348 moveto (3075   initlock\(&tickslock, "time"\);) show
0 336 moveto (3076 }) show
0 324 moveto (3077 ) show
0 312 moveto (3078 void) show
0 300 moveto (3079 idtinit\(void\)) show
0 288 moveto (3080 {) show
0 276 moveto (3081   lidt\(idt, sizeof\(idt\)\);) show
0 264 moveto (3082 }) show
0 252 moveto (3083 ) show
0 240 moveto (3084 ) show
0 228 moveto (3085 ) show
0 216 moveto (3086 ) show
0 204 moveto (3087 ) show
0 192 moveto (3088 ) show
0 180 moveto (3089 ) show
0 168 moveto (3090 ) show
0 156 moveto (3091 ) show
0 144 moveto (3092 ) show
0 132 moveto (3093 ) show
0 120 moveto (3094 ) show
0 108 moveto (3095 ) show
0 96 moveto (3096 ) show
0 84 moveto (3097 ) show
0 72 moveto (3098 ) show
0 60 moveto (3099 ) show
0 24 moveto (Sheet 30) show
grestore
restore
showpage
%%Page: 39 39
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/trap.c  Page 2) show
0 648 moveto (3100 void) show
0 636 moveto (3101 trap\(struct trapframe *tf\)) show
0 624 moveto (3102 {) show
0 612 moveto (3103   if\(tf->trapno == T_SYSCALL\){) show
0 600 moveto (3104     if\(proc->killed\)) show
0 588 moveto (3105       exit\(\);) show
0 576 moveto (3106     proc->tf = tf;) show
0 564 moveto (3107     syscall\(\);) show
0 552 moveto (3108     if\(proc->killed\)) show
0 540 moveto (3109       exit\(\);) show
0 528 moveto (3110     return;) show
0 516 moveto (3111   }) show
0 504 moveto (3112 ) show
0 492 moveto (3113   switch\(tf->trapno\){) show
0 480 moveto (3114   case T_IRQ0 + IRQ_TIMER:) show
0 468 moveto (3115     if\(cpu->id == 0\){) show
0 456 moveto (3116       acquire\(&tickslock\);) show
0 444 moveto (3117       ticks++;) show
0 432 moveto (3118       wakeup\(&ticks\);) show
0 420 moveto (3119       release\(&tickslock\);) show
0 408 moveto (3120     }) show
0 396 moveto (3121     lapiceoi\(\);) show
0 384 moveto (3122     break;) show
0 372 moveto (3123   case T_IRQ0 + IRQ_IDE:) show
0 360 moveto (3124     ideintr\(\);) show
0 348 moveto (3125     lapiceoi\(\);) show
0 336 moveto (3126     break;) show
0 324 moveto (3127   case T_IRQ0 + IRQ_IDE+1:) show
0 312 moveto (3128     // Bochs generates spurious IDE1 interrupts.) show
0 300 moveto (3129     break;) show
0 288 moveto (3130   case T_IRQ0 + IRQ_KBD:) show
0 276 moveto (3131     kbdintr\(\);) show
0 264 moveto (3132     lapiceoi\(\);) show
0 252 moveto (3133     break;) show
0 240 moveto (3134   case T_IRQ0 + IRQ_COM1:) show
0 228 moveto (3135     uartintr\(\);) show
0 216 moveto (3136     lapiceoi\(\);) show
0 204 moveto (3137     break;) show
0 192 moveto (3138   case T_IRQ0 + 7:) show
0 180 moveto (3139   case T_IRQ0 + IRQ_SPURIOUS:) show
0 168 moveto (3140     cprintf\("cpu%d: spurious interrupt at %x:%x\\n",) show
0 156 moveto (3141             cpu->id, tf->cs, tf->eip\);) show
0 144 moveto (3142     lapiceoi\(\);) show
0 132 moveto (3143     break;) show
0 120 moveto (3144 ) show
0 108 moveto (3145 ) show
0 96 moveto (3146 ) show
0 84 moveto (3147 ) show
0 72 moveto (3148 ) show
0 60 moveto (3149 ) show
0 24 moveto (Sheet 31) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/trap.c  Page 3) show
0 648 moveto (3150   default:) show
0 636 moveto (3151     if\(proc == 0 || \(tf->cs&3\) == 0\){) show
0 624 moveto (3152       // In kernel, it must be our mistake.) show
0 612 moveto (3153       cprintf\("unexpected trap %d from cpu %d eip %x \(cr2=0x%x\)\\n",) show
0 600 moveto (3154               tf->trapno, cpu->id, tf->eip, rcr2\(\)\);) show
0 588 moveto (3155       panic\("trap"\);) show
0 576 moveto (3156     }) show
0 564 moveto (3157     // In user space, assume process misbehaved.) show
0 552 moveto (3158     cprintf\("pid %d %s: trap %d err %d on cpu %d ") show
0 540 moveto (3159             "eip 0x%x addr 0x%x--kill proc\\n",) show
0 528 moveto (3160             proc->pid, proc->name, tf->trapno, tf->err, cpu->id, tf->eip,) show
0 516 moveto (3161             rcr2\(\)\);) show
0 504 moveto (3162     proc->killed = 1;) show
0 492 moveto (3163   }) show
0 480 moveto (3164 ) show
0 468 moveto (3165   // Force process exit if it has been killed and is in user space.) show
0 456 moveto (3166   // \(If it is still executing in the kernel, let it keep running) show
0 444 moveto (3167   // until it gets to the regular system call return.\)) show
0 432 moveto (3168   if\(proc && proc->killed && \(tf->cs&3\) == DPL_USER\)) show
0 420 moveto (3169     exit\(\);) show
0 408 moveto (3170 ) show
0 396 moveto (3171   // Force process to give up CPU on clock tick.) show
0 384 moveto (3172   // If interrupts were on while locks held, would need to check nlock.) show
0 372 moveto (3173   if\(proc && proc->state == RUNNING && tf->trapno == T_IRQ0+IRQ_TIMER\)) show
0 360 moveto (3174     yield\(\);) show
0 348 moveto (3175 ) show
0 336 moveto (3176   // Check if the process has been killed since we yielded) show
0 324 moveto (3177   if\(proc && proc->killed && \(tf->cs&3\) == DPL_USER\)) show
0 312 moveto (3178     exit\(\);) show
0 300 moveto (3179 }) show
0 288 moveto (3180 ) show
0 276 moveto (3181 ) show
0 264 moveto (3182 ) show
0 252 moveto (3183 ) show
0 240 moveto (3184 ) show
0 228 moveto (3185 ) show
0 216 moveto (3186 ) show
0 204 moveto (3187 ) show
0 192 moveto (3188 ) show
0 180 moveto (3189 ) show
0 168 moveto (3190 ) show
0 156 moveto (3191 ) show
0 144 moveto (3192 ) show
0 132 moveto (3193 ) show
0 120 moveto (3194 ) show
0 108 moveto (3195 ) show
0 96 moveto (3196 ) show
0 84 moveto (3197 ) show
0 72 moveto (3198 ) show
0 60 moveto (3199 ) show
0 24 moveto (Sheet 31) show
grestore
restore
showpage
%%Page: 40 40
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/syscall.h  Page 1) show
0 648 moveto (3200 // System call numbers) show
0 636 moveto (3201 #define SYS_fork    1) show
0 624 moveto (3202 #define SYS_exit    2) show
0 612 moveto (3203 #define SYS_wait    3) show
0 600 moveto (3204 #define SYS_pipe    4) show
0 588 moveto (3205 #define SYS_read    5) show
0 576 moveto (3206 #define SYS_kill    6) show
0 564 moveto (3207 #define SYS_exec    7) show
0 552 moveto (3208 #define SYS_fstat   8) show
0 540 moveto (3209 #define SYS_chdir   9) show
0 528 moveto (3210 #define SYS_dup    10) show
0 516 moveto (3211 #define SYS_getpid 11) show
0 504 moveto (3212 #define SYS_sbrk   12) show
0 492 moveto (3213 #define SYS_sleep  13) show
0 480 moveto (3214 #define SYS_uptime 14) show
0 468 moveto (3215 #define SYS_open   15) show
0 456 moveto (3216 #define SYS_write  16) show
0 444 moveto (3217 #define SYS_mknod  17) show
0 432 moveto (3218 #define SYS_unlink 18) show
0 420 moveto (3219 #define SYS_link   19) show
0 408 moveto (3220 #define SYS_mkdir  20) show
0 396 moveto (3221 #define SYS_close  21) show
0 384 moveto (3222 ) show
0 372 moveto (3223 ) show
0 360 moveto (3224 ) show
0 348 moveto (3225 ) show
0 336 moveto (3226 ) show
0 324 moveto (3227 ) show
0 312 moveto (3228 ) show
0 300 moveto (3229 ) show
0 288 moveto (3230 ) show
0 276 moveto (3231 ) show
0 264 moveto (3232 ) show
0 252 moveto (3233 ) show
0 240 moveto (3234 ) show
0 228 moveto (3235 ) show
0 216 moveto (3236 ) show
0 204 moveto (3237 ) show
0 192 moveto (3238 ) show
0 180 moveto (3239 ) show
0 168 moveto (3240 ) show
0 156 moveto (3241 ) show
0 144 moveto (3242 ) show
0 132 moveto (3243 ) show
0 120 moveto (3244 ) show
0 108 moveto (3245 ) show
0 96 moveto (3246 ) show
0 84 moveto (3247 ) show
0 72 moveto (3248 ) show
0 60 moveto (3249 ) show
0 24 moveto (Sheet 32) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/syscall.c  Page 1) show
0 648 moveto (3250 #include "types.h") show
0 636 moveto (3251 #include "defs.h") show
0 624 moveto (3252 #include "param.h") show
0 612 moveto (3253 #include "memlayout.h") show
0 600 moveto (3254 #include "mmu.h") show
0 588 moveto (3255 #include "proc.h") show
0 576 moveto (3256 #include "x86.h") show
0 564 moveto (3257 #include "syscall.h") show
0 552 moveto (3258 ) show
0 540 moveto (3259 // User code makes a system call with INT T_SYSCALL.) show
0 528 moveto (3260 // System call number in %eax.) show
0 516 moveto (3261 // Arguments on the stack, from the user call to the C) show
0 504 moveto (3262 // library system call function. The saved user %esp points) show
0 492 moveto (3263 // to a saved program counter, and then the first argument.) show
0 480 moveto (3264 ) show
0 468 moveto (3265 // Fetch the int at addr from the current process.) show
0 456 moveto (3266 int) show
0 444 moveto (3267 fetchint\(uint addr, int *ip\)) show
0 432 moveto (3268 {) show
0 420 moveto (3269   if\(addr >= proc->sz || addr+4 > proc->sz\)) show
0 408 moveto (3270     return -1;) show
0 396 moveto (3271   *ip = *\(int*\)\(addr\);) show
0 384 moveto (3272   return 0;) show
0 372 moveto (3273 }) show
0 360 moveto (3274 ) show
0 348 moveto (3275 // Fetch the nul-terminated string at addr from the current process.) show
0 336 moveto (3276 // Doesn't actually copy the string - just sets *pp to point at it.) show
0 324 moveto (3277 // Returns length of string, not including nul.) show
0 312 moveto (3278 int) show
0 300 moveto (3279 fetchstr\(uint addr, char **pp\)) show
0 288 moveto (3280 {) show
0 276 moveto (3281   char *s, *ep;) show
0 264 moveto (3282 ) show
0 252 moveto (3283   if\(addr >= proc->sz\)) show
0 240 moveto (3284     return -1;) show
0 228 moveto (3285   *pp = \(char*\)addr;) show
0 216 moveto (3286   ep = \(char*\)proc->sz;) show
0 204 moveto (3287   for\(s = *pp; s < ep; s++\)) show
0 192 moveto (3288     if\(*s == 0\)) show
0 180 moveto (3289       return s - *pp;) show
0 168 moveto (3290   return -1;) show
0 156 moveto (3291 }) show
0 144 moveto (3292 ) show
0 132 moveto (3293 // Fetch the nth 32-bit system call argument.) show
0 120 moveto (3294 int) show
0 108 moveto (3295 argint\(int n, int *ip\)) show
0 96 moveto (3296 {) show
0 84 moveto (3297   return fetchint\(proc->tf->esp + 4 + 4*n, ip\);) show
0 72 moveto (3298 }) show
0 60 moveto (3299 ) show
0 24 moveto (Sheet 32) show
grestore
restore
showpage
%%Page: 41 41
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/syscall.c  Page 2) show
0 648 moveto (3300 // Fetch the nth word-sized system call argument as a pointer) show
0 636 moveto (3301 // to a block of memory of size n bytes.  Check that the pointer) show
0 624 moveto (3302 // lies within the process address space.) show
0 612 moveto (3303 int) show
0 600 moveto (3304 argptr\(int n, char **pp, int size\)) show
0 588 moveto (3305 {) show
0 576 moveto (3306   int i;) show
0 564 moveto (3307 ) show
0 552 moveto (3308   if\(argint\(n, &i\) < 0\)) show
0 540 moveto (3309     return -1;) show
0 528 moveto (3310   if\(\(uint\)i >= proc->sz || \(uint\)i+size > proc->sz\)) show
0 516 moveto (3311     return -1;) show
0 504 moveto (3312   *pp = \(char*\)i;) show
0 492 moveto (3313   return 0;) show
0 480 moveto (3314 }) show
0 468 moveto (3315 ) show
0 456 moveto (3316 // Fetch the nth word-sized system call argument as a string pointer.) show
0 444 moveto (3317 // Check that the pointer is valid and the string is nul-terminated.) show
0 432 moveto (3318 // \(There is no shared writable memory, so the string can't change) show
0 420 moveto (3319 // between this check and being used by the kernel.\)) show
0 408 moveto (3320 int) show
0 396 moveto (3321 argstr\(int n, char **pp\)) show
0 384 moveto (3322 {) show
0 372 moveto (3323   int addr;) show
0 360 moveto (3324   if\(argint\(n, &addr\) < 0\)) show
0 348 moveto (3325     return -1;) show
0 336 moveto (3326   return fetchstr\(addr, pp\);) show
0 324 moveto (3327 }) show
0 312 moveto (3328 ) show
0 300 moveto (3329 extern int sys_chdir\(void\);) show
0 288 moveto (3330 extern int sys_close\(void\);) show
0 276 moveto (3331 extern int sys_dup\(void\);) show
0 264 moveto (3332 extern int sys_exec\(void\);) show
0 252 moveto (3333 extern int sys_exit\(void\);) show
0 240 moveto (3334 extern int sys_fork\(void\);) show
0 228 moveto (3335 extern int sys_fstat\(void\);) show
0 216 moveto (3336 extern int sys_getpid\(void\);) show
0 204 moveto (3337 extern int sys_kill\(void\);) show
0 192 moveto (3338 extern int sys_link\(void\);) show
0 180 moveto (3339 extern int sys_mkdir\(void\);) show
0 168 moveto (3340 extern int sys_mknod\(void\);) show
0 156 moveto (3341 extern int sys_open\(void\);) show
0 144 moveto (3342 extern int sys_pipe\(void\);) show
0 132 moveto (3343 extern int sys_read\(void\);) show
0 120 moveto (3344 extern int sys_sbrk\(void\);) show
0 108 moveto (3345 extern int sys_sleep\(void\);) show
0 96 moveto (3346 extern int sys_unlink\(void\);) show
0 84 moveto (3347 extern int sys_wait\(void\);) show
0 72 moveto (3348 extern int sys_write\(void\);) show
0 60 moveto (3349 extern int sys_uptime\(void\);) show
0 24 moveto (Sheet 33) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/syscall.c  Page 3) show
0 648 moveto (3350 static int \(*syscalls[]\)\(void\) = {) show
0 636 moveto (3351 [SYS_fork]    sys_fork,) show
0 624 moveto (3352 [SYS_exit]    sys_exit,) show
0 612 moveto (3353 [SYS_wait]    sys_wait,) show
0 600 moveto (3354 [SYS_pipe]    sys_pipe,) show
0 588 moveto (3355 [SYS_read]    sys_read,) show
0 576 moveto (3356 [SYS_kill]    sys_kill,) show
0 564 moveto (3357 [SYS_exec]    sys_exec,) show
0 552 moveto (3358 [SYS_fstat]   sys_fstat,) show
0 540 moveto (3359 [SYS_chdir]   sys_chdir,) show
0 528 moveto (3360 [SYS_dup]     sys_dup,) show
0 516 moveto (3361 [SYS_getpid]  sys_getpid,) show
0 504 moveto (3362 [SYS_sbrk]    sys_sbrk,) show
0 492 moveto (3363 [SYS_sleep]   sys_sleep,) show
0 480 moveto (3364 [SYS_uptime]  sys_uptime,) show
0 468 moveto (3365 [SYS_open]    sys_open,) show
0 456 moveto (3366 [SYS_write]   sys_write,) show
0 444 moveto (3367 [SYS_mknod]   sys_mknod,) show
0 432 moveto (3368 [SYS_unlink]  sys_unlink,) show
0 420 moveto (3369 [SYS_link]    sys_link,) show
0 408 moveto (3370 [SYS_mkdir]   sys_mkdir,) show
0 396 moveto (3371 [SYS_close]   sys_close,) show
0 384 moveto (3372 };) show
0 372 moveto (3373 ) show
0 360 moveto (3374 void) show
0 348 moveto (3375 syscall\(void\)) show
0 336 moveto (3376 {) show
0 324 moveto (3377   int num;) show
0 312 moveto (3378 ) show
0 300 moveto (3379   num = proc->tf->eax;) show
0 288 moveto (3380   if\(num > 0 && num < NELEM\(syscalls\) && syscalls[num]\) {) show
0 276 moveto (3381     proc->tf->eax = syscalls[num]\(\);) show
0 264 moveto (3382   } else {) show
0 252 moveto (3383     cprintf\("%d %s: unknown sys call %d\\n",) show
0 240 moveto (3384             proc->pid, proc->name, num\);) show
0 228 moveto (3385     proc->tf->eax = -1;) show
0 216 moveto (3386   }) show
0 204 moveto (3387 }) show
0 192 moveto (3388 ) show
0 180 moveto (3389 ) show
0 168 moveto (3390 ) show
0 156 moveto (3391 ) show
0 144 moveto (3392 ) show
0 132 moveto (3393 ) show
0 120 moveto (3394 ) show
0 108 moveto (3395 ) show
0 96 moveto (3396 ) show
0 84 moveto (3397 ) show
0 72 moveto (3398 ) show
0 60 moveto (3399 ) show
0 24 moveto (Sheet 33) show
grestore
restore
showpage
%%Page: 42 42
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sysproc.c  Page 1) show
0 648 moveto (3400 #include "types.h") show
0 636 moveto (3401 #include "x86.h") show
0 624 moveto (3402 #include "defs.h") show
0 612 moveto (3403 #include "param.h") show
0 600 moveto (3404 #include "memlayout.h") show
0 588 moveto (3405 #include "mmu.h") show
0 576 moveto (3406 #include "proc.h") show
0 564 moveto (3407 ) show
0 552 moveto (3408 int) show
0 540 moveto (3409 sys_fork\(void\)) show
0 528 moveto (3410 {) show
0 516 moveto (3411   return fork\(\);) show
0 504 moveto (3412 }) show
0 492 moveto (3413 ) show
0 480 moveto (3414 int) show
0 468 moveto (3415 sys_exit\(void\)) show
0 456 moveto (3416 {) show
0 444 moveto (3417   exit\(\);) show
0 432 moveto (3418   return 0;  // not reached) show
0 420 moveto (3419 }) show
0 408 moveto (3420 ) show
0 396 moveto (3421 int) show
0 384 moveto (3422 sys_wait\(void\)) show
0 372 moveto (3423 {) show
0 360 moveto (3424   return wait\(\);) show
0 348 moveto (3425 }) show
0 336 moveto (3426 ) show
0 324 moveto (3427 int) show
0 312 moveto (3428 sys_kill\(void\)) show
0 300 moveto (3429 {) show
0 288 moveto (3430   int pid;) show
0 276 moveto (3431 ) show
0 264 moveto (3432   if\(argint\(0, &pid\) < 0\)) show
0 252 moveto (3433     return -1;) show
0 240 moveto (3434   return kill\(pid\);) show
0 228 moveto (3435 }) show
0 216 moveto (3436 ) show
0 204 moveto (3437 int) show
0 192 moveto (3438 sys_getpid\(void\)) show
0 180 moveto (3439 {) show
0 168 moveto (3440   return proc->pid;) show
0 156 moveto (3441 }) show
0 144 moveto (3442 ) show
0 132 moveto (3443 ) show
0 120 moveto (3444 ) show
0 108 moveto (3445 ) show
0 96 moveto (3446 ) show
0 84 moveto (3447 ) show
0 72 moveto (3448 ) show
0 60 moveto (3449 ) show
0 24 moveto (Sheet 34) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sysproc.c  Page 2) show
0 648 moveto (3450 int) show
0 636 moveto (3451 sys_sbrk\(void\)) show
0 624 moveto (3452 {) show
0 612 moveto (3453   int addr;) show
0 600 moveto (3454   int n;) show
0 588 moveto (3455 ) show
0 576 moveto (3456   if\(argint\(0, &n\) < 0\)) show
0 564 moveto (3457     return -1;) show
0 552 moveto (3458   addr = proc->sz;) show
0 540 moveto (3459   if\(growproc\(n\) < 0\)) show
0 528 moveto (3460     return -1;) show
0 516 moveto (3461   return addr;) show
0 504 moveto (3462 }) show
0 492 moveto (3463 ) show
0 480 moveto (3464 int) show
0 468 moveto (3465 sys_sleep\(void\)) show
0 456 moveto (3466 {) show
0 444 moveto (3467   int n;) show
0 432 moveto (3468   uint ticks0;) show
0 420 moveto (3469 ) show
0 408 moveto (3470   if\(argint\(0, &n\) < 0\)) show
0 396 moveto (3471     return -1;) show
0 384 moveto (3472   acquire\(&tickslock\);) show
0 372 moveto (3473   ticks0 = ticks;) show
0 360 moveto (3474   while\(ticks - ticks0 < n\){) show
0 348 moveto (3475     if\(proc->killed\){) show
0 336 moveto (3476       release\(&tickslock\);) show
0 324 moveto (3477       return -1;) show
0 312 moveto (3478     }) show
0 300 moveto (3479     sleep\(&ticks, &tickslock\);) show
0 288 moveto (3480   }) show
0 276 moveto (3481   release\(&tickslock\);) show
0 264 moveto (3482   return 0;) show
0 252 moveto (3483 }) show
0 240 moveto (3484 ) show
0 228 moveto (3485 // return how many clock tick interrupts have occurred) show
0 216 moveto (3486 // since start.) show
0 204 moveto (3487 int) show
0 192 moveto (3488 sys_uptime\(void\)) show
0 180 moveto (3489 {) show
0 168 moveto (3490   uint xticks;) show
0 156 moveto (3491 ) show
0 144 moveto (3492   acquire\(&tickslock\);) show
0 132 moveto (3493   xticks = ticks;) show
0 120 moveto (3494   release\(&tickslock\);) show
0 108 moveto (3495   return xticks;) show
0 96 moveto (3496 }) show
0 84 moveto (3497 ) show
0 72 moveto (3498 ) show
0 60 moveto (3499 ) show
0 24 moveto (Sheet 34) show
grestore
restore
showpage
%%Page: 43 43
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/buf.h  Page 1) show
0 648 moveto (3500 struct buf {) show
0 636 moveto (3501   int flags;) show
0 624 moveto (3502   uint dev;) show
0 612 moveto (3503   uint sector;) show
0 600 moveto (3504   struct buf *prev; // LRU cache list) show
0 588 moveto (3505   struct buf *next;) show
0 576 moveto (3506   struct buf *qnext; // disk queue) show
0 564 moveto (3507   uchar data[512];) show
0 552 moveto (3508 };) show
0 540 moveto (3509 #define B_BUSY  0x1  // buffer is locked by some process) show
0 528 moveto (3510 #define B_VALID 0x2  // buffer has been read from disk) show
0 516 moveto (3511 #define B_DIRTY 0x4  // buffer needs to be written to disk) show
0 504 moveto (3512 ) show
0 492 moveto (3513 ) show
0 480 moveto (3514 ) show
0 468 moveto (3515 ) show
0 456 moveto (3516 ) show
0 444 moveto (3517 ) show
0 432 moveto (3518 ) show
0 420 moveto (3519 ) show
0 408 moveto (3520 ) show
0 396 moveto (3521 ) show
0 384 moveto (3522 ) show
0 372 moveto (3523 ) show
0 360 moveto (3524 ) show
0 348 moveto (3525 ) show
0 336 moveto (3526 ) show
0 324 moveto (3527 ) show
0 312 moveto (3528 ) show
0 300 moveto (3529 ) show
0 288 moveto (3530 ) show
0 276 moveto (3531 ) show
0 264 moveto (3532 ) show
0 252 moveto (3533 ) show
0 240 moveto (3534 ) show
0 228 moveto (3535 ) show
0 216 moveto (3536 ) show
0 204 moveto (3537 ) show
0 192 moveto (3538 ) show
0 180 moveto (3539 ) show
0 168 moveto (3540 ) show
0 156 moveto (3541 ) show
0 144 moveto (3542 ) show
0 132 moveto (3543 ) show
0 120 moveto (3544 ) show
0 108 moveto (3545 ) show
0 96 moveto (3546 ) show
0 84 moveto (3547 ) show
0 72 moveto (3548 ) show
0 60 moveto (3549 ) show
0 24 moveto (Sheet 35) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fcntl.h  Page 1) show
0 648 moveto (3550 #define O_RDONLY  0x000) show
0 636 moveto (3551 #define O_WRONLY  0x001) show
0 624 moveto (3552 #define O_RDWR    0x002) show
0 612 moveto (3553 #define O_CREATE  0x200) show
0 600 moveto (3554 ) show
0 588 moveto (3555 ) show
0 576 moveto (3556 ) show
0 564 moveto (3557 ) show
0 552 moveto (3558 ) show
0 540 moveto (3559 ) show
0 528 moveto (3560 ) show
0 516 moveto (3561 ) show
0 504 moveto (3562 ) show
0 492 moveto (3563 ) show
0 480 moveto (3564 ) show
0 468 moveto (3565 ) show
0 456 moveto (3566 ) show
0 444 moveto (3567 ) show
0 432 moveto (3568 ) show
0 420 moveto (3569 ) show
0 408 moveto (3570 ) show
0 396 moveto (3571 ) show
0 384 moveto (3572 ) show
0 372 moveto (3573 ) show
0 360 moveto (3574 ) show
0 348 moveto (3575 ) show
0 336 moveto (3576 ) show
0 324 moveto (3577 ) show
0 312 moveto (3578 ) show
0 300 moveto (3579 ) show
0 288 moveto (3580 ) show
0 276 moveto (3581 ) show
0 264 moveto (3582 ) show
0 252 moveto (3583 ) show
0 240 moveto (3584 ) show
0 228 moveto (3585 ) show
0 216 moveto (3586 ) show
0 204 moveto (3587 ) show
0 192 moveto (3588 ) show
0 180 moveto (3589 ) show
0 168 moveto (3590 ) show
0 156 moveto (3591 ) show
0 144 moveto (3592 ) show
0 132 moveto (3593 ) show
0 120 moveto (3594 ) show
0 108 moveto (3595 ) show
0 96 moveto (3596 ) show
0 84 moveto (3597 ) show
0 72 moveto (3598 ) show
0 60 moveto (3599 ) show
0 24 moveto (Sheet 35) show
grestore
restore
showpage
%%Page: 44 44
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/stat.h  Page 1) show
0 648 moveto (3600 #define T_DIR  1   // Directory) show
0 636 moveto (3601 #define T_FILE 2   // File) show
0 624 moveto (3602 #define T_DEV  3   // Device) show
0 612 moveto (3603 ) show
0 600 moveto (3604 struct stat {) show
0 588 moveto (3605   short type;  // Type of file) show
0 576 moveto (3606   int dev;     // File system's disk device) show
0 564 moveto (3607   uint ino;    // Inode number) show
0 552 moveto (3608   short nlink; // Number of links to file) show
0 540 moveto (3609   uint size;   // Size of file in bytes) show
0 528 moveto (3610 };) show
0 516 moveto (3611 ) show
0 504 moveto (3612 ) show
0 492 moveto (3613 ) show
0 480 moveto (3614 ) show
0 468 moveto (3615 ) show
0 456 moveto (3616 ) show
0 444 moveto (3617 ) show
0 432 moveto (3618 ) show
0 420 moveto (3619 ) show
0 408 moveto (3620 ) show
0 396 moveto (3621 ) show
0 384 moveto (3622 ) show
0 372 moveto (3623 ) show
0 360 moveto (3624 ) show
0 348 moveto (3625 ) show
0 336 moveto (3626 ) show
0 324 moveto (3627 ) show
0 312 moveto (3628 ) show
0 300 moveto (3629 ) show
0 288 moveto (3630 ) show
0 276 moveto (3631 ) show
0 264 moveto (3632 ) show
0 252 moveto (3633 ) show
0 240 moveto (3634 ) show
0 228 moveto (3635 ) show
0 216 moveto (3636 ) show
0 204 moveto (3637 ) show
0 192 moveto (3638 ) show
0 180 moveto (3639 ) show
0 168 moveto (3640 ) show
0 156 moveto (3641 ) show
0 144 moveto (3642 ) show
0 132 moveto (3643 ) show
0 120 moveto (3644 ) show
0 108 moveto (3645 ) show
0 96 moveto (3646 ) show
0 84 moveto (3647 ) show
0 72 moveto (3648 ) show
0 60 moveto (3649 ) show
0 24 moveto (Sheet 36) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.h  Page 1) show
0 648 moveto (3650 // On-disk file system format.) show
0 636 moveto (3651 // Both the kernel and user programs use this header file.) show
0 624 moveto (3652 ) show
0 612 moveto (3653 // Block 0 is unused.) show
0 600 moveto (3654 // Block 1 is super block.) show
0 588 moveto (3655 // Blocks 2 through sb.ninodes/IPB hold inodes.) show
0 576 moveto (3656 // Then free bitmap blocks holding sb.size bits.) show
0 564 moveto (3657 // Then sb.nblocks data blocks.) show
0 552 moveto (3658 // Then sb.nlog log blocks.) show
0 540 moveto (3659 ) show
0 528 moveto (3660 #define ROOTINO 1  // root i-number) show
0 516 moveto (3661 #define BSIZE 512  // block size) show
0 504 moveto (3662 ) show
0 492 moveto (3663 // File system super block) show
0 480 moveto (3664 struct superblock {) show
0 468 moveto (3665   uint size;         // Size of file system image \(blocks\)) show
0 456 moveto (3666   uint nblocks;      // Number of data blocks) show
0 444 moveto (3667   uint ninodes;      // Number of inodes.) show
0 432 moveto (3668   uint nlog;         // Number of log blocks) show
0 420 moveto (3669 };) show
0 408 moveto (3670 ) show
0 396 moveto (3671 #define NDIRECT 12) show
0 384 moveto (3672 #define NINDIRECT \(BSIZE / sizeof\(uint\)\)) show
0 372 moveto (3673 #define MAXFILE \(NDIRECT + NINDIRECT\)) show
0 360 moveto (3674 ) show
0 348 moveto (3675 // On-disk inode structure) show
0 336 moveto (3676 struct dinode {) show
0 324 moveto (3677   short type;           // File type) show
0 312 moveto (3678   short major;          // Major device number \(T_DEV only\)) show
0 300 moveto (3679   short minor;          // Minor device number \(T_DEV only\)) show
0 288 moveto (3680   short nlink;          // Number of links to inode in file system) show
0 276 moveto (3681   uint size;            // Size of file \(bytes\)) show
0 264 moveto (3682   uint addrs[NDIRECT+1];   // Data block addresses) show
0 252 moveto (3683 };) show
0 240 moveto (3684 ) show
0 228 moveto (3685 // Inodes per block.) show
0 216 moveto (3686 #define IPB           \(BSIZE / sizeof\(struct dinode\)\)) show
0 204 moveto (3687 ) show
0 192 moveto (3688 // Block containing inode i) show
0 180 moveto (3689 #define IBLOCK\(i\)     \(\(i\) / IPB + 2\)) show
0 168 moveto (3690 ) show
0 156 moveto (3691 // Bitmap bits per block) show
0 144 moveto (3692 #define BPB           \(BSIZE*8\)) show
0 132 moveto (3693 ) show
0 120 moveto (3694 // Block containing bit for block b) show
0 108 moveto (3695 #define BBLOCK\(b, ninodes\) \(b/BPB + \(ninodes\)/IPB + 3\)) show
0 96 moveto (3696 ) show
0 84 moveto (3697 // Directory is a file containing a sequence of dirent structures.) show
0 72 moveto (3698 #define DIRSIZ 14) show
0 60 moveto (3699 ) show
0 24 moveto (Sheet 36) show
grestore
restore
showpage
%%Page: 45 45
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.h  Page 2) show
0 648 moveto (3700 struct dirent {) show
0 636 moveto (3701   ushort inum;) show
0 624 moveto (3702   char name[DIRSIZ];) show
0 612 moveto (3703 };) show
0 600 moveto (3704 ) show
0 588 moveto (3705 ) show
0 576 moveto (3706 ) show
0 564 moveto (3707 ) show
0 552 moveto (3708 ) show
0 540 moveto (3709 ) show
0 528 moveto (3710 ) show
0 516 moveto (3711 ) show
0 504 moveto (3712 ) show
0 492 moveto (3713 ) show
0 480 moveto (3714 ) show
0 468 moveto (3715 ) show
0 456 moveto (3716 ) show
0 444 moveto (3717 ) show
0 432 moveto (3718 ) show
0 420 moveto (3719 ) show
0 408 moveto (3720 ) show
0 396 moveto (3721 ) show
0 384 moveto (3722 ) show
0 372 moveto (3723 ) show
0 360 moveto (3724 ) show
0 348 moveto (3725 ) show
0 336 moveto (3726 ) show
0 324 moveto (3727 ) show
0 312 moveto (3728 ) show
0 300 moveto (3729 ) show
0 288 moveto (3730 ) show
0 276 moveto (3731 ) show
0 264 moveto (3732 ) show
0 252 moveto (3733 ) show
0 240 moveto (3734 ) show
0 228 moveto (3735 ) show
0 216 moveto (3736 ) show
0 204 moveto (3737 ) show
0 192 moveto (3738 ) show
0 180 moveto (3739 ) show
0 168 moveto (3740 ) show
0 156 moveto (3741 ) show
0 144 moveto (3742 ) show
0 132 moveto (3743 ) show
0 120 moveto (3744 ) show
0 108 moveto (3745 ) show
0 96 moveto (3746 ) show
0 84 moveto (3747 ) show
0 72 moveto (3748 ) show
0 60 moveto (3749 ) show
0 24 moveto (Sheet 37) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/file.h  Page 1) show
0 648 moveto (3750 struct file {) show
0 636 moveto (3751   enum { FD_NONE, FD_PIPE, FD_INODE } type;) show
0 624 moveto (3752   int ref; // reference count) show
0 612 moveto (3753   char readable;) show
0 600 moveto (3754   char writable;) show
0 588 moveto (3755   struct pipe *pipe;) show
0 576 moveto (3756   struct inode *ip;) show
0 564 moveto (3757   uint off;) show
0 552 moveto (3758 };) show
0 540 moveto (3759 ) show
0 528 moveto (3760 ) show
0 516 moveto (3761 // in-memory copy of an inode) show
0 504 moveto (3762 struct inode {) show
0 492 moveto (3763   uint dev;           // Device number) show
0 480 moveto (3764   uint inum;          // Inode number) show
0 468 moveto (3765   int ref;            // Reference count) show
0 456 moveto (3766   int flags;          // I_BUSY, I_VALID) show
0 444 moveto (3767 ) show
0 432 moveto (3768   short type;         // copy of disk inode) show
0 420 moveto (3769   short major;) show
0 408 moveto (3770   short minor;) show
0 396 moveto (3771   short nlink;) show
0 384 moveto (3772   uint size;) show
0 372 moveto (3773   uint addrs[NDIRECT+1];) show
0 360 moveto (3774 };) show
0 348 moveto (3775 #define I_BUSY 0x1) show
0 336 moveto (3776 #define I_VALID 0x2) show
0 324 moveto (3777 ) show
0 312 moveto (3778 // table mapping major device number to) show
0 300 moveto (3779 // device functions) show
0 288 moveto (3780 struct devsw {) show
0 276 moveto (3781   int \(*read\)\(struct inode*, char*, int\);) show
0 264 moveto (3782   int \(*write\)\(struct inode*, char*, int\);) show
0 252 moveto (3783 };) show
0 240 moveto (3784 ) show
0 228 moveto (3785 extern struct devsw devsw[];) show
0 216 moveto (3786 ) show
0 204 moveto (3787 #define CONSOLE 1) show
0 192 moveto (3788 ) show
0 180 moveto (3789 ) show
0 168 moveto (3790 ) show
0 156 moveto (3791 ) show
0 144 moveto (3792 ) show
0 132 moveto (3793 ) show
0 120 moveto (3794 ) show
0 108 moveto (3795 ) show
0 96 moveto (3796 ) show
0 84 moveto (3797 ) show
0 72 moveto (3798 ) show
0 60 moveto (3799 ) show
0 24 moveto (Sheet 37) show
grestore
restore
showpage
%%Page: 46 46
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/ide.c  Page 1) show
0 648 moveto (3800 // Simple PIO-based \(non-DMA\) IDE driver code.) show
0 636 moveto (3801 ) show
0 624 moveto (3802 #include "types.h") show
0 612 moveto (3803 #include "defs.h") show
0 600 moveto (3804 #include "param.h") show
0 588 moveto (3805 #include "memlayout.h") show
0 576 moveto (3806 #include "mmu.h") show
0 564 moveto (3807 #include "proc.h") show
0 552 moveto (3808 #include "x86.h") show
0 540 moveto (3809 #include "traps.h") show
0 528 moveto (3810 #include "spinlock.h") show
0 516 moveto (3811 #include "buf.h") show
0 504 moveto (3812 ) show
0 492 moveto (3813 #define IDE_BSY       0x80) show
0 480 moveto (3814 #define IDE_DRDY      0x40) show
0 468 moveto (3815 #define IDE_DF        0x20) show
0 456 moveto (3816 #define IDE_ERR       0x01) show
0 444 moveto (3817 ) show
0 432 moveto (3818 #define IDE_CMD_READ  0x20) show
0 420 moveto (3819 #define IDE_CMD_WRITE 0x30) show
0 408 moveto (3820 ) show
0 396 moveto (3821 // idequeue points to the buf now being read/written to the disk.) show
0 384 moveto (3822 // idequeue->qnext points to the next buf to be processed.) show
0 372 moveto (3823 // You must hold idelock while manipulating queue.) show
0 360 moveto (3824 ) show
0 348 moveto (3825 static struct spinlock idelock;) show
0 336 moveto (3826 static struct buf *idequeue;) show
0 324 moveto (3827 ) show
0 312 moveto (3828 static int havedisk1;) show
0 300 moveto (3829 static void idestart\(struct buf*\);) show
0 288 moveto (3830 ) show
0 276 moveto (3831 // Wait for IDE disk to become ready.) show
0 264 moveto (3832 static int) show
0 252 moveto (3833 idewait\(int checkerr\)) show
0 240 moveto (3834 {) show
0 228 moveto (3835   int r;) show
0 216 moveto (3836 ) show
0 204 moveto (3837   while\(\(\(r = inb\(0x1f7\)\) & \(IDE_BSY|IDE_DRDY\)\) != IDE_DRDY\)) show
0 192 moveto (3838     ;) show
0 180 moveto (3839   if\(checkerr && \(r & \(IDE_DF|IDE_ERR\)\) != 0\)) show
0 168 moveto (3840     return -1;) show
0 156 moveto (3841   return 0;) show
0 144 moveto (3842 }) show
0 132 moveto (3843 ) show
0 120 moveto (3844 ) show
0 108 moveto (3845 ) show
0 96 moveto (3846 ) show
0 84 moveto (3847 ) show
0 72 moveto (3848 ) show
0 60 moveto (3849 ) show
0 24 moveto (Sheet 38) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/ide.c  Page 2) show
0 648 moveto (3850 void) show
0 636 moveto (3851 ideinit\(void\)) show
0 624 moveto (3852 {) show
0 612 moveto (3853   int i;) show
0 600 moveto (3854 ) show
0 588 moveto (3855   initlock\(&idelock, "ide"\);) show
0 576 moveto (3856   picenable\(IRQ_IDE\);) show
0 564 moveto (3857   ioapicenable\(IRQ_IDE, ncpu - 1\);) show
0 552 moveto (3858   idewait\(0\);) show
0 540 moveto (3859 ) show
0 528 moveto (3860   // Check if disk 1 is present) show
0 516 moveto (3861   outb\(0x1f6, 0xe0 | \(1<<4\)\);) show
0 504 moveto (3862   for\(i=0; i<1000; i++\){) show
0 492 moveto (3863     if\(inb\(0x1f7\) != 0\){) show
0 480 moveto (3864       havedisk1 = 1;) show
0 468 moveto (3865       break;) show
0 456 moveto (3866     }) show
0 444 moveto (3867   }) show
0 432 moveto (3868 ) show
0 420 moveto (3869   // Switch back to disk 0.) show
0 408 moveto (3870   outb\(0x1f6, 0xe0 | \(0<<4\)\);) show
0 396 moveto (3871 }) show
0 384 moveto (3872 ) show
0 372 moveto (3873 // Start the request for b.  Caller must hold idelock.) show
0 360 moveto (3874 static void) show
0 348 moveto (3875 idestart\(struct buf *b\)) show
0 336 moveto (3876 {) show
0 324 moveto (3877   if\(b == 0\)) show
0 312 moveto (3878     panic\("idestart"\);) show
0 300 moveto (3879 ) show
0 288 moveto (3880   idewait\(0\);) show
0 276 moveto (3881   outb\(0x3f6, 0\);  // generate interrupt) show
0 264 moveto (3882   outb\(0x1f2, 1\);  // number of sectors) show
0 252 moveto (3883   outb\(0x1f3, b->sector & 0xff\);) show
0 240 moveto (3884   outb\(0x1f4, \(b->sector >> 8\) & 0xff\);) show
0 228 moveto (3885   outb\(0x1f5, \(b->sector >> 16\) & 0xff\);) show
0 216 moveto (3886   outb\(0x1f6, 0xe0 | \(\(b->dev&1\)<<4\) | \(\(b->sector>>24\)&0x0f\)\);) show
0 204 moveto (3887   if\(b->flags & B_DIRTY\){) show
0 192 moveto (3888     outb\(0x1f7, IDE_CMD_WRITE\);) show
0 180 moveto (3889     outsl\(0x1f0, b->data, 512/4\);) show
0 168 moveto (3890   } else {) show
0 156 moveto (3891     outb\(0x1f7, IDE_CMD_READ\);) show
0 144 moveto (3892   }) show
0 132 moveto (3893 }) show
0 120 moveto (3894 ) show
0 108 moveto (3895 ) show
0 96 moveto (3896 ) show
0 84 moveto (3897 ) show
0 72 moveto (3898 ) show
0 60 moveto (3899 ) show
0 24 moveto (Sheet 38) show
grestore
restore
showpage
%%Page: 47 47
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/ide.c  Page 3) show
0 648 moveto (3900 // Interrupt handler.) show
0 636 moveto (3901 void) show
0 624 moveto (3902 ideintr\(void\)) show
0 612 moveto (3903 {) show
0 600 moveto (3904   struct buf *b;) show
0 588 moveto (3905 ) show
0 576 moveto (3906   // First queued buffer is the active request.) show
0 564 moveto (3907   acquire\(&idelock\);) show
0 552 moveto (3908   if\(\(b = idequeue\) == 0\){) show
0 540 moveto (3909     release\(&idelock\);) show
0 528 moveto (3910     // cprintf\("spurious IDE interrupt\\n"\);) show
0 516 moveto (3911     return;) show
0 504 moveto (3912   }) show
0 492 moveto (3913   idequeue = b->qnext;) show
0 480 moveto (3914 ) show
0 468 moveto (3915   // Read data if needed.) show
0 456 moveto (3916   if\(!\(b->flags & B_DIRTY\) && idewait\(1\) >= 0\)) show
0 444 moveto (3917     insl\(0x1f0, b->data, 512/4\);) show
0 432 moveto (3918 ) show
0 420 moveto (3919   // Wake process waiting for this buf.) show
0 408 moveto (3920   b->flags |= B_VALID;) show
0 396 moveto (3921   b->flags &= ~B_DIRTY;) show
0 384 moveto (3922   wakeup\(b\);) show
0 372 moveto (3923 ) show
0 360 moveto (3924   // Start disk on next buf in queue.) show
0 348 moveto (3925   if\(idequeue != 0\)) show
0 336 moveto (3926     idestart\(idequeue\);) show
0 324 moveto (3927 ) show
0 312 moveto (3928   release\(&idelock\);) show
0 300 moveto (3929 }) show
0 288 moveto (3930 ) show
0 276 moveto (3931 ) show
0 264 moveto (3932 ) show
0 252 moveto (3933 ) show
0 240 moveto (3934 ) show
0 228 moveto (3935 ) show
0 216 moveto (3936 ) show
0 204 moveto (3937 ) show
0 192 moveto (3938 ) show
0 180 moveto (3939 ) show
0 168 moveto (3940 ) show
0 156 moveto (3941 ) show
0 144 moveto (3942 ) show
0 132 moveto (3943 ) show
0 120 moveto (3944 ) show
0 108 moveto (3945 ) show
0 96 moveto (3946 ) show
0 84 moveto (3947 ) show
0 72 moveto (3948 ) show
0 60 moveto (3949 ) show
0 24 moveto (Sheet 39) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/ide.c  Page 4) show
0 648 moveto (3950 // Sync buf with disk.) show
0 636 moveto (3951 // If B_DIRTY is set, write buf to disk, clear B_DIRTY, set B_VALID.) show
0 624 moveto (3952 // Else if B_VALID is not set, read buf from disk, set B_VALID.) show
0 612 moveto (3953 void) show
0 600 moveto (3954 iderw\(struct buf *b\)) show
0 588 moveto (3955 {) show
0 576 moveto (3956   struct buf **pp;) show
0 564 moveto (3957 ) show
0 552 moveto (3958   if\(!\(b->flags & B_BUSY\)\)) show
0 540 moveto (3959     panic\("iderw: buf not busy"\);) show
0 528 moveto (3960   if\(\(b->flags & \(B_VALID|B_DIRTY\)\) == B_VALID\)) show
0 516 moveto (3961     panic\("iderw: nothing to do"\);) show
0 504 moveto (3962   if\(b->dev != 0 && !havedisk1\)) show
0 492 moveto (3963     panic\("iderw: ide disk 1 not present"\);) show
0 480 moveto (3964 ) show
0 468 moveto (3965   acquire\(&idelock\);  ) show
0 456 moveto (3966 ) show
0 444 moveto (3967   // Append b to idequeue.) show
0 432 moveto (3968   b->qnext = 0;) show
0 420 moveto (3969   for\(pp=&idequeue; *pp; pp=&\(*pp\)->qnext\)  ) show
0 408 moveto (3970     ;) show
0 396 moveto (3971   *pp = b;) show
0 384 moveto (3972 ) show
0 372 moveto (3973   // Start disk if necessary.) show
0 360 moveto (3974   if\(idequeue == b\)) show
0 348 moveto (3975     idestart\(b\);) show
0 336 moveto (3976 ) show
0 324 moveto (3977   // Wait for request to finish.) show
0 312 moveto (3978   while\(\(b->flags & \(B_VALID|B_DIRTY\)\) != B_VALID\){) show
0 300 moveto (3979     sleep\(b, &idelock\);) show
0 288 moveto (3980   }) show
0 276 moveto (3981 ) show
0 264 moveto (3982   release\(&idelock\);) show
0 252 moveto (3983 }) show
0 240 moveto (3984 ) show
0 228 moveto (3985 ) show
0 216 moveto (3986 ) show
0 204 moveto (3987 ) show
0 192 moveto (3988 ) show
0 180 moveto (3989 ) show
0 168 moveto (3990 ) show
0 156 moveto (3991 ) show
0 144 moveto (3992 ) show
0 132 moveto (3993 ) show
0 120 moveto (3994 ) show
0 108 moveto (3995 ) show
0 96 moveto (3996 ) show
0 84 moveto (3997 ) show
0 72 moveto (3998 ) show
0 60 moveto (3999 ) show
0 24 moveto (Sheet 39) show
grestore
restore
showpage
%%Page: 48 48
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/bio.c  Page 1) show
0 648 moveto (4000 // Buffer cache.) show
0 636 moveto (4001 //) show
0 624 moveto (4002 // The buffer cache is a linked list of buf structures holding) show
0 612 moveto (4003 // cached copies of disk block contents.  Caching disk blocks) show
0 600 moveto (4004 // in memory reduces the number of disk reads and also provides) show
0 588 moveto (4005 // a synchronization point for disk blocks used by multiple processes.) show
0 576 moveto (4006 //) show
0 564 moveto (4007 // Interface:) show
0 552 moveto (4008 // * To get a buffer for a particular disk block, call bread.) show
0 540 moveto (4009 // * After changing buffer data, call bwrite to write it to disk.) show
0 528 moveto (4010 // * When done with the buffer, call brelse.) show
0 516 moveto (4011 // * Do not use the buffer after calling brelse.) show
0 504 moveto (4012 // * Only one process at a time can use a buffer,) show
0 492 moveto (4013 //     so do not keep them longer than necessary.) show
0 480 moveto (4014 //) show
0 468 moveto (4015 // The implementation uses three state flags internally:) show
0 456 moveto (4016 // * B_BUSY: the block has been returned from bread) show
0 444 moveto (4017 //     and has not been passed back to brelse.) show
0 432 moveto (4018 // * B_VALID: the buffer data has been read from the disk.) show
0 420 moveto (4019 // * B_DIRTY: the buffer data has been modified) show
0 408 moveto (4020 //     and needs to be written to disk.) show
0 396 moveto (4021 ) show
0 384 moveto (4022 #include "types.h") show
0 372 moveto (4023 #include "defs.h") show
0 360 moveto (4024 #include "param.h") show
0 348 moveto (4025 #include "spinlock.h") show
0 336 moveto (4026 #include "buf.h") show
0 324 moveto (4027 ) show
0 312 moveto (4028 struct {) show
0 300 moveto (4029   struct spinlock lock;) show
0 288 moveto (4030   struct buf buf[NBUF];) show
0 276 moveto (4031 ) show
0 264 moveto (4032   // Linked list of all buffers, through prev/next.) show
0 252 moveto (4033   // head.next is most recently used.) show
0 240 moveto (4034   struct buf head;) show
0 228 moveto (4035 } bcache;) show
0 216 moveto (4036 ) show
0 204 moveto (4037 void) show
0 192 moveto (4038 binit\(void\)) show
0 180 moveto (4039 {) show
0 168 moveto (4040   struct buf *b;) show
0 156 moveto (4041 ) show
0 144 moveto (4042   initlock\(&bcache.lock, "bcache"\);) show
0 132 moveto (4043 ) show
0 120 moveto (4044 ) show
0 108 moveto (4045 ) show
0 96 moveto (4046 ) show
0 84 moveto (4047 ) show
0 72 moveto (4048 ) show
0 60 moveto (4049 ) show
0 24 moveto (Sheet 40) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/bio.c  Page 2) show
0 648 moveto (4050   // Create linked list of buffers) show
0 636 moveto (4051   bcache.head.prev = &bcache.head;) show
0 624 moveto (4052   bcache.head.next = &bcache.head;) show
0 612 moveto (4053   for\(b = bcache.buf; b < bcache.buf+NBUF; b++\){) show
0 600 moveto (4054     b->next = bcache.head.next;) show
0 588 moveto (4055     b->prev = &bcache.head;) show
0 576 moveto (4056     b->dev = -1;) show
0 564 moveto (4057     bcache.head.next->prev = b;) show
0 552 moveto (4058     bcache.head.next = b;) show
0 540 moveto (4059   }) show
0 528 moveto (4060 }) show
0 516 moveto (4061 ) show
0 504 moveto (4062 // Look through buffer cache for sector on device dev.) show
0 492 moveto (4063 // If not found, allocate fresh block.) show
0 480 moveto (4064 // In either case, return B_BUSY buffer.) show
0 468 moveto (4065 static struct buf*) show
0 456 moveto (4066 bget\(uint dev, uint sector\)) show
0 444 moveto (4067 {) show
0 432 moveto (4068   struct buf *b;) show
0 420 moveto (4069 ) show
0 408 moveto (4070   acquire\(&bcache.lock\);) show
0 396 moveto (4071 ) show
0 384 moveto (4072  loop:) show
0 372 moveto (4073   // Is the sector already cached?) show
0 360 moveto (4074   for\(b = bcache.head.next; b != &bcache.head; b = b->next\){) show
0 348 moveto (4075     if\(b->dev == dev && b->sector == sector\){) show
0 336 moveto (4076       if\(!\(b->flags & B_BUSY\)\){) show
0 324 moveto (4077         b->flags |= B_BUSY;) show
0 312 moveto (4078         release\(&bcache.lock\);) show
0 300 moveto (4079         return b;) show
0 288 moveto (4080       }) show
0 276 moveto (4081       sleep\(b, &bcache.lock\);) show
0 264 moveto (4082       goto loop;) show
0 252 moveto (4083     }) show
0 240 moveto (4084   }) show
0 228 moveto (4085 ) show
0 216 moveto (4086   // Not cached; recycle some non-busy and clean buffer.) show
0 204 moveto (4087   for\(b = bcache.head.prev; b != &bcache.head; b = b->prev\){) show
0 192 moveto (4088     if\(\(b->flags & B_BUSY\) == 0 && \(b->flags & B_DIRTY\) == 0\){) show
0 180 moveto (4089       b->dev = dev;) show
0 168 moveto (4090       b->sector = sector;) show
0 156 moveto (4091       b->flags = B_BUSY;) show
0 144 moveto (4092       release\(&bcache.lock\);) show
0 132 moveto (4093       return b;) show
0 120 moveto (4094     }) show
0 108 moveto (4095   }) show
0 96 moveto (4096   panic\("bget: no buffers"\);) show
0 84 moveto (4097 }) show
0 72 moveto (4098 ) show
0 60 moveto (4099 ) show
0 24 moveto (Sheet 40) show
grestore
restore
showpage
%%Page: 49 49
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/bio.c  Page 3) show
0 648 moveto (4100 // Return a B_BUSY buf with the contents of the indicated disk sector.) show
0 636 moveto (4101 struct buf*) show
0 624 moveto (4102 bread\(uint dev, uint sector\)) show
0 612 moveto (4103 {) show
0 600 moveto (4104   struct buf *b;) show
0 588 moveto (4105 ) show
0 576 moveto (4106   b = bget\(dev, sector\);) show
0 564 moveto (4107   if\(!\(b->flags & B_VALID\)\)) show
0 552 moveto (4108     iderw\(b\);) show
0 540 moveto (4109   return b;) show
0 528 moveto (4110 }) show
0 516 moveto (4111 ) show
0 504 moveto (4112 // Write b's contents to disk.  Must be B_BUSY.) show
0 492 moveto (4113 void) show
0 480 moveto (4114 bwrite\(struct buf *b\)) show
0 468 moveto (4115 {) show
0 456 moveto (4116   if\(\(b->flags & B_BUSY\) == 0\)) show
0 444 moveto (4117     panic\("bwrite"\);) show
0 432 moveto (4118   b->flags |= B_DIRTY;) show
0 420 moveto (4119   iderw\(b\);) show
0 408 moveto (4120 }) show
0 396 moveto (4121 ) show
0 384 moveto (4122 // Release a B_BUSY buffer.) show
0 372 moveto (4123 // Move to the head of the MRU list.) show
0 360 moveto (4124 void) show
0 348 moveto (4125 brelse\(struct buf *b\)) show
0 336 moveto (4126 {) show
0 324 moveto (4127   if\(\(b->flags & B_BUSY\) == 0\)) show
0 312 moveto (4128     panic\("brelse"\);) show
0 300 moveto (4129 ) show
0 288 moveto (4130   acquire\(&bcache.lock\);) show
0 276 moveto (4131 ) show
0 264 moveto (4132   b->next->prev = b->prev;) show
0 252 moveto (4133   b->prev->next = b->next;) show
0 240 moveto (4134   b->next = bcache.head.next;) show
0 228 moveto (4135   b->prev = &bcache.head;) show
0 216 moveto (4136   bcache.head.next->prev = b;) show
0 204 moveto (4137   bcache.head.next = b;) show
0 192 moveto (4138 ) show
0 180 moveto (4139   b->flags &= ~B_BUSY;) show
0 168 moveto (4140   wakeup\(b\);) show
0 156 moveto (4141 ) show
0 144 moveto (4142   release\(&bcache.lock\);) show
0 132 moveto (4143 }) show
0 120 moveto (4144 ) show
0 108 moveto (4145 ) show
0 96 moveto (4146 ) show
0 84 moveto (4147 ) show
0 72 moveto (4148 ) show
0 60 moveto (4149 ) show
0 24 moveto (Sheet 41) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/log.c  Page 1) show
0 648 moveto (4150 #include "types.h") show
0 636 moveto (4151 #include "defs.h") show
0 624 moveto (4152 #include "param.h") show
0 612 moveto (4153 #include "spinlock.h") show
0 600 moveto (4154 #include "fs.h") show
0 588 moveto (4155 #include "buf.h") show
0 576 moveto (4156 ) show
0 564 moveto (4157 // Simple logging. Each system call that might write the file system) show
0 552 moveto (4158 // should be surrounded with begin_trans\(\) and commit_trans\(\) calls.) show
0 540 moveto (4159 //) show
0 528 moveto (4160 // The log holds at most one transaction at a time. Commit forces) show
0 516 moveto (4161 // the log \(with commit record\) to disk, then installs the affected) show
0 504 moveto (4162 // blocks to disk, then erases the log. begin_trans\(\) ensures that) show
0 492 moveto (4163 // only one system call can be in a transaction; others must wait.) show
0 480 moveto (4164 //) show
0 468 moveto (4165 // Allowing only one transaction at a time means that the file) show
0 456 moveto (4166 // system code doesn't have to worry about the possibility of) show
0 444 moveto (4167 // one transaction reading a block that another one has modified,) show
0 432 moveto (4168 // for example an i-node block.) show
0 420 moveto (4169 //) show
0 408 moveto (4170 // Read-only system calls don't need to use transactions, though) show
0 396 moveto (4171 // this means that they may observe uncommitted data. I-node and) show
0 384 moveto (4172 // buffer locks prevent read-only calls from seeing inconsistent data.) show
0 372 moveto (4173 //) show
0 360 moveto (4174 // The log is a physical re-do log containing disk blocks.) show
0 348 moveto (4175 // The on-disk log format:) show
0 336 moveto (4176 //   header block, containing sector #s for block A, B, C, ...) show
0 324 moveto (4177 //   block A) show
0 312 moveto (4178 //   block B) show
0 300 moveto (4179 //   block C) show
0 288 moveto (4180 //   ...) show
0 276 moveto (4181 // Log appends are synchronous.) show
0 264 moveto (4182 ) show
0 252 moveto (4183 // Contents of the header block, used for both the on-disk header block) show
0 240 moveto (4184 // and to keep track in memory of logged sector #s before commit.) show
0 228 moveto (4185 struct logheader {) show
0 216 moveto (4186   int n;) show
0 204 moveto (4187   int sector[LOGSIZE];) show
0 192 moveto (4188 };) show
0 180 moveto (4189 ) show
0 168 moveto (4190 struct log {) show
0 156 moveto (4191   struct spinlock lock;) show
0 144 moveto (4192   int start;) show
0 132 moveto (4193   int size;) show
0 120 moveto (4194   int busy; // a transaction is active) show
0 108 moveto (4195   int dev;) show
0 96 moveto (4196   struct logheader lh;) show
0 84 moveto (4197 };) show
0 72 moveto (4198 ) show
0 60 moveto (4199 ) show
0 24 moveto (Sheet 41) show
grestore
restore
showpage
%%Page: 50 50
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/log.c  Page 2) show
0 648 moveto (4200 struct log log;) show
0 636 moveto (4201 ) show
0 624 moveto (4202 static void recover_from_log\(void\);) show
0 612 moveto (4203 ) show
0 600 moveto (4204 void) show
0 588 moveto (4205 initlog\(void\)) show
0 576 moveto (4206 {) show
0 564 moveto (4207   if \(sizeof\(struct logheader\) >= BSIZE\)) show
0 552 moveto (4208     panic\("initlog: too big logheader"\);) show
0 540 moveto (4209 ) show
0 528 moveto (4210   struct superblock sb;) show
0 516 moveto (4211   initlock\(&log.lock, "log"\);) show
0 504 moveto (4212   readsb\(ROOTDEV, &sb\);) show
0 492 moveto (4213   log.start = sb.size - sb.nlog;) show
0 480 moveto (4214   log.size = sb.nlog;) show
0 468 moveto (4215   log.dev = ROOTDEV;) show
0 456 moveto (4216   recover_from_log\(\);) show
0 444 moveto (4217 }) show
0 432 moveto (4218 ) show
0 420 moveto (4219 // Copy committed blocks from log to their home location) show
0 408 moveto (4220 static void) show
0 396 moveto (4221 install_trans\(void\)) show
0 384 moveto (4222 {) show
0 372 moveto (4223   int tail;) show
0 360 moveto (4224 ) show
0 348 moveto (4225   for \(tail = 0; tail < log.lh.n; tail++\) {) show
0 336 moveto (4226     struct buf *lbuf = bread\(log.dev, log.start+tail+1\); // read log block) show
0 324 moveto (4227     struct buf *dbuf = bread\(log.dev, log.lh.sector[tail]\); // read dst) show
0 312 moveto (4228     memmove\(dbuf->data, lbuf->data, BSIZE\);  // copy block to dst) show
0 300 moveto (4229     bwrite\(dbuf\);  // write dst to disk) show
0 288 moveto (4230     brelse\(lbuf\);) show
0 276 moveto (4231     brelse\(dbuf\);) show
0 264 moveto (4232   }) show
0 252 moveto (4233 }) show
0 240 moveto (4234 ) show
0 228 moveto (4235 // Read the log header from disk into the in-memory log header) show
0 216 moveto (4236 static void) show
0 204 moveto (4237 read_head\(void\)) show
0 192 moveto (4238 {) show
0 180 moveto (4239   struct buf *buf = bread\(log.dev, log.start\);) show
0 168 moveto (4240   struct logheader *lh = \(struct logheader *\) \(buf->data\);) show
0 156 moveto (4241   int i;) show
0 144 moveto (4242   log.lh.n = lh->n;) show
0 132 moveto (4243   for \(i = 0; i < log.lh.n; i++\) {) show
0 120 moveto (4244     log.lh.sector[i] = lh->sector[i];) show
0 108 moveto (4245   }) show
0 96 moveto (4246   brelse\(buf\);) show
0 84 moveto (4247 }) show
0 72 moveto (4248 ) show
0 60 moveto (4249 ) show
0 24 moveto (Sheet 42) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/log.c  Page 3) show
0 648 moveto (4250 // Write in-memory log header to disk.) show
0 636 moveto (4251 // This is the true point at which the) show
0 624 moveto (4252 // current transaction commits.) show
0 612 moveto (4253 static void) show
0 600 moveto (4254 write_head\(void\)) show
0 588 moveto (4255 {) show
0 576 moveto (4256   struct buf *buf = bread\(log.dev, log.start\);) show
0 564 moveto (4257   struct logheader *hb = \(struct logheader *\) \(buf->data\);) show
0 552 moveto (4258   int i;) show
0 540 moveto (4259   hb->n = log.lh.n;) show
0 528 moveto (4260   for \(i = 0; i < log.lh.n; i++\) {) show
0 516 moveto (4261     hb->sector[i] = log.lh.sector[i];) show
0 504 moveto (4262   }) show
0 492 moveto (4263   bwrite\(buf\);) show
0 480 moveto (4264   brelse\(buf\);) show
0 468 moveto (4265 }) show
0 456 moveto (4266 ) show
0 444 moveto (4267 static void) show
0 432 moveto (4268 recover_from_log\(void\)) show
0 420 moveto (4269 {) show
0 408 moveto (4270   read_head\(\);) show
0 396 moveto (4271   install_trans\(\); // if committed, copy from log to disk) show
0 384 moveto (4272   log.lh.n = 0;) show
0 372 moveto (4273   write_head\(\); // clear the log) show
0 360 moveto (4274 }) show
0 348 moveto (4275 ) show
0 336 moveto (4276 void) show
0 324 moveto (4277 begin_trans\(void\)) show
0 312 moveto (4278 {) show
0 300 moveto (4279   acquire\(&log.lock\);) show
0 288 moveto (4280   while \(log.busy\) {) show
0 276 moveto (4281     sleep\(&log, &log.lock\);) show
0 264 moveto (4282   }) show
0 252 moveto (4283   log.busy = 1;) show
0 240 moveto (4284   release\(&log.lock\);) show
0 228 moveto (4285 }) show
0 216 moveto (4286 ) show
0 204 moveto (4287 ) show
0 192 moveto (4288 ) show
0 180 moveto (4289 ) show
0 168 moveto (4290 ) show
0 156 moveto (4291 ) show
0 144 moveto (4292 ) show
0 132 moveto (4293 ) show
0 120 moveto (4294 ) show
0 108 moveto (4295 ) show
0 96 moveto (4296 ) show
0 84 moveto (4297 ) show
0 72 moveto (4298 ) show
0 60 moveto (4299 ) show
0 24 moveto (Sheet 42) show
grestore
restore
showpage
%%Page: 51 51
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/log.c  Page 4) show
0 648 moveto (4300 void) show
0 636 moveto (4301 commit_trans\(void\)) show
0 624 moveto (4302 {) show
0 612 moveto (4303   if \(log.lh.n > 0\) {) show
0 600 moveto (4304     write_head\(\);    // Write header to disk -- the real commit) show
0 588 moveto (4305     install_trans\(\); // Now install writes to home locations) show
0 576 moveto (4306     log.lh.n = 0;) show
0 564 moveto (4307     write_head\(\);    // Erase the transaction from the log) show
0 552 moveto (4308   }) show
0 540 moveto (4309 ) show
0 528 moveto (4310   acquire\(&log.lock\);) show
0 516 moveto (4311   log.busy = 0;) show
0 504 moveto (4312   wakeup\(&log\);) show
0 492 moveto (4313   release\(&log.lock\);) show
0 480 moveto (4314 }) show
0 468 moveto (4315 ) show
0 456 moveto (4316 // Caller has modified b->data and is done with the buffer.) show
0 444 moveto (4317 // Append the block to the log and record the block number,) show
0 432 moveto (4318 // but don't write the log header \(which would commit the write\).) show
0 420 moveto (4319 // log_write\(\) replaces bwrite\(\); a typical use is:) show
0 408 moveto (4320 //   bp = bread\(...\)) show
0 396 moveto (4321 //   modify bp->data[]) show
0 384 moveto (4322 //   log_write\(bp\)) show
0 372 moveto (4323 //   brelse\(bp\)) show
0 360 moveto (4324 void) show
0 348 moveto (4325 log_write\(struct buf *b\)) show
0 336 moveto (4326 {) show
0 324 moveto (4327   int i;) show
0 312 moveto (4328 ) show
0 300 moveto (4329   if \(log.lh.n >= LOGSIZE || log.lh.n >= log.size - 1\)) show
0 288 moveto (4330     panic\("too big a transaction"\);) show
0 276 moveto (4331   if \(!log.busy\)) show
0 264 moveto (4332     panic\("write outside of trans"\);) show
0 252 moveto (4333 ) show
0 240 moveto (4334   for \(i = 0; i < log.lh.n; i++\) {) show
0 228 moveto (4335     if \(log.lh.sector[i] == b->sector\)   // log absorbtion?) show
0 216 moveto (4336       break;) show
0 204 moveto (4337   }) show
0 192 moveto (4338   log.lh.sector[i] = b->sector;) show
0 180 moveto (4339   struct buf *lbuf = bread\(b->dev, log.start+i+1\);) show
0 168 moveto (4340   memmove\(lbuf->data, b->data, BSIZE\);) show
0 156 moveto (4341   bwrite\(lbuf\);) show
0 144 moveto (4342   brelse\(lbuf\);) show
0 132 moveto (4343   if \(i == log.lh.n\)) show
0 120 moveto (4344     log.lh.n++;) show
0 108 moveto (4345   b->flags |= B_DIRTY; // XXX prevent eviction) show
0 96 moveto (4346 }) show
0 84 moveto (4347 ) show
0 72 moveto (4348 ) show
0 60 moveto (4349 ) show
0 24 moveto (Sheet 43) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/log.c  Page 5) show
0 648 moveto (4350 // Blank page.) show
0 636 moveto (4351 ) show
0 624 moveto (4352 ) show
0 612 moveto (4353 ) show
0 600 moveto (4354 ) show
0 588 moveto (4355 ) show
0 576 moveto (4356 ) show
0 564 moveto (4357 ) show
0 552 moveto (4358 ) show
0 540 moveto (4359 ) show
0 528 moveto (4360 ) show
0 516 moveto (4361 ) show
0 504 moveto (4362 ) show
0 492 moveto (4363 ) show
0 480 moveto (4364 ) show
0 468 moveto (4365 ) show
0 456 moveto (4366 ) show
0 444 moveto (4367 ) show
0 432 moveto (4368 ) show
0 420 moveto (4369 ) show
0 408 moveto (4370 ) show
0 396 moveto (4371 ) show
0 384 moveto (4372 ) show
0 372 moveto (4373 ) show
0 360 moveto (4374 ) show
0 348 moveto (4375 ) show
0 336 moveto (4376 ) show
0 324 moveto (4377 ) show
0 312 moveto (4378 ) show
0 300 moveto (4379 ) show
0 288 moveto (4380 ) show
0 276 moveto (4381 ) show
0 264 moveto (4382 ) show
0 252 moveto (4383 ) show
0 240 moveto (4384 ) show
0 228 moveto (4385 ) show
0 216 moveto (4386 ) show
0 204 moveto (4387 ) show
0 192 moveto (4388 ) show
0 180 moveto (4389 ) show
0 168 moveto (4390 ) show
0 156 moveto (4391 ) show
0 144 moveto (4392 ) show
0 132 moveto (4393 ) show
0 120 moveto (4394 ) show
0 108 moveto (4395 ) show
0 96 moveto (4396 ) show
0 84 moveto (4397 ) show
0 72 moveto (4398 ) show
0 60 moveto (4399 ) show
0 24 moveto (Sheet 43) show
grestore
restore
showpage
%%Page: 52 52
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 1) show
0 648 moveto (4400 // File system implementation.  Five layers:) show
0 636 moveto (4401 //   + Blocks: allocator for raw disk blocks.) show
0 624 moveto (4402 //   + Log: crash recovery for multi-step updates.) show
0 612 moveto (4403 //   + Files: inode allocator, reading, writing, metadata.) show
0 600 moveto (4404 //   + Directories: inode with special contents \(list of other inodes!\)) show
0 588 moveto (4405 //   + Names: paths like /usr/rtm/xv6/fs.c for convenient naming.) show
0 576 moveto (4406 //) show
0 564 moveto (4407 // This file contains the low-level file system manipulation) show
0 552 moveto (4408 // routines.  The \(higher-level\) system call implementations) show
0 540 moveto (4409 // are in sysfile.c.) show
0 528 moveto (4410 ) show
0 516 moveto (4411 #include "types.h") show
0 504 moveto (4412 #include "defs.h") show
0 492 moveto (4413 #include "param.h") show
0 480 moveto (4414 #include "stat.h") show
0 468 moveto (4415 #include "mmu.h") show
0 456 moveto (4416 #include "proc.h") show
0 444 moveto (4417 #include "spinlock.h") show
0 432 moveto (4418 #include "buf.h") show
0 420 moveto (4419 #include "fs.h") show
0 408 moveto (4420 #include "file.h") show
0 396 moveto (4421 ) show
0 384 moveto (4422 #define min\(a, b\) \(\(a\) < \(b\) ? \(a\) : \(b\)\)) show
0 372 moveto (4423 static void itrunc\(struct inode*\);) show
0 360 moveto (4424 ) show
0 348 moveto (4425 // Read the super block.) show
0 336 moveto (4426 void) show
0 324 moveto (4427 readsb\(int dev, struct superblock *sb\)) show
0 312 moveto (4428 {) show
0 300 moveto (4429   struct buf *bp;) show
0 288 moveto (4430 ) show
0 276 moveto (4431   bp = bread\(dev, 1\);) show
0 264 moveto (4432   memmove\(sb, bp->data, sizeof\(*sb\)\);) show
0 252 moveto (4433   brelse\(bp\);) show
0 240 moveto (4434 }) show
0 228 moveto (4435 ) show
0 216 moveto (4436 // Zero a block.) show
0 204 moveto (4437 static void) show
0 192 moveto (4438 bzero\(int dev, int bno\)) show
0 180 moveto (4439 {) show
0 168 moveto (4440   struct buf *bp;) show
0 156 moveto (4441 ) show
0 144 moveto (4442   bp = bread\(dev, bno\);) show
0 132 moveto (4443   memset\(bp->data, 0, BSIZE\);) show
0 120 moveto (4444   log_write\(bp\);) show
0 108 moveto (4445   brelse\(bp\);) show
0 96 moveto (4446 }) show
0 84 moveto (4447 ) show
0 72 moveto (4448 ) show
0 60 moveto (4449 ) show
0 24 moveto (Sheet 44) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 2) show
0 648 moveto (4450 // Blocks.) show
0 636 moveto (4451 ) show
0 624 moveto (4452 // Allocate a zeroed disk block.) show
0 612 moveto (4453 static uint) show
0 600 moveto (4454 balloc\(uint dev\)) show
0 588 moveto (4455 {) show
0 576 moveto (4456   int b, bi, m;) show
0 564 moveto (4457   struct buf *bp;) show
0 552 moveto (4458   struct superblock sb;) show
0 540 moveto (4459 ) show
0 528 moveto (4460   bp = 0;) show
0 516 moveto (4461   readsb\(dev, &sb\);) show
0 504 moveto (4462   for\(b = 0; b < sb.size; b += BPB\){) show
0 492 moveto (4463     bp = bread\(dev, BBLOCK\(b, sb.ninodes\)\);) show
0 480 moveto (4464     for\(bi = 0; bi < BPB && b + bi < sb.size; bi++\){) show
0 468 moveto (4465       m = 1 << \(bi % 8\);) show
0 456 moveto (4466       if\(\(bp->data[bi/8] & m\) == 0\){  // Is block free?) show
0 444 moveto (4467         bp->data[bi/8] |= m;  // Mark block in use.) show
0 432 moveto (4468         log_write\(bp\);) show
0 420 moveto (4469         brelse\(bp\);) show
0 408 moveto (4470         bzero\(dev, b + bi\);) show
0 396 moveto (4471         return b + bi;) show
0 384 moveto (4472       }) show
0 372 moveto (4473     }) show
0 360 moveto (4474     brelse\(bp\);) show
0 348 moveto (4475   }) show
0 336 moveto (4476   panic\("balloc: out of blocks"\);) show
0 324 moveto (4477 }) show
0 312 moveto (4478 ) show
0 300 moveto (4479 // Free a disk block.) show
0 288 moveto (4480 static void) show
0 276 moveto (4481 bfree\(int dev, uint b\)) show
0 264 moveto (4482 {) show
0 252 moveto (4483   struct buf *bp;) show
0 240 moveto (4484   struct superblock sb;) show
0 228 moveto (4485   int bi, m;) show
0 216 moveto (4486 ) show
0 204 moveto (4487   readsb\(dev, &sb\);) show
0 192 moveto (4488   bp = bread\(dev, BBLOCK\(b, sb.ninodes\)\);) show
0 180 moveto (4489   bi = b % BPB;) show
0 168 moveto (4490   m = 1 << \(bi % 8\);) show
0 156 moveto (4491   if\(\(bp->data[bi/8] & m\) == 0\)) show
0 144 moveto (4492     panic\("freeing free block"\);) show
0 132 moveto (4493   bp->data[bi/8] &= ~m;) show
0 120 moveto (4494   log_write\(bp\);) show
0 108 moveto (4495   brelse\(bp\);) show
0 96 moveto (4496 }) show
0 84 moveto (4497 ) show
0 72 moveto (4498 ) show
0 60 moveto (4499 ) show
0 24 moveto (Sheet 44) show
grestore
restore
showpage
%%Page: 53 53
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 3) show
0 648 moveto (4500 // Inodes.) show
0 636 moveto (4501 //) show
0 624 moveto (4502 // An inode describes a single unnamed file.) show
0 612 moveto (4503 // The inode disk structure holds metadata: the file's type,) show
0 600 moveto (4504 // its size, the number of links referring to it, and the) show
0 588 moveto (4505 // list of blocks holding the file's content.) show
0 576 moveto (4506 //) show
0 564 moveto (4507 // The inodes are laid out sequentially on disk immediately after) show
0 552 moveto (4508 // the superblock. Each inode has a number, indicating its) show
0 540 moveto (4509 // position on the disk.) show
0 528 moveto (4510 //) show
0 516 moveto (4511 // The kernel keeps a cache of in-use inodes in memory) show
0 504 moveto (4512 // to provide a place for synchronizing access) show
0 492 moveto (4513 // to inodes used by multiple processes. The cached) show
0 480 moveto (4514 // inodes include book-keeping information that is) show
0 468 moveto (4515 // not stored on disk: ip->ref and ip->flags.) show
0 456 moveto (4516 //) show
0 444 moveto (4517 // An inode and its in-memory represtative go through a) show
0 432 moveto (4518 // sequence of states before they can be used by the) show
0 420 moveto (4519 // rest of the file system code.) show
0 408 moveto (4520 //) show
0 396 moveto (4521 // * Allocation: an inode is allocated if its type \(on disk\)) show
0 384 moveto (4522 //   is non-zero. ialloc\(\) allocates, iput\(\) frees if) show
0 372 moveto (4523 //   the link count has fallen to zero.) show
0 360 moveto (4524 //) show
0 348 moveto (4525 // * Referencing in cache: an entry in the inode cache) show
0 336 moveto (4526 //   is free if ip->ref is zero. Otherwise ip->ref tracks) show
0 324 moveto (4527 //   the number of in-memory pointers to the entry \(open) show
0 312 moveto (4528 //   files and current directories\). iget\(\) to find or) show
0 300 moveto (4529 //   create a cache entry and increment its ref, iput\(\)) show
0 288 moveto (4530 //   to decrement ref.) show
0 276 moveto (4531 //) show
0 264 moveto (4532 // * Valid: the information \(type, size, &c\) in an inode) show
0 252 moveto (4533 //   cache entry is only correct when the I_VALID bit) show
0 240 moveto (4534 //   is set in ip->flags. ilock\(\) reads the inode from) show
0 228 moveto (4535 //   the disk and sets I_VALID, while iput\(\) clears) show
0 216 moveto (4536 //   I_VALID if ip->ref has fallen to zero.) show
0 204 moveto (4537 //) show
0 192 moveto (4538 // * Locked: file system code may only examine and modify) show
0 180 moveto (4539 //   the information in an inode and its content if it) show
0 168 moveto (4540 //   has first locked the inode. The I_BUSY flag indicates) show
0 156 moveto (4541 //   that the inode is locked. ilock\(\) sets I_BUSY,) show
0 144 moveto (4542 //   while iunlock clears it.) show
0 132 moveto (4543 //) show
0 120 moveto (4544 // Thus a typical sequence is:) show
0 108 moveto (4545 //   ip = iget\(dev, inum\)) show
0 96 moveto (4546 //   ilock\(ip\)) show
0 84 moveto (4547 //   ... examine and modify ip->xxx ...) show
0 72 moveto (4548 //   iunlock\(ip\)) show
0 60 moveto (4549 //   iput\(ip\)) show
0 24 moveto (Sheet 45) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 4) show
0 648 moveto (4550 //) show
0 636 moveto (4551 // ilock\(\) is separate from iget\(\) so that system calls can) show
0 624 moveto (4552 // get a long-term reference to an inode \(as for an open file\)) show
0 612 moveto (4553 // and only lock it for short periods \(e.g., in read\(\)\).) show
0 600 moveto (4554 // The separation also helps avoid deadlock and races during) show
0 588 moveto (4555 // pathname lookup. iget\(\) increments ip->ref so that the inode) show
0 576 moveto (4556 // stays cached and pointers to it remain valid.) show
0 564 moveto (4557 //) show
0 552 moveto (4558 // Many internal file system functions expect the caller to) show
0 540 moveto (4559 // have locked the inodes involved; this lets callers create) show
0 528 moveto (4560 // multi-step atomic operations.) show
0 516 moveto (4561 ) show
0 504 moveto (4562 struct {) show
0 492 moveto (4563   struct spinlock lock;) show
0 480 moveto (4564   struct inode inode[NINODE];) show
0 468 moveto (4565 } icache;) show
0 456 moveto (4566 ) show
0 444 moveto (4567 void) show
0 432 moveto (4568 iinit\(void\)) show
0 420 moveto (4569 {) show
0 408 moveto (4570   initlock\(&icache.lock, "icache"\);) show
0 396 moveto (4571 }) show
0 384 moveto (4572 ) show
0 372 moveto (4573 static struct inode* iget\(uint dev, uint inum\);) show
0 360 moveto (4574 ) show
0 348 moveto (4575 ) show
0 336 moveto (4576 ) show
0 324 moveto (4577 ) show
0 312 moveto (4578 ) show
0 300 moveto (4579 ) show
0 288 moveto (4580 ) show
0 276 moveto (4581 ) show
0 264 moveto (4582 ) show
0 252 moveto (4583 ) show
0 240 moveto (4584 ) show
0 228 moveto (4585 ) show
0 216 moveto (4586 ) show
0 204 moveto (4587 ) show
0 192 moveto (4588 ) show
0 180 moveto (4589 ) show
0 168 moveto (4590 ) show
0 156 moveto (4591 ) show
0 144 moveto (4592 ) show
0 132 moveto (4593 ) show
0 120 moveto (4594 ) show
0 108 moveto (4595 ) show
0 96 moveto (4596 ) show
0 84 moveto (4597 ) show
0 72 moveto (4598 ) show
0 60 moveto (4599 ) show
0 24 moveto (Sheet 45) show
grestore
restore
showpage
%%Page: 54 54
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 5) show
0 648 moveto (4600 // Allocate a new inode with the given type on device dev.) show
0 636 moveto (4601 // A free inode has a type of zero.) show
0 624 moveto (4602 struct inode*) show
0 612 moveto (4603 ialloc\(uint dev, short type\)) show
0 600 moveto (4604 {) show
0 588 moveto (4605   int inum;) show
0 576 moveto (4606   struct buf *bp;) show
0 564 moveto (4607   struct dinode *dip;) show
0 552 moveto (4608   struct superblock sb;) show
0 540 moveto (4609 ) show
0 528 moveto (4610   readsb\(dev, &sb\);) show
0 516 moveto (4611 ) show
0 504 moveto (4612   for\(inum = 1; inum < sb.ninodes; inum++\){) show
0 492 moveto (4613     bp = bread\(dev, IBLOCK\(inum\)\);) show
0 480 moveto (4614     dip = \(struct dinode*\)bp->data + inum%IPB;) show
0 468 moveto (4615     if\(dip->type == 0\){  // a free inode) show
0 456 moveto (4616       memset\(dip, 0, sizeof\(*dip\)\);) show
0 444 moveto (4617       dip->type = type;) show
0 432 moveto (4618       log_write\(bp\);   // mark it allocated on the disk) show
0 420 moveto (4619       brelse\(bp\);) show
0 408 moveto (4620       return iget\(dev, inum\);) show
0 396 moveto (4621     }) show
0 384 moveto (4622     brelse\(bp\);) show
0 372 moveto (4623   }) show
0 360 moveto (4624   panic\("ialloc: no inodes"\);) show
0 348 moveto (4625 }) show
0 336 moveto (4626 ) show
0 324 moveto (4627 // Copy a modified in-memory inode to disk.) show
0 312 moveto (4628 void) show
0 300 moveto (4629 iupdate\(struct inode *ip\)) show
0 288 moveto (4630 {) show
0 276 moveto (4631   struct buf *bp;) show
0 264 moveto (4632   struct dinode *dip;) show
0 252 moveto (4633 ) show
0 240 moveto (4634   bp = bread\(ip->dev, IBLOCK\(ip->inum\)\);) show
0 228 moveto (4635   dip = \(struct dinode*\)bp->data + ip->inum%IPB;) show
0 216 moveto (4636   dip->type = ip->type;) show
0 204 moveto (4637   dip->major = ip->major;) show
0 192 moveto (4638   dip->minor = ip->minor;) show
0 180 moveto (4639   dip->nlink = ip->nlink;) show
0 168 moveto (4640   dip->size = ip->size;) show
0 156 moveto (4641   memmove\(dip->addrs, ip->addrs, sizeof\(ip->addrs\)\);) show
0 144 moveto (4642   log_write\(bp\);) show
0 132 moveto (4643   brelse\(bp\);) show
0 120 moveto (4644 }) show
0 108 moveto (4645 ) show
0 96 moveto (4646 ) show
0 84 moveto (4647 ) show
0 72 moveto (4648 ) show
0 60 moveto (4649 ) show
0 24 moveto (Sheet 46) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 6) show
0 648 moveto (4650 // Find the inode with number inum on device dev) show
0 636 moveto (4651 // and return the in-memory copy. Does not lock) show
0 624 moveto (4652 // the inode and does not read it from disk.) show
0 612 moveto (4653 static struct inode*) show
0 600 moveto (4654 iget\(uint dev, uint inum\)) show
0 588 moveto (4655 {) show
0 576 moveto (4656   struct inode *ip, *empty;) show
0 564 moveto (4657 ) show
0 552 moveto (4658   acquire\(&icache.lock\);) show
0 540 moveto (4659 ) show
0 528 moveto (4660   // Is the inode already cached?) show
0 516 moveto (4661   empty = 0;) show
0 504 moveto (4662   for\(ip = &icache.inode[0]; ip < &icache.inode[NINODE]; ip++\){) show
0 492 moveto (4663     if\(ip->ref > 0 && ip->dev == dev && ip->inum == inum\){) show
0 480 moveto (4664       ip->ref++;) show
0 468 moveto (4665       release\(&icache.lock\);) show
0 456 moveto (4666       return ip;) show
0 444 moveto (4667     }) show
0 432 moveto (4668     if\(empty == 0 && ip->ref == 0\)    // Remember empty slot.) show
0 420 moveto (4669       empty = ip;) show
0 408 moveto (4670   }) show
0 396 moveto (4671 ) show
0 384 moveto (4672   // Recycle an inode cache entry.) show
0 372 moveto (4673   if\(empty == 0\)) show
0 360 moveto (4674     panic\("iget: no inodes"\);) show
0 348 moveto (4675 ) show
0 336 moveto (4676   ip = empty;) show
0 324 moveto (4677   ip->dev = dev;) show
0 312 moveto (4678   ip->inum = inum;) show
0 300 moveto (4679   ip->ref = 1;) show
0 288 moveto (4680   ip->flags = 0;) show
0 276 moveto (4681   release\(&icache.lock\);) show
0 264 moveto (4682 ) show
0 252 moveto (4683   return ip;) show
0 240 moveto (4684 }) show
0 228 moveto (4685 ) show
0 216 moveto (4686 // Increment reference count for ip.) show
0 204 moveto (4687 // Returns ip to enable ip = idup\(ip1\) idiom.) show
0 192 moveto (4688 struct inode*) show
0 180 moveto (4689 idup\(struct inode *ip\)) show
0 168 moveto (4690 {) show
0 156 moveto (4691   acquire\(&icache.lock\);) show
0 144 moveto (4692   ip->ref++;) show
0 132 moveto (4693   release\(&icache.lock\);) show
0 120 moveto (4694   return ip;) show
0 108 moveto (4695 }) show
0 96 moveto (4696 ) show
0 84 moveto (4697 ) show
0 72 moveto (4698 ) show
0 60 moveto (4699 ) show
0 24 moveto (Sheet 46) show
grestore
restore
showpage
%%Page: 55 55
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 7) show
0 648 moveto (4700 // Lock the given inode.) show
0 636 moveto (4701 // Reads the inode from disk if necessary.) show
0 624 moveto (4702 void) show
0 612 moveto (4703 ilock\(struct inode *ip\)) show
0 600 moveto (4704 {) show
0 588 moveto (4705   struct buf *bp;) show
0 576 moveto (4706   struct dinode *dip;) show
0 564 moveto (4707 ) show
0 552 moveto (4708   if\(ip == 0 || ip->ref < 1\)) show
0 540 moveto (4709     panic\("ilock"\);) show
0 528 moveto (4710 ) show
0 516 moveto (4711   acquire\(&icache.lock\);) show
0 504 moveto (4712   while\(ip->flags & I_BUSY\)) show
0 492 moveto (4713     sleep\(ip, &icache.lock\);) show
0 480 moveto (4714   ip->flags |= I_BUSY;) show
0 468 moveto (4715   release\(&icache.lock\);) show
0 456 moveto (4716 ) show
0 444 moveto (4717   if\(!\(ip->flags & I_VALID\)\){) show
0 432 moveto (4718     bp = bread\(ip->dev, IBLOCK\(ip->inum\)\);) show
0 420 moveto (4719     dip = \(struct dinode*\)bp->data + ip->inum%IPB;) show
0 408 moveto (4720     ip->type = dip->type;) show
0 396 moveto (4721     ip->major = dip->major;) show
0 384 moveto (4722     ip->minor = dip->minor;) show
0 372 moveto (4723     ip->nlink = dip->nlink;) show
0 360 moveto (4724     ip->size = dip->size;) show
0 348 moveto (4725     memmove\(ip->addrs, dip->addrs, sizeof\(ip->addrs\)\);) show
0 336 moveto (4726     brelse\(bp\);) show
0 324 moveto (4727     ip->flags |= I_VALID;) show
0 312 moveto (4728     if\(ip->type == 0\)) show
0 300 moveto (4729       panic\("ilock: no type"\);) show
0 288 moveto (4730   }) show
0 276 moveto (4731 }) show
0 264 moveto (4732 ) show
0 252 moveto (4733 // Unlock the given inode.) show
0 240 moveto (4734 void) show
0 228 moveto (4735 iunlock\(struct inode *ip\)) show
0 216 moveto (4736 {) show
0 204 moveto (4737   if\(ip == 0 || !\(ip->flags & I_BUSY\) || ip->ref < 1\)) show
0 192 moveto (4738     panic\("iunlock"\);) show
0 180 moveto (4739 ) show
0 168 moveto (4740   acquire\(&icache.lock\);) show
0 156 moveto (4741   ip->flags &= ~I_BUSY;) show
0 144 moveto (4742   wakeup\(ip\);) show
0 132 moveto (4743   release\(&icache.lock\);) show
0 120 moveto (4744 }) show
0 108 moveto (4745 ) show
0 96 moveto (4746 ) show
0 84 moveto (4747 ) show
0 72 moveto (4748 ) show
0 60 moveto (4749 ) show
0 24 moveto (Sheet 47) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 8) show
0 648 moveto (4750 // Drop a reference to an in-memory inode.) show
0 636 moveto (4751 // If that was the last reference, the inode cache entry can) show
0 624 moveto (4752 // be recycled.) show
0 612 moveto (4753 // If that was the last reference and the inode has no links) show
0 600 moveto (4754 // to it, free the inode \(and its content\) on disk.) show
0 588 moveto (4755 void) show
0 576 moveto (4756 iput\(struct inode *ip\)) show
0 564 moveto (4757 {) show
0 552 moveto (4758   acquire\(&icache.lock\);) show
0 540 moveto (4759   if\(ip->ref == 1 && \(ip->flags & I_VALID\) && ip->nlink == 0\){) show
0 528 moveto (4760     // inode has no links: truncate and free inode.) show
0 516 moveto (4761     if\(ip->flags & I_BUSY\)) show
0 504 moveto (4762       panic\("iput busy"\);) show
0 492 moveto (4763     ip->flags |= I_BUSY;) show
0 480 moveto (4764     release\(&icache.lock\);) show
0 468 moveto (4765     itrunc\(ip\);) show
0 456 moveto (4766     ip->type = 0;) show
0 444 moveto (4767     iupdate\(ip\);) show
0 432 moveto (4768     acquire\(&icache.lock\);) show
0 420 moveto (4769     ip->flags = 0;) show
0 408 moveto (4770     wakeup\(ip\);) show
0 396 moveto (4771   }) show
0 384 moveto (4772   ip->ref--;) show
0 372 moveto (4773   release\(&icache.lock\);) show
0 360 moveto (4774 }) show
0 348 moveto (4775 ) show
0 336 moveto (4776 // Common idiom: unlock, then put.) show
0 324 moveto (4777 void) show
0 312 moveto (4778 iunlockput\(struct inode *ip\)) show
0 300 moveto (4779 {) show
0 288 moveto (4780   iunlock\(ip\);) show
0 276 moveto (4781   iput\(ip\);) show
0 264 moveto (4782 }) show
0 252 moveto (4783 ) show
0 240 moveto (4784 ) show
0 228 moveto (4785 ) show
0 216 moveto (4786 ) show
0 204 moveto (4787 ) show
0 192 moveto (4788 ) show
0 180 moveto (4789 ) show
0 168 moveto (4790 ) show
0 156 moveto (4791 ) show
0 144 moveto (4792 ) show
0 132 moveto (4793 ) show
0 120 moveto (4794 ) show
0 108 moveto (4795 ) show
0 96 moveto (4796 ) show
0 84 moveto (4797 ) show
0 72 moveto (4798 ) show
0 60 moveto (4799 ) show
0 24 moveto (Sheet 47) show
grestore
restore
showpage
%%Page: 56 56
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 9) show
0 648 moveto (4800 // Inode content) show
0 636 moveto (4801 //) show
0 624 moveto (4802 // The content \(data\) associated with each inode is stored) show
0 612 moveto (4803 // in blocks on the disk. The first NDIRECT block numbers) show
0 600 moveto (4804 // are listed in ip->addrs[].  The next NINDIRECT blocks are) show
0 588 moveto (4805 // listed in block ip->addrs[NDIRECT].) show
0 576 moveto (4806 ) show
0 564 moveto (4807 // Return the disk block address of the nth block in inode ip.) show
0 552 moveto (4808 // If there is no such block, bmap allocates one.) show
0 540 moveto (4809 static uint) show
0 528 moveto (4810 bmap\(struct inode *ip, uint bn\)) show
0 516 moveto (4811 {) show
0 504 moveto (4812   uint addr, *a;) show
0 492 moveto (4813   struct buf *bp;) show
0 480 moveto (4814 ) show
0 468 moveto (4815   if\(bn < NDIRECT\){) show
0 456 moveto (4816     if\(\(addr = ip->addrs[bn]\) == 0\)) show
0 444 moveto (4817       ip->addrs[bn] = addr = balloc\(ip->dev\);) show
0 432 moveto (4818     return addr;) show
0 420 moveto (4819   }) show
0 408 moveto (4820   bn -= NDIRECT;) show
0 396 moveto (4821 ) show
0 384 moveto (4822   if\(bn < NINDIRECT\){) show
0 372 moveto (4823     // Load indirect block, allocating if necessary.) show
0 360 moveto (4824     if\(\(addr = ip->addrs[NDIRECT]\) == 0\)) show
0 348 moveto (4825       ip->addrs[NDIRECT] = addr = balloc\(ip->dev\);) show
0 336 moveto (4826     bp = bread\(ip->dev, addr\);) show
0 324 moveto (4827     a = \(uint*\)bp->data;) show
0 312 moveto (4828     if\(\(addr = a[bn]\) == 0\){) show
0 300 moveto (4829       a[bn] = addr = balloc\(ip->dev\);) show
0 288 moveto (4830       log_write\(bp\);) show
0 276 moveto (4831     }) show
0 264 moveto (4832     brelse\(bp\);) show
0 252 moveto (4833     return addr;) show
0 240 moveto (4834   }) show
0 228 moveto (4835 ) show
0 216 moveto (4836   panic\("bmap: out of range"\);) show
0 204 moveto (4837 }) show
0 192 moveto (4838 ) show
0 180 moveto (4839 ) show
0 168 moveto (4840 ) show
0 156 moveto (4841 ) show
0 144 moveto (4842 ) show
0 132 moveto (4843 ) show
0 120 moveto (4844 ) show
0 108 moveto (4845 ) show
0 96 moveto (4846 ) show
0 84 moveto (4847 ) show
0 72 moveto (4848 ) show
0 60 moveto (4849 ) show
0 24 moveto (Sheet 48) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 10) show
0 648 moveto (4850 // Truncate inode \(discard contents\).) show
0 636 moveto (4851 // Only called when the inode has no links) show
0 624 moveto (4852 // to it \(no directory entries referring to it\)) show
0 612 moveto (4853 // and has no in-memory reference to it \(is) show
0 600 moveto (4854 // not an open file or current directory\).) show
0 588 moveto (4855 static void) show
0 576 moveto (4856 itrunc\(struct inode *ip\)) show
0 564 moveto (4857 {) show
0 552 moveto (4858   int i, j;) show
0 540 moveto (4859   struct buf *bp;) show
0 528 moveto (4860   uint *a;) show
0 516 moveto (4861 ) show
0 504 moveto (4862   for\(i = 0; i < NDIRECT; i++\){) show
0 492 moveto (4863     if\(ip->addrs[i]\){) show
0 480 moveto (4864       bfree\(ip->dev, ip->addrs[i]\);) show
0 468 moveto (4865       ip->addrs[i] = 0;) show
0 456 moveto (4866     }) show
0 444 moveto (4867   }) show
0 432 moveto (4868 ) show
0 420 moveto (4869   if\(ip->addrs[NDIRECT]\){) show
0 408 moveto (4870     bp = bread\(ip->dev, ip->addrs[NDIRECT]\);) show
0 396 moveto (4871     a = \(uint*\)bp->data;) show
0 384 moveto (4872     for\(j = 0; j < NINDIRECT; j++\){) show
0 372 moveto (4873       if\(a[j]\)) show
0 360 moveto (4874         bfree\(ip->dev, a[j]\);) show
0 348 moveto (4875     }) show
0 336 moveto (4876     brelse\(bp\);) show
0 324 moveto (4877     bfree\(ip->dev, ip->addrs[NDIRECT]\);) show
0 312 moveto (4878     ip->addrs[NDIRECT] = 0;) show
0 300 moveto (4879   }) show
0 288 moveto (4880 ) show
0 276 moveto (4881   ip->size = 0;) show
0 264 moveto (4882   iupdate\(ip\);) show
0 252 moveto (4883 }) show
0 240 moveto (4884 ) show
0 228 moveto (4885 // Copy stat information from inode.) show
0 216 moveto (4886 void) show
0 204 moveto (4887 stati\(struct inode *ip, struct stat *st\)) show
0 192 moveto (4888 {) show
0 180 moveto (4889   st->dev = ip->dev;) show
0 168 moveto (4890   st->ino = ip->inum;) show
0 156 moveto (4891   st->type = ip->type;) show
0 144 moveto (4892   st->nlink = ip->nlink;) show
0 132 moveto (4893   st->size = ip->size;) show
0 120 moveto (4894 }) show
0 108 moveto (4895 ) show
0 96 moveto (4896 ) show
0 84 moveto (4897 ) show
0 72 moveto (4898 ) show
0 60 moveto (4899 ) show
0 24 moveto (Sheet 48) show
grestore
restore
showpage
%%Page: 57 57
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 11) show
0 648 moveto (4900 // Read data from inode.) show
0 636 moveto (4901 int) show
0 624 moveto (4902 readi\(struct inode *ip, char *dst, uint off, uint n\)) show
0 612 moveto (4903 {) show
0 600 moveto (4904   uint tot, m;) show
0 588 moveto (4905   struct buf *bp;) show
0 576 moveto (4906 ) show
0 564 moveto (4907   if\(ip->type == T_DEV\){) show
0 552 moveto (4908     if\(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].read\)) show
0 540 moveto (4909       return -1;) show
0 528 moveto (4910     return devsw[ip->major].read\(ip, dst, n\);) show
0 516 moveto (4911   }) show
0 504 moveto (4912 ) show
0 492 moveto (4913   if\(off > ip->size || off + n < off\)) show
0 480 moveto (4914     return -1;) show
0 468 moveto (4915   if\(off + n > ip->size\)) show
0 456 moveto (4916     n = ip->size - off;) show
0 444 moveto (4917 ) show
0 432 moveto (4918   for\(tot=0; tot<n; tot+=m, off+=m, dst+=m\){) show
0 420 moveto (4919     bp = bread\(ip->dev, bmap\(ip, off/BSIZE\)\);) show
0 408 moveto (4920     m = min\(n - tot, BSIZE - off%BSIZE\);) show
0 396 moveto (4921     memmove\(dst, bp->data + off%BSIZE, m\);) show
0 384 moveto (4922     brelse\(bp\);) show
0 372 moveto (4923   }) show
0 360 moveto (4924   return n;) show
0 348 moveto (4925 }) show
0 336 moveto (4926 ) show
0 324 moveto (4927 ) show
0 312 moveto (4928 ) show
0 300 moveto (4929 ) show
0 288 moveto (4930 ) show
0 276 moveto (4931 ) show
0 264 moveto (4932 ) show
0 252 moveto (4933 ) show
0 240 moveto (4934 ) show
0 228 moveto (4935 ) show
0 216 moveto (4936 ) show
0 204 moveto (4937 ) show
0 192 moveto (4938 ) show
0 180 moveto (4939 ) show
0 168 moveto (4940 ) show
0 156 moveto (4941 ) show
0 144 moveto (4942 ) show
0 132 moveto (4943 ) show
0 120 moveto (4944 ) show
0 108 moveto (4945 ) show
0 96 moveto (4946 ) show
0 84 moveto (4947 ) show
0 72 moveto (4948 ) show
0 60 moveto (4949 ) show
0 24 moveto (Sheet 49) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 12) show
0 648 moveto (4950 // Write data to inode.) show
0 636 moveto (4951 int) show
0 624 moveto (4952 writei\(struct inode *ip, char *src, uint off, uint n\)) show
0 612 moveto (4953 {) show
0 600 moveto (4954   uint tot, m;) show
0 588 moveto (4955   struct buf *bp;) show
0 576 moveto (4956 ) show
0 564 moveto (4957   if\(ip->type == T_DEV\){) show
0 552 moveto (4958     if\(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].write\)) show
0 540 moveto (4959       return -1;) show
0 528 moveto (4960     return devsw[ip->major].write\(ip, src, n\);) show
0 516 moveto (4961   }) show
0 504 moveto (4962 ) show
0 492 moveto (4963   if\(off > ip->size || off + n < off\)) show
0 480 moveto (4964     return -1;) show
0 468 moveto (4965   if\(off + n > MAXFILE*BSIZE\)) show
0 456 moveto (4966     return -1;) show
0 444 moveto (4967 ) show
0 432 moveto (4968   for\(tot=0; tot<n; tot+=m, off+=m, src+=m\){) show
0 420 moveto (4969     bp = bread\(ip->dev, bmap\(ip, off/BSIZE\)\);) show
0 408 moveto (4970     m = min\(n - tot, BSIZE - off%BSIZE\);) show
0 396 moveto (4971     memmove\(bp->data + off%BSIZE, src, m\);) show
0 384 moveto (4972     log_write\(bp\);) show
0 372 moveto (4973     brelse\(bp\);) show
0 360 moveto (4974   }) show
0 348 moveto (4975 ) show
0 336 moveto (4976   if\(n > 0 && off > ip->size\){) show
0 324 moveto (4977     ip->size = off;) show
0 312 moveto (4978     iupdate\(ip\);) show
0 300 moveto (4979   }) show
0 288 moveto (4980   return n;) show
0 276 moveto (4981 }) show
0 264 moveto (4982 ) show
0 252 moveto (4983 ) show
0 240 moveto (4984 ) show
0 228 moveto (4985 ) show
0 216 moveto (4986 ) show
0 204 moveto (4987 ) show
0 192 moveto (4988 ) show
0 180 moveto (4989 ) show
0 168 moveto (4990 ) show
0 156 moveto (4991 ) show
0 144 moveto (4992 ) show
0 132 moveto (4993 ) show
0 120 moveto (4994 ) show
0 108 moveto (4995 ) show
0 96 moveto (4996 ) show
0 84 moveto (4997 ) show
0 72 moveto (4998 ) show
0 60 moveto (4999 ) show
0 24 moveto (Sheet 49) show
grestore
restore
showpage
%%Page: 58 58
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 13) show
0 648 moveto (5000 // Directories) show
0 636 moveto (5001 ) show
0 624 moveto (5002 int) show
0 612 moveto (5003 namecmp\(const char *s, const char *t\)) show
0 600 moveto (5004 {) show
0 588 moveto (5005   return strncmp\(s, t, DIRSIZ\);) show
0 576 moveto (5006 }) show
0 564 moveto (5007 ) show
0 552 moveto (5008 // Look for a directory entry in a directory.) show
0 540 moveto (5009 // If found, set *poff to byte offset of entry.) show
0 528 moveto (5010 struct inode*) show
0 516 moveto (5011 dirlookup\(struct inode *dp, char *name, uint *poff\)) show
0 504 moveto (5012 {) show
0 492 moveto (5013   uint off, inum;) show
0 480 moveto (5014   struct dirent de;) show
0 468 moveto (5015 ) show
0 456 moveto (5016   if\(dp->type != T_DIR\)) show
0 444 moveto (5017     panic\("dirlookup not DIR"\);) show
0 432 moveto (5018 ) show
0 420 moveto (5019   for\(off = 0; off < dp->size; off += sizeof\(de\)\){) show
0 408 moveto (5020     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 396 moveto (5021       panic\("dirlink read"\);) show
0 384 moveto (5022     if\(de.inum == 0\)) show
0 372 moveto (5023       continue;) show
0 360 moveto (5024     if\(namecmp\(name, de.name\) == 0\){) show
0 348 moveto (5025       // entry matches path element) show
0 336 moveto (5026       if\(poff\)) show
0 324 moveto (5027         *poff = off;) show
0 312 moveto (5028       inum = de.inum;) show
0 300 moveto (5029       return iget\(dp->dev, inum\);) show
0 288 moveto (5030     }) show
0 276 moveto (5031   }) show
0 264 moveto (5032 ) show
0 252 moveto (5033   return 0;) show
0 240 moveto (5034 }) show
0 228 moveto (5035 ) show
0 216 moveto (5036 ) show
0 204 moveto (5037 ) show
0 192 moveto (5038 ) show
0 180 moveto (5039 ) show
0 168 moveto (5040 ) show
0 156 moveto (5041 ) show
0 144 moveto (5042 ) show
0 132 moveto (5043 ) show
0 120 moveto (5044 ) show
0 108 moveto (5045 ) show
0 96 moveto (5046 ) show
0 84 moveto (5047 ) show
0 72 moveto (5048 ) show
0 60 moveto (5049 ) show
0 24 moveto (Sheet 50) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 14) show
0 648 moveto (5050 // Write a new directory entry \(name, inum\) into the directory dp.) show
0 636 moveto (5051 int) show
0 624 moveto (5052 dirlink\(struct inode *dp, char *name, uint inum\)) show
0 612 moveto (5053 {) show
0 600 moveto (5054   int off;) show
0 588 moveto (5055   struct dirent de;) show
0 576 moveto (5056   struct inode *ip;) show
0 564 moveto (5057 ) show
0 552 moveto (5058   // Check that name is not present.) show
0 540 moveto (5059   if\(\(ip = dirlookup\(dp, name, 0\)\) != 0\){) show
0 528 moveto (5060     iput\(ip\);) show
0 516 moveto (5061     return -1;) show
0 504 moveto (5062   }) show
0 492 moveto (5063 ) show
0 480 moveto (5064   // Look for an empty dirent.) show
0 468 moveto (5065   for\(off = 0; off < dp->size; off += sizeof\(de\)\){) show
0 456 moveto (5066     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 444 moveto (5067       panic\("dirlink read"\);) show
0 432 moveto (5068     if\(de.inum == 0\)) show
0 420 moveto (5069       break;) show
0 408 moveto (5070   }) show
0 396 moveto (5071 ) show
0 384 moveto (5072   strncpy\(de.name, name, DIRSIZ\);) show
0 372 moveto (5073   de.inum = inum;) show
0 360 moveto (5074   if\(writei\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 348 moveto (5075     panic\("dirlink"\);) show
0 336 moveto (5076 ) show
0 324 moveto (5077   return 0;) show
0 312 moveto (5078 }) show
0 300 moveto (5079 ) show
0 288 moveto (5080 ) show
0 276 moveto (5081 ) show
0 264 moveto (5082 ) show
0 252 moveto (5083 ) show
0 240 moveto (5084 ) show
0 228 moveto (5085 ) show
0 216 moveto (5086 ) show
0 204 moveto (5087 ) show
0 192 moveto (5088 ) show
0 180 moveto (5089 ) show
0 168 moveto (5090 ) show
0 156 moveto (5091 ) show
0 144 moveto (5092 ) show
0 132 moveto (5093 ) show
0 120 moveto (5094 ) show
0 108 moveto (5095 ) show
0 96 moveto (5096 ) show
0 84 moveto (5097 ) show
0 72 moveto (5098 ) show
0 60 moveto (5099 ) show
0 24 moveto (Sheet 50) show
grestore
restore
showpage
%%Page: 59 59
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 15) show
0 648 moveto (5100 // Paths) show
0 636 moveto (5101 ) show
0 624 moveto (5102 // Copy the next path element from path into name.) show
0 612 moveto (5103 // Return a pointer to the element following the copied one.) show
0 600 moveto (5104 // The returned path has no leading slashes,) show
0 588 moveto (5105 // so the caller can check *path=='\\0' to see if the name is the last one.) show
0 576 moveto (5106 // If no name to remove, return 0.) show
0 564 moveto (5107 //) show
0 552 moveto (5108 // Examples:) show
0 540 moveto (5109 //   skipelem\("a/bb/c", name\) = "bb/c", setting name = "a") show
0 528 moveto (5110 //   skipelem\("///a//bb", name\) = "bb", setting name = "a") show
0 516 moveto (5111 //   skipelem\("a", name\) = "", setting name = "a") show
0 504 moveto (5112 //   skipelem\("", name\) = skipelem\("////", name\) = 0) show
0 492 moveto (5113 //) show
0 480 moveto (5114 static char*) show
0 468 moveto (5115 skipelem\(char *path, char *name\)) show
0 456 moveto (5116 {) show
0 444 moveto (5117   char *s;) show
0 432 moveto (5118   int len;) show
0 420 moveto (5119 ) show
0 408 moveto (5120   while\(*path == '/'\)) show
0 396 moveto (5121     path++;) show
0 384 moveto (5122   if\(*path == 0\)) show
0 372 moveto (5123     return 0;) show
0 360 moveto (5124   s = path;) show
0 348 moveto (5125   while\(*path != '/' && *path != 0\)) show
0 336 moveto (5126     path++;) show
0 324 moveto (5127   len = path - s;) show
0 312 moveto (5128   if\(len >= DIRSIZ\)) show
0 300 moveto (5129     memmove\(name, s, DIRSIZ\);) show
0 288 moveto (5130   else {) show
0 276 moveto (5131     memmove\(name, s, len\);) show
0 264 moveto (5132     name[len] = 0;) show
0 252 moveto (5133   }) show
0 240 moveto (5134   while\(*path == '/'\)) show
0 228 moveto (5135     path++;) show
0 216 moveto (5136   return path;) show
0 204 moveto (5137 }) show
0 192 moveto (5138 ) show
0 180 moveto (5139 ) show
0 168 moveto (5140 ) show
0 156 moveto (5141 ) show
0 144 moveto (5142 ) show
0 132 moveto (5143 ) show
0 120 moveto (5144 ) show
0 108 moveto (5145 ) show
0 96 moveto (5146 ) show
0 84 moveto (5147 ) show
0 72 moveto (5148 ) show
0 60 moveto (5149 ) show
0 24 moveto (Sheet 51) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/fs.c  Page 16) show
0 648 moveto (5150 // Look up and return the inode for a path name.) show
0 636 moveto (5151 // If parent != 0, return the inode for the parent and copy the final) show
0 624 moveto (5152 // path element into name, which must have room for DIRSIZ bytes.) show
0 612 moveto (5153 static struct inode*) show
0 600 moveto (5154 namex\(char *path, int nameiparent, char *name\)) show
0 588 moveto (5155 {) show
0 576 moveto (5156   struct inode *ip, *next;) show
0 564 moveto (5157 ) show
0 552 moveto (5158   if\(*path == '/'\)) show
0 540 moveto (5159     ip = iget\(ROOTDEV, ROOTINO\);) show
0 528 moveto (5160   else) show
0 516 moveto (5161     ip = idup\(proc->cwd\);) show
0 504 moveto (5162 ) show
0 492 moveto (5163   while\(\(path = skipelem\(path, name\)\) != 0\){) show
0 480 moveto (5164     ilock\(ip\);) show
0 468 moveto (5165     if\(ip->type != T_DIR\){) show
0 456 moveto (5166       iunlockput\(ip\);) show
0 444 moveto (5167       return 0;) show
0 432 moveto (5168     }) show
0 420 moveto (5169     if\(nameiparent && *path == '\\0'\){) show
0 408 moveto (5170       // Stop one level early.) show
0 396 moveto (5171       iunlock\(ip\);) show
0 384 moveto (5172       return ip;) show
0 372 moveto (5173     }) show
0 360 moveto (5174     if\(\(next = dirlookup\(ip, name, 0\)\) == 0\){) show
0 348 moveto (5175       iunlockput\(ip\);) show
0 336 moveto (5176       return 0;) show
0 324 moveto (5177     }) show
0 312 moveto (5178     iunlockput\(ip\);) show
0 300 moveto (5179     ip = next;) show
0 288 moveto (5180   }) show
0 276 moveto (5181   if\(nameiparent\){) show
0 264 moveto (5182     iput\(ip\);) show
0 252 moveto (5183     return 0;) show
0 240 moveto (5184   }) show
0 228 moveto (5185   return ip;) show
0 216 moveto (5186 }) show
0 204 moveto (5187 ) show
0 192 moveto (5188 struct inode*) show
0 180 moveto (5189 namei\(char *path\)) show
0 168 moveto (5190 {) show
0 156 moveto (5191   char name[DIRSIZ];) show
0 144 moveto (5192   return namex\(path, 0, name\);) show
0 132 moveto (5193 }) show
0 120 moveto (5194 ) show
0 108 moveto (5195 struct inode*) show
0 96 moveto (5196 nameiparent\(char *path, char *name\)) show
0 84 moveto (5197 {) show
0 72 moveto (5198   return namex\(path, 1, name\);) show
0 60 moveto (5199 }) show
0 24 moveto (Sheet 51) show
grestore
restore
showpage
%%Page: 60 60
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/file.c  Page 1) show
0 648 moveto (5200 //) show
0 636 moveto (5201 // File descriptors) show
0 624 moveto (5202 //) show
0 612 moveto (5203 ) show
0 600 moveto (5204 #include "types.h") show
0 588 moveto (5205 #include "defs.h") show
0 576 moveto (5206 #include "param.h") show
0 564 moveto (5207 #include "fs.h") show
0 552 moveto (5208 #include "file.h") show
0 540 moveto (5209 #include "spinlock.h") show
0 528 moveto (5210 ) show
0 516 moveto (5211 struct devsw devsw[NDEV];) show
0 504 moveto (5212 struct {) show
0 492 moveto (5213   struct spinlock lock;) show
0 480 moveto (5214   struct file file[NFILE];) show
0 468 moveto (5215 } ftable;) show
0 456 moveto (5216 ) show
0 444 moveto (5217 void) show
0 432 moveto (5218 fileinit\(void\)) show
0 420 moveto (5219 {) show
0 408 moveto (5220   initlock\(&ftable.lock, "ftable"\);) show
0 396 moveto (5221 }) show
0 384 moveto (5222 ) show
0 372 moveto (5223 // Allocate a file structure.) show
0 360 moveto (5224 struct file*) show
0 348 moveto (5225 filealloc\(void\)) show
0 336 moveto (5226 {) show
0 324 moveto (5227   struct file *f;) show
0 312 moveto (5228 ) show
0 300 moveto (5229   acquire\(&ftable.lock\);) show
0 288 moveto (5230   for\(f = ftable.file; f < ftable.file + NFILE; f++\){) show
0 276 moveto (5231     if\(f->ref == 0\){) show
0 264 moveto (5232       f->ref = 1;) show
0 252 moveto (5233       release\(&ftable.lock\);) show
0 240 moveto (5234       return f;) show
0 228 moveto (5235     }) show
0 216 moveto (5236   }) show
0 204 moveto (5237   release\(&ftable.lock\);) show
0 192 moveto (5238   return 0;) show
0 180 moveto (5239 }) show
0 168 moveto (5240 ) show
0 156 moveto (5241 ) show
0 144 moveto (5242 ) show
0 132 moveto (5243 ) show
0 120 moveto (5244 ) show
0 108 moveto (5245 ) show
0 96 moveto (5246 ) show
0 84 moveto (5247 ) show
0 72 moveto (5248 ) show
0 60 moveto (5249 ) show
0 24 moveto (Sheet 52) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/file.c  Page 2) show
0 648 moveto (5250 // Increment ref count for file f.) show
0 636 moveto (5251 struct file*) show
0 624 moveto (5252 filedup\(struct file *f\)) show
0 612 moveto (5253 {) show
0 600 moveto (5254   acquire\(&ftable.lock\);) show
0 588 moveto (5255   if\(f->ref < 1\)) show
0 576 moveto (5256     panic\("filedup"\);) show
0 564 moveto (5257   f->ref++;) show
0 552 moveto (5258   release\(&ftable.lock\);) show
0 540 moveto (5259   return f;) show
0 528 moveto (5260 }) show
0 516 moveto (5261 ) show
0 504 moveto (5262 // Close file f.  \(Decrement ref count, close when reaches 0.\)) show
0 492 moveto (5263 void) show
0 480 moveto (5264 fileclose\(struct file *f\)) show
0 468 moveto (5265 {) show
0 456 moveto (5266   struct file ff;) show
0 444 moveto (5267 ) show
0 432 moveto (5268   acquire\(&ftable.lock\);) show
0 420 moveto (5269   if\(f->ref < 1\)) show
0 408 moveto (5270     panic\("fileclose"\);) show
0 396 moveto (5271   if\(--f->ref > 0\){) show
0 384 moveto (5272     release\(&ftable.lock\);) show
0 372 moveto (5273     return;) show
0 360 moveto (5274   }) show
0 348 moveto (5275   ff = *f;) show
0 336 moveto (5276   f->ref = 0;) show
0 324 moveto (5277   f->type = FD_NONE;) show
0 312 moveto (5278   release\(&ftable.lock\);) show
0 300 moveto (5279 ) show
0 288 moveto (5280   if\(ff.type == FD_PIPE\)) show
0 276 moveto (5281     pipeclose\(ff.pipe, ff.writable\);) show
0 264 moveto (5282   else if\(ff.type == FD_INODE\){) show
0 252 moveto (5283     begin_trans\(\);) show
0 240 moveto (5284     iput\(ff.ip\);) show
0 228 moveto (5285     commit_trans\(\);) show
0 216 moveto (5286   }) show
0 204 moveto (5287 }) show
0 192 moveto (5288 ) show
0 180 moveto (5289 ) show
0 168 moveto (5290 ) show
0 156 moveto (5291 ) show
0 144 moveto (5292 ) show
0 132 moveto (5293 ) show
0 120 moveto (5294 ) show
0 108 moveto (5295 ) show
0 96 moveto (5296 ) show
0 84 moveto (5297 ) show
0 72 moveto (5298 ) show
0 60 moveto (5299 ) show
0 24 moveto (Sheet 52) show
grestore
restore
showpage
%%Page: 61 61
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/file.c  Page 3) show
0 648 moveto (5300 // Get metadata about file f.) show
0 636 moveto (5301 int) show
0 624 moveto (5302 filestat\(struct file *f, struct stat *st\)) show
0 612 moveto (5303 {) show
0 600 moveto (5304   if\(f->type == FD_INODE\){) show
0 588 moveto (5305     ilock\(f->ip\);) show
0 576 moveto (5306     stati\(f->ip, st\);) show
0 564 moveto (5307     iunlock\(f->ip\);) show
0 552 moveto (5308     return 0;) show
0 540 moveto (5309   }) show
0 528 moveto (5310   return -1;) show
0 516 moveto (5311 }) show
0 504 moveto (5312 ) show
0 492 moveto (5313 // Read from file f.) show
0 480 moveto (5314 int) show
0 468 moveto (5315 fileread\(struct file *f, char *addr, int n\)) show
0 456 moveto (5316 {) show
0 444 moveto (5317   int r;) show
0 432 moveto (5318 ) show
0 420 moveto (5319   if\(f->readable == 0\)) show
0 408 moveto (5320     return -1;) show
0 396 moveto (5321   if\(f->type == FD_PIPE\)) show
0 384 moveto (5322     return piperead\(f->pipe, addr, n\);) show
0 372 moveto (5323   if\(f->type == FD_INODE\){) show
0 360 moveto (5324     ilock\(f->ip\);) show
0 348 moveto (5325     if\(\(r = readi\(f->ip, addr, f->off, n\)\) > 0\)) show
0 336 moveto (5326       f->off += r;) show
0 324 moveto (5327     iunlock\(f->ip\);) show
0 312 moveto (5328     return r;) show
0 300 moveto (5329   }) show
0 288 moveto (5330   panic\("fileread"\);) show
0 276 moveto (5331 }) show
0 264 moveto (5332 ) show
0 252 moveto (5333 ) show
0 240 moveto (5334 ) show
0 228 moveto (5335 ) show
0 216 moveto (5336 ) show
0 204 moveto (5337 ) show
0 192 moveto (5338 ) show
0 180 moveto (5339 ) show
0 168 moveto (5340 ) show
0 156 moveto (5341 ) show
0 144 moveto (5342 ) show
0 132 moveto (5343 ) show
0 120 moveto (5344 ) show
0 108 moveto (5345 ) show
0 96 moveto (5346 ) show
0 84 moveto (5347 ) show
0 72 moveto (5348 ) show
0 60 moveto (5349 ) show
0 24 moveto (Sheet 53) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/file.c  Page 4) show
0 648 moveto (5350 // Write to file f.) show
0 636 moveto (5351 int) show
0 624 moveto (5352 filewrite\(struct file *f, char *addr, int n\)) show
0 612 moveto (5353 {) show
0 600 moveto (5354   int r;) show
0 588 moveto (5355 ) show
0 576 moveto (5356   if\(f->writable == 0\)) show
0 564 moveto (5357     return -1;) show
0 552 moveto (5358   if\(f->type == FD_PIPE\)) show
0 540 moveto (5359     return pipewrite\(f->pipe, addr, n\);) show
0 528 moveto (5360   if\(f->type == FD_INODE\){) show
0 516 moveto (5361     // write a few blocks at a time to avoid exceeding) show
0 504 moveto (5362     // the maximum log transaction size, including) show
0 492 moveto (5363     // i-node, indirect block, allocation blocks,) show
0 480 moveto (5364     // and 2 blocks of slop for non-aligned writes.) show
0 468 moveto (5365     // this really belongs lower down, since writei\(\)) show
0 456 moveto (5366     // might be writing a device like the console.) show
0 444 moveto (5367     int max = \(\(LOGSIZE-1-1-2\) / 2\) * 512;) show
0 432 moveto (5368     int i = 0;) show
0 420 moveto (5369     while\(i < n\){) show
0 408 moveto (5370       int n1 = n - i;) show
0 396 moveto (5371       if\(n1 > max\)) show
0 384 moveto (5372         n1 = max;) show
0 372 moveto (5373 ) show
0 360 moveto (5374       begin_trans\(\);) show
0 348 moveto (5375       ilock\(f->ip\);) show
0 336 moveto (5376       if \(\(r = writei\(f->ip, addr + i, f->off, n1\)\) > 0\)) show
0 324 moveto (5377         f->off += r;) show
0 312 moveto (5378       iunlock\(f->ip\);) show
0 300 moveto (5379       commit_trans\(\);) show
0 288 moveto (5380 ) show
0 276 moveto (5381       if\(r < 0\)) show
0 264 moveto (5382         break;) show
0 252 moveto (5383       if\(r != n1\)) show
0 240 moveto (5384         panic\("short filewrite"\);) show
0 228 moveto (5385       i += r;) show
0 216 moveto (5386     }) show
0 204 moveto (5387     return i == n ? n : -1;) show
0 192 moveto (5388   }) show
0 180 moveto (5389   panic\("filewrite"\);) show
0 168 moveto (5390 }) show
0 156 moveto (5391 ) show
0 144 moveto (5392 ) show
0 132 moveto (5393 ) show
0 120 moveto (5394 ) show
0 108 moveto (5395 ) show
0 96 moveto (5396 ) show
0 84 moveto (5397 ) show
0 72 moveto (5398 ) show
0 60 moveto (5399 ) show
0 24 moveto (Sheet 53) show
grestore
restore
showpage
%%Page: 62 62
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sysfile.c  Page 1) show
0 648 moveto (5400 //) show
0 636 moveto (5401 // File-system system calls.) show
0 624 moveto (5402 // Mostly argument checking, since we don't trust) show
0 612 moveto (5403 // user code, and calls into file.c and fs.c.) show
0 600 moveto (5404 //) show
0 588 moveto (5405 ) show
0 576 moveto (5406 #include "types.h") show
0 564 moveto (5407 #include "defs.h") show
0 552 moveto (5408 #include "param.h") show
0 540 moveto (5409 #include "stat.h") show
0 528 moveto (5410 #include "mmu.h") show
0 516 moveto (5411 #include "proc.h") show
0 504 moveto (5412 #include "fs.h") show
0 492 moveto (5413 #include "file.h") show
0 480 moveto (5414 #include "fcntl.h") show
0 468 moveto (5415 ) show
0 456 moveto (5416 // Fetch the nth word-sized system call argument as a file descriptor) show
0 444 moveto (5417 // and return both the descriptor and the corresponding struct file.) show
0 432 moveto (5418 static int) show
0 420 moveto (5419 argfd\(int n, int *pfd, struct file **pf\)) show
0 408 moveto (5420 {) show
0 396 moveto (5421   int fd;) show
0 384 moveto (5422   struct file *f;) show
0 372 moveto (5423 ) show
0 360 moveto (5424   if\(argint\(n, &fd\) < 0\)) show
0 348 moveto (5425     return -1;) show
0 336 moveto (5426   if\(fd < 0 || fd >= NOFILE || \(f=proc->ofile[fd]\) == 0\)) show
0 324 moveto (5427     return -1;) show
0 312 moveto (5428   if\(pfd\)) show
0 300 moveto (5429     *pfd = fd;) show
0 288 moveto (5430   if\(pf\)) show
0 276 moveto (5431     *pf = f;) show
0 264 moveto (5432   return 0;) show
0 252 moveto (5433 }) show
0 240 moveto (5434 ) show
0 228 moveto (5435 // Allocate a file descriptor for the given file.) show
0 216 moveto (5436 // Takes over file reference from caller on success.) show
0 204 moveto (5437 static int) show
0 192 moveto (5438 fdalloc\(struct file *f\)) show
0 180 moveto (5439 {) show
0 168 moveto (5440   int fd;) show
0 156 moveto (5441 ) show
0 144 moveto (5442   for\(fd = 0; fd < NOFILE; fd++\){) show
0 132 moveto (5443     if\(proc->ofile[fd] == 0\){) show
0 120 moveto (5444       proc->ofile[fd] = f;) show
0 108 moveto (5445       return fd;) show
0 96 moveto (5446     }) show
0 84 moveto (5447   }) show
0 72 moveto (5448   return -1;) show
0 60 moveto (5449 }) show
0 24 moveto (Sheet 54) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sysfile.c  Page 2) show
0 648 moveto (5450 int) show
0 636 moveto (5451 sys_dup\(void\)) show
0 624 moveto (5452 {) show
0 612 moveto (5453   struct file *f;) show
0 600 moveto (5454   int fd;) show
0 588 moveto (5455 ) show
0 576 moveto (5456   if\(argfd\(0, 0, &f\) < 0\)) show
0 564 moveto (5457     return -1;) show
0 552 moveto (5458   if\(\(fd=fdalloc\(f\)\) < 0\)) show
0 540 moveto (5459     return -1;) show
0 528 moveto (5460   filedup\(f\);) show
0 516 moveto (5461   return fd;) show
0 504 moveto (5462 }) show
0 492 moveto (5463 ) show
0 480 moveto (5464 int) show
0 468 moveto (5465 sys_read\(void\)) show
0 456 moveto (5466 {) show
0 444 moveto (5467   struct file *f;) show
0 432 moveto (5468   int n;) show
0 420 moveto (5469   char *p;) show
0 408 moveto (5470 ) show
0 396 moveto (5471   if\(argfd\(0, 0, &f\) < 0 || argint\(2, &n\) < 0 || argptr\(1, &p, n\) < 0\)) show
0 384 moveto (5472     return -1;) show
0 372 moveto (5473   return fileread\(f, p, n\);) show
0 360 moveto (5474 }) show
0 348 moveto (5475 ) show
0 336 moveto (5476 int) show
0 324 moveto (5477 sys_write\(void\)) show
0 312 moveto (5478 {) show
0 300 moveto (5479   struct file *f;) show
0 288 moveto (5480   int n;) show
0 276 moveto (5481   char *p;) show
0 264 moveto (5482 ) show
0 252 moveto (5483   if\(argfd\(0, 0, &f\) < 0 || argint\(2, &n\) < 0 || argptr\(1, &p, n\) < 0\)) show
0 240 moveto (5484     return -1;) show
0 228 moveto (5485   return filewrite\(f, p, n\);) show
0 216 moveto (5486 }) show
0 204 moveto (5487 ) show
0 192 moveto (5488 int) show
0 180 moveto (5489 sys_close\(void\)) show
0 168 moveto (5490 {) show
0 156 moveto (5491   int fd;) show
0 144 moveto (5492   struct file *f;) show
0 132 moveto (5493 ) show
0 120 moveto (5494   if\(argfd\(0, &fd, &f\) < 0\)) show
0 108 moveto (5495     return -1;) show
0 96 moveto (5496   proc->ofile[fd] = 0;) show
0 84 moveto (5497   fileclose\(f\);) show
0 72 moveto (5498   return 0;) show
0 60 moveto (5499 }) show
0 24 moveto (Sheet 54) show
grestore
restore
showpage
%%Page: 63 63
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sysfile.c  Page 3) show
0 648 moveto (5500 int) show
0 636 moveto (5501 sys_fstat\(void\)) show
0 624 moveto (5502 {) show
0 612 moveto (5503   struct file *f;) show
0 600 moveto (5504   struct stat *st;) show
0 588 moveto (5505 ) show
0 576 moveto (5506   if\(argfd\(0, 0, &f\) < 0 || argptr\(1, \(void*\)&st, sizeof\(*st\)\) < 0\)) show
0 564 moveto (5507     return -1;) show
0 552 moveto (5508   return filestat\(f, st\);) show
0 540 moveto (5509 }) show
0 528 moveto (5510 ) show
0 516 moveto (5511 // Create the path new as a link to the same inode as old.) show
0 504 moveto (5512 int) show
0 492 moveto (5513 sys_link\(void\)) show
0 480 moveto (5514 {) show
0 468 moveto (5515   char name[DIRSIZ], *new, *old;) show
0 456 moveto (5516   struct inode *dp, *ip;) show
0 444 moveto (5517 ) show
0 432 moveto (5518   if\(argstr\(0, &old\) < 0 || argstr\(1, &new\) < 0\)) show
0 420 moveto (5519     return -1;) show
0 408 moveto (5520   if\(\(ip = namei\(old\)\) == 0\)) show
0 396 moveto (5521     return -1;) show
0 384 moveto (5522 ) show
0 372 moveto (5523   begin_trans\(\);) show
0 360 moveto (5524 ) show
0 348 moveto (5525   ilock\(ip\);) show
0 336 moveto (5526   if\(ip->type == T_DIR\){) show
0 324 moveto (5527     iunlockput\(ip\);) show
0 312 moveto (5528     commit_trans\(\);) show
0 300 moveto (5529     return -1;) show
0 288 moveto (5530   }) show
0 276 moveto (5531 ) show
0 264 moveto (5532   ip->nlink++;) show
0 252 moveto (5533   iupdate\(ip\);) show
0 240 moveto (5534   iunlock\(ip\);) show
0 228 moveto (5535 ) show
0 216 moveto (5536   if\(\(dp = nameiparent\(new, name\)\) == 0\)) show
0 204 moveto (5537     goto bad;) show
0 192 moveto (5538   ilock\(dp\);) show
0 180 moveto (5539   if\(dp->dev != ip->dev || dirlink\(dp, name, ip->inum\) < 0\){) show
0 168 moveto (5540     iunlockput\(dp\);) show
0 156 moveto (5541     goto bad;) show
0 144 moveto (5542   }) show
0 132 moveto (5543   iunlockput\(dp\);) show
0 120 moveto (5544   iput\(ip\);) show
0 108 moveto (5545 ) show
0 96 moveto (5546   commit_trans\(\);) show
0 84 moveto (5547 ) show
0 72 moveto (5548   return 0;) show
0 60 moveto (5549 ) show
0 24 moveto (Sheet 55) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sysfile.c  Page 4) show
0 648 moveto (5550 bad:) show
0 636 moveto (5551   ilock\(ip\);) show
0 624 moveto (5552   ip->nlink--;) show
0 612 moveto (5553   iupdate\(ip\);) show
0 600 moveto (5554   iunlockput\(ip\);) show
0 588 moveto (5555   commit_trans\(\);) show
0 576 moveto (5556   return -1;) show
0 564 moveto (5557 }) show
0 552 moveto (5558 ) show
0 540 moveto (5559 // Is the directory dp empty except for "." and ".." ?) show
0 528 moveto (5560 static int) show
0 516 moveto (5561 isdirempty\(struct inode *dp\)) show
0 504 moveto (5562 {) show
0 492 moveto (5563   int off;) show
0 480 moveto (5564   struct dirent de;) show
0 468 moveto (5565 ) show
0 456 moveto (5566   for\(off=2*sizeof\(de\); off<dp->size; off+=sizeof\(de\)\){) show
0 444 moveto (5567     if\(readi\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 432 moveto (5568       panic\("isdirempty: readi"\);) show
0 420 moveto (5569     if\(de.inum != 0\)) show
0 408 moveto (5570       return 0;) show
0 396 moveto (5571   }) show
0 384 moveto (5572   return 1;) show
0 372 moveto (5573 }) show
0 360 moveto (5574 ) show
0 348 moveto (5575 ) show
0 336 moveto (5576 ) show
0 324 moveto (5577 ) show
0 312 moveto (5578 ) show
0 300 moveto (5579 ) show
0 288 moveto (5580 ) show
0 276 moveto (5581 ) show
0 264 moveto (5582 ) show
0 252 moveto (5583 ) show
0 240 moveto (5584 ) show
0 228 moveto (5585 ) show
0 216 moveto (5586 ) show
0 204 moveto (5587 ) show
0 192 moveto (5588 ) show
0 180 moveto (5589 ) show
0 168 moveto (5590 ) show
0 156 moveto (5591 ) show
0 144 moveto (5592 ) show
0 132 moveto (5593 ) show
0 120 moveto (5594 ) show
0 108 moveto (5595 ) show
0 96 moveto (5596 ) show
0 84 moveto (5597 ) show
0 72 moveto (5598 ) show
0 60 moveto (5599 ) show
0 24 moveto (Sheet 55) show
grestore
restore
showpage
%%Page: 64 64
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sysfile.c  Page 5) show
0 648 moveto (5600 int) show
0 636 moveto (5601 sys_unlink\(void\)) show
0 624 moveto (5602 {) show
0 612 moveto (5603   struct inode *ip, *dp;) show
0 600 moveto (5604   struct dirent de;) show
0 588 moveto (5605   char name[DIRSIZ], *path;) show
0 576 moveto (5606   uint off;) show
0 564 moveto (5607 ) show
0 552 moveto (5608   if\(argstr\(0, &path\) < 0\)) show
0 540 moveto (5609     return -1;) show
0 528 moveto (5610   if\(\(dp = nameiparent\(path, name\)\) == 0\)) show
0 516 moveto (5611     return -1;) show
0 504 moveto (5612 ) show
0 492 moveto (5613   begin_trans\(\);) show
0 480 moveto (5614 ) show
0 468 moveto (5615   ilock\(dp\);) show
0 456 moveto (5616 ) show
0 444 moveto (5617   // Cannot unlink "." or "..".) show
0 432 moveto (5618   if\(namecmp\(name, "."\) == 0 || namecmp\(name, ".."\) == 0\)) show
0 420 moveto (5619     goto bad;) show
0 408 moveto (5620 ) show
0 396 moveto (5621   if\(\(ip = dirlookup\(dp, name, &off\)\) == 0\)) show
0 384 moveto (5622     goto bad;) show
0 372 moveto (5623   ilock\(ip\);) show
0 360 moveto (5624 ) show
0 348 moveto (5625   if\(ip->nlink < 1\)) show
0 336 moveto (5626     panic\("unlink: nlink < 1"\);) show
0 324 moveto (5627   if\(ip->type == T_DIR && !isdirempty\(ip\)\){) show
0 312 moveto (5628     iunlockput\(ip\);) show
0 300 moveto (5629     goto bad;) show
0 288 moveto (5630   }) show
0 276 moveto (5631 ) show
0 264 moveto (5632   memset\(&de, 0, sizeof\(de\)\);) show
0 252 moveto (5633   if\(writei\(dp, \(char*\)&de, off, sizeof\(de\)\) != sizeof\(de\)\)) show
0 240 moveto (5634     panic\("unlink: writei"\);) show
0 228 moveto (5635   if\(ip->type == T_DIR\){) show
0 216 moveto (5636     dp->nlink--;) show
0 204 moveto (5637     iupdate\(dp\);) show
0 192 moveto (5638   }) show
0 180 moveto (5639   iunlockput\(dp\);) show
0 168 moveto (5640 ) show
0 156 moveto (5641   ip->nlink--;) show
0 144 moveto (5642   iupdate\(ip\);) show
0 132 moveto (5643   iunlockput\(ip\);) show
0 120 moveto (5644 ) show
0 108 moveto (5645   commit_trans\(\);) show
0 96 moveto (5646 ) show
0 84 moveto (5647   return 0;) show
0 72 moveto (5648 ) show
0 60 moveto (5649 ) show
0 24 moveto (Sheet 56) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sysfile.c  Page 6) show
0 648 moveto (5650 bad:) show
0 636 moveto (5651   iunlockput\(dp\);) show
0 624 moveto (5652   commit_trans\(\);) show
0 612 moveto (5653   return -1;) show
0 600 moveto (5654 }) show
0 588 moveto (5655 ) show
0 576 moveto (5656 static struct inode*) show
0 564 moveto (5657 create\(char *path, short type, short major, short minor\)) show
0 552 moveto (5658 {) show
0 540 moveto (5659   uint off;) show
0 528 moveto (5660   struct inode *ip, *dp;) show
0 516 moveto (5661   char name[DIRSIZ];) show
0 504 moveto (5662 ) show
0 492 moveto (5663   if\(\(dp = nameiparent\(path, name\)\) == 0\)) show
0 480 moveto (5664     return 0;) show
0 468 moveto (5665   ilock\(dp\);) show
0 456 moveto (5666 ) show
0 444 moveto (5667   if\(\(ip = dirlookup\(dp, name, &off\)\) != 0\){) show
0 432 moveto (5668     iunlockput\(dp\);) show
0 420 moveto (5669     ilock\(ip\);) show
0 408 moveto (5670     if\(type == T_FILE && ip->type == T_FILE\)) show
0 396 moveto (5671       return ip;) show
0 384 moveto (5672     iunlockput\(ip\);) show
0 372 moveto (5673     return 0;) show
0 360 moveto (5674   }) show
0 348 moveto (5675 ) show
0 336 moveto (5676   if\(\(ip = ialloc\(dp->dev, type\)\) == 0\)) show
0 324 moveto (5677     panic\("create: ialloc"\);) show
0 312 moveto (5678 ) show
0 300 moveto (5679   ilock\(ip\);) show
0 288 moveto (5680   ip->major = major;) show
0 276 moveto (5681   ip->minor = minor;) show
0 264 moveto (5682   ip->nlink = 1;) show
0 252 moveto (5683   iupdate\(ip\);) show
0 240 moveto (5684 ) show
0 228 moveto (5685   if\(type == T_DIR\){  // Create . and .. entries.) show
0 216 moveto (5686     dp->nlink++;  // for "..") show
0 204 moveto (5687     iupdate\(dp\);) show
0 192 moveto (5688     // No ip->nlink++ for ".": avoid cyclic ref count.) show
0 180 moveto (5689     if\(dirlink\(ip, ".", ip->inum\) < 0 || dirlink\(ip, "..", dp->inum\) < 0\)) show
0 168 moveto (5690       panic\("create dots"\);) show
0 156 moveto (5691   }) show
0 144 moveto (5692 ) show
0 132 moveto (5693   if\(dirlink\(dp, name, ip->inum\) < 0\)) show
0 120 moveto (5694     panic\("create: dirlink"\);) show
0 108 moveto (5695 ) show
0 96 moveto (5696   iunlockput\(dp\);) show
0 84 moveto (5697 ) show
0 72 moveto (5698   return ip;) show
0 60 moveto (5699 }) show
0 24 moveto (Sheet 56) show
grestore
restore
showpage
%%Page: 65 65
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sysfile.c  Page 7) show
0 648 moveto (5700 int) show
0 636 moveto (5701 sys_open\(void\)) show
0 624 moveto (5702 {) show
0 612 moveto (5703   char *path;) show
0 600 moveto (5704   int fd, omode;) show
0 588 moveto (5705   struct file *f;) show
0 576 moveto (5706   struct inode *ip;) show
0 564 moveto (5707 ) show
0 552 moveto (5708   if\(argstr\(0, &path\) < 0 || argint\(1, &omode\) < 0\)) show
0 540 moveto (5709     return -1;) show
0 528 moveto (5710   if\(omode & O_CREATE\){) show
0 516 moveto (5711     begin_trans\(\);) show
0 504 moveto (5712     ip = create\(path, T_FILE, 0, 0\);) show
0 492 moveto (5713     commit_trans\(\);) show
0 480 moveto (5714     if\(ip == 0\)) show
0 468 moveto (5715       return -1;) show
0 456 moveto (5716   } else {) show
0 444 moveto (5717     if\(\(ip = namei\(path\)\) == 0\)) show
0 432 moveto (5718       return -1;) show
0 420 moveto (5719     ilock\(ip\);) show
0 408 moveto (5720     if\(ip->type == T_DIR && omode != O_RDONLY\){) show
0 396 moveto (5721       iunlockput\(ip\);) show
0 384 moveto (5722       return -1;) show
0 372 moveto (5723     }) show
0 360 moveto (5724   }) show
0 348 moveto (5725 ) show
0 336 moveto (5726   if\(\(f = filealloc\(\)\) == 0 || \(fd = fdalloc\(f\)\) < 0\){) show
0 324 moveto (5727     if\(f\)) show
0 312 moveto (5728       fileclose\(f\);) show
0 300 moveto (5729     iunlockput\(ip\);) show
0 288 moveto (5730     return -1;) show
0 276 moveto (5731   }) show
0 264 moveto (5732   iunlock\(ip\);) show
0 252 moveto (5733 ) show
0 240 moveto (5734   f->type = FD_INODE;) show
0 228 moveto (5735   f->ip = ip;) show
0 216 moveto (5736   f->off = 0;) show
0 204 moveto (5737   f->readable = !\(omode & O_WRONLY\);) show
0 192 moveto (5738   f->writable = \(omode & O_WRONLY\) || \(omode & O_RDWR\);) show
0 180 moveto (5739   return fd;) show
0 168 moveto (5740 }) show
0 156 moveto (5741 ) show
0 144 moveto (5742 ) show
0 132 moveto (5743 ) show
0 120 moveto (5744 ) show
0 108 moveto (5745 ) show
0 96 moveto (5746 ) show
0 84 moveto (5747 ) show
0 72 moveto (5748 ) show
0 60 moveto (5749 ) show
0 24 moveto (Sheet 57) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sysfile.c  Page 8) show
0 648 moveto (5750 int) show
0 636 moveto (5751 sys_mkdir\(void\)) show
0 624 moveto (5752 {) show
0 612 moveto (5753   char *path;) show
0 600 moveto (5754   struct inode *ip;) show
0 588 moveto (5755 ) show
0 576 moveto (5756   begin_trans\(\);) show
0 564 moveto (5757   if\(argstr\(0, &path\) < 0 || \(ip = create\(path, T_DIR, 0, 0\)\) == 0\){) show
0 552 moveto (5758     commit_trans\(\);) show
0 540 moveto (5759     return -1;) show
0 528 moveto (5760   }) show
0 516 moveto (5761   iunlockput\(ip\);) show
0 504 moveto (5762   commit_trans\(\);) show
0 492 moveto (5763   return 0;) show
0 480 moveto (5764 }) show
0 468 moveto (5765 ) show
0 456 moveto (5766 int) show
0 444 moveto (5767 sys_mknod\(void\)) show
0 432 moveto (5768 {) show
0 420 moveto (5769   struct inode *ip;) show
0 408 moveto (5770   char *path;) show
0 396 moveto (5771   int len;) show
0 384 moveto (5772   int major, minor;) show
0 372 moveto (5773 ) show
0 360 moveto (5774   begin_trans\(\);) show
0 348 moveto (5775   if\(\(len=argstr\(0, &path\)\) < 0 ||) show
0 336 moveto (5776      argint\(1, &major\) < 0 ||) show
0 324 moveto (5777      argint\(2, &minor\) < 0 ||) show
0 312 moveto (5778      \(ip = create\(path, T_DEV, major, minor\)\) == 0\){) show
0 300 moveto (5779     commit_trans\(\);) show
0 288 moveto (5780     return -1;) show
0 276 moveto (5781   }) show
0 264 moveto (5782   iunlockput\(ip\);) show
0 252 moveto (5783   commit_trans\(\);) show
0 240 moveto (5784   return 0;) show
0 228 moveto (5785 }) show
0 216 moveto (5786 ) show
0 204 moveto (5787 ) show
0 192 moveto (5788 ) show
0 180 moveto (5789 ) show
0 168 moveto (5790 ) show
0 156 moveto (5791 ) show
0 144 moveto (5792 ) show
0 132 moveto (5793 ) show
0 120 moveto (5794 ) show
0 108 moveto (5795 ) show
0 96 moveto (5796 ) show
0 84 moveto (5797 ) show
0 72 moveto (5798 ) show
0 60 moveto (5799 ) show
0 24 moveto (Sheet 57) show
grestore
restore
showpage
%%Page: 66 66
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sysfile.c  Page 9) show
0 648 moveto (5800 int) show
0 636 moveto (5801 sys_chdir\(void\)) show
0 624 moveto (5802 {) show
0 612 moveto (5803   char *path;) show
0 600 moveto (5804   struct inode *ip;) show
0 588 moveto (5805 ) show
0 576 moveto (5806   if\(argstr\(0, &path\) < 0 || \(ip = namei\(path\)\) == 0\)) show
0 564 moveto (5807     return -1;) show
0 552 moveto (5808   ilock\(ip\);) show
0 540 moveto (5809   if\(ip->type != T_DIR\){) show
0 528 moveto (5810     iunlockput\(ip\);) show
0 516 moveto (5811     return -1;) show
0 504 moveto (5812   }) show
0 492 moveto (5813   iunlock\(ip\);) show
0 480 moveto (5814   iput\(proc->cwd\);) show
0 468 moveto (5815   proc->cwd = ip;) show
0 456 moveto (5816   return 0;) show
0 444 moveto (5817 }) show
0 432 moveto (5818 ) show
0 420 moveto (5819 int) show
0 408 moveto (5820 sys_exec\(void\)) show
0 396 moveto (5821 {) show
0 384 moveto (5822   char *path, *argv[MAXARG];) show
0 372 moveto (5823   int i;) show
0 360 moveto (5824   uint uargv, uarg;) show
0 348 moveto (5825 ) show
0 336 moveto (5826   if\(argstr\(0, &path\) < 0 || argint\(1, \(int*\)&uargv\) < 0\){) show
0 324 moveto (5827     return -1;) show
0 312 moveto (5828   }) show
0 300 moveto (5829   memset\(argv, 0, sizeof\(argv\)\);) show
0 288 moveto (5830   for\(i=0;; i++\){) show
0 276 moveto (5831     if\(i >= NELEM\(argv\)\)) show
0 264 moveto (5832       return -1;) show
0 252 moveto (5833     if\(fetchint\(uargv+4*i, \(int*\)&uarg\) < 0\)) show
0 240 moveto (5834       return -1;) show
0 228 moveto (5835     if\(uarg == 0\){) show
0 216 moveto (5836       argv[i] = 0;) show
0 204 moveto (5837       break;) show
0 192 moveto (5838     }) show
0 180 moveto (5839     if\(fetchstr\(uarg, &argv[i]\) < 0\)) show
0 168 moveto (5840       return -1;) show
0 156 moveto (5841   }) show
0 144 moveto (5842   return exec\(path, argv\);) show
0 132 moveto (5843 }) show
0 120 moveto (5844 ) show
0 108 moveto (5845 ) show
0 96 moveto (5846 ) show
0 84 moveto (5847 ) show
0 72 moveto (5848 ) show
0 60 moveto (5849 ) show
0 24 moveto (Sheet 58) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sysfile.c  Page 10) show
0 648 moveto (5850 int) show
0 636 moveto (5851 sys_pipe\(void\)) show
0 624 moveto (5852 {) show
0 612 moveto (5853   int *fd;) show
0 600 moveto (5854   struct file *rf, *wf;) show
0 588 moveto (5855   int fd0, fd1;) show
0 576 moveto (5856 ) show
0 564 moveto (5857   if\(argptr\(0, \(void*\)&fd, 2*sizeof\(fd[0]\)\) < 0\)) show
0 552 moveto (5858     return -1;) show
0 540 moveto (5859   if\(pipealloc\(&rf, &wf\) < 0\)) show
0 528 moveto (5860     return -1;) show
0 516 moveto (5861   fd0 = -1;) show
0 504 moveto (5862   if\(\(fd0 = fdalloc\(rf\)\) < 0 || \(fd1 = fdalloc\(wf\)\) < 0\){) show
0 492 moveto (5863     if\(fd0 >= 0\)) show
0 480 moveto (5864       proc->ofile[fd0] = 0;) show
0 468 moveto (5865     fileclose\(rf\);) show
0 456 moveto (5866     fileclose\(wf\);) show
0 444 moveto (5867     return -1;) show
0 432 moveto (5868   }) show
0 420 moveto (5869   fd[0] = fd0;) show
0 408 moveto (5870   fd[1] = fd1;) show
0 396 moveto (5871   return 0;) show
0 384 moveto (5872 }) show
0 372 moveto (5873 ) show
0 360 moveto (5874 ) show
0 348 moveto (5875 ) show
0 336 moveto (5876 ) show
0 324 moveto (5877 ) show
0 312 moveto (5878 ) show
0 300 moveto (5879 ) show
0 288 moveto (5880 ) show
0 276 moveto (5881 ) show
0 264 moveto (5882 ) show
0 252 moveto (5883 ) show
0 240 moveto (5884 ) show
0 228 moveto (5885 ) show
0 216 moveto (5886 ) show
0 204 moveto (5887 ) show
0 192 moveto (5888 ) show
0 180 moveto (5889 ) show
0 168 moveto (5890 ) show
0 156 moveto (5891 ) show
0 144 moveto (5892 ) show
0 132 moveto (5893 ) show
0 120 moveto (5894 ) show
0 108 moveto (5895 ) show
0 96 moveto (5896 ) show
0 84 moveto (5897 ) show
0 72 moveto (5898 ) show
0 60 moveto (5899 ) show
0 24 moveto (Sheet 58) show
grestore
restore
showpage
%%Page: 67 67
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/exec.c  Page 1) show
0 648 moveto (5900 #include "types.h") show
0 636 moveto (5901 #include "param.h") show
0 624 moveto (5902 #include "memlayout.h") show
0 612 moveto (5903 #include "mmu.h") show
0 600 moveto (5904 #include "proc.h") show
0 588 moveto (5905 #include "defs.h") show
0 576 moveto (5906 #include "x86.h") show
0 564 moveto (5907 #include "elf.h") show
0 552 moveto (5908 ) show
0 540 moveto (5909 int) show
0 528 moveto (5910 exec\(char *path, char **argv\)) show
0 516 moveto (5911 {) show
0 504 moveto (5912   char *s, *last;) show
0 492 moveto (5913   int i, off;) show
0 480 moveto (5914   uint argc, sz, sp, ustack[3+MAXARG+1];) show
0 468 moveto (5915   struct elfhdr elf;) show
0 456 moveto (5916   struct inode *ip;) show
0 444 moveto (5917   struct proghdr ph;) show
0 432 moveto (5918   pde_t *pgdir, *oldpgdir;) show
0 420 moveto (5919 ) show
0 408 moveto (5920   if\(\(ip = namei\(path\)\) == 0\)) show
0 396 moveto (5921     return -1;) show
0 384 moveto (5922   ilock\(ip\);) show
0 372 moveto (5923   pgdir = 0;) show
0 360 moveto (5924 ) show
0 348 moveto (5925   // Check ELF header) show
0 336 moveto (5926   if\(readi\(ip, \(char*\)&elf, 0, sizeof\(elf\)\) < sizeof\(elf\)\)) show
0 324 moveto (5927     goto bad;) show
0 312 moveto (5928   if\(elf.magic != ELF_MAGIC\)) show
0 300 moveto (5929     goto bad;) show
0 288 moveto (5930 ) show
0 276 moveto (5931   if\(\(pgdir = setupkvm\(\)\) == 0\)) show
0 264 moveto (5932     goto bad;) show
0 252 moveto (5933 ) show
0 240 moveto (5934   // Load program into memory.) show
0 228 moveto (5935   sz = 0;) show
0 216 moveto (5936   for\(i=0, off=elf.phoff; i<elf.phnum; i++, off+=sizeof\(ph\)\){) show
0 204 moveto (5937     if\(readi\(ip, \(char*\)&ph, off, sizeof\(ph\)\) != sizeof\(ph\)\)) show
0 192 moveto (5938       goto bad;) show
0 180 moveto (5939     if\(ph.type != ELF_PROG_LOAD\)) show
0 168 moveto (5940       continue;) show
0 156 moveto (5941     if\(ph.memsz < ph.filesz\)) show
0 144 moveto (5942       goto bad;) show
0 132 moveto (5943     if\(\(sz = allocuvm\(pgdir, sz, ph.vaddr + ph.memsz\)\) == 0\)) show
0 120 moveto (5944       goto bad;) show
0 108 moveto (5945     if\(loaduvm\(pgdir, \(char*\)ph.vaddr, ip, ph.off, ph.filesz\) < 0\)) show
0 96 moveto (5946       goto bad;) show
0 84 moveto (5947   }) show
0 72 moveto (5948   iunlockput\(ip\);) show
0 60 moveto (5949   ip = 0;) show
0 24 moveto (Sheet 59) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/exec.c  Page 2) show
0 648 moveto (5950   // Allocate two pages at the next page boundary.) show
0 636 moveto (5951   // Make the first inaccessible.  Use the second as the user stack.) show
0 624 moveto (5952   sz = PGROUNDUP\(sz\);) show
0 612 moveto (5953   if\(\(sz = allocuvm\(pgdir, sz, sz + 2*PGSIZE\)\) == 0\)) show
0 600 moveto (5954     goto bad;) show
0 588 moveto (5955   clearpteu\(pgdir, \(char*\)\(sz - 2*PGSIZE\)\);) show
0 576 moveto (5956   sp = sz;) show
0 564 moveto (5957 ) show
0 552 moveto (5958   // Push argument strings, prepare rest of stack in ustack.) show
0 540 moveto (5959   for\(argc = 0; argv[argc]; argc++\) {) show
0 528 moveto (5960     if\(argc >= MAXARG\)) show
0 516 moveto (5961       goto bad;) show
0 504 moveto (5962     sp = \(sp - \(strlen\(argv[argc]\) + 1\)\) & ~3;) show
0 492 moveto (5963     if\(copyout\(pgdir, sp, argv[argc], strlen\(argv[argc]\) + 1\) < 0\)) show
0 480 moveto (5964       goto bad;) show
0 468 moveto (5965     ustack[3+argc] = sp;) show
0 456 moveto (5966   }) show
0 444 moveto (5967   ustack[3+argc] = 0;) show
0 432 moveto (5968 ) show
0 420 moveto (5969   ustack[0] = 0xffffffff;  // fake return PC) show
0 408 moveto (5970   ustack[1] = argc;) show
0 396 moveto (5971   ustack[2] = sp - \(argc+1\)*4;  // argv pointer) show
0 384 moveto (5972 ) show
0 372 moveto (5973   sp -= \(3+argc+1\) * 4;) show
0 360 moveto (5974   if\(copyout\(pgdir, sp, ustack, \(3+argc+1\)*4\) < 0\)) show
0 348 moveto (5975     goto bad;) show
0 336 moveto (5976 ) show
0 324 moveto (5977   // Save program name for debugging.) show
0 312 moveto (5978   for\(last=s=path; *s; s++\)) show
0 300 moveto (5979     if\(*s == '/'\)) show
0 288 moveto (5980       last = s+1;) show
0 276 moveto (5981   safestrcpy\(proc->name, last, sizeof\(proc->name\)\);) show
0 264 moveto (5982 ) show
0 252 moveto (5983   // Commit to the user image.) show
0 240 moveto (5984   oldpgdir = proc->pgdir;) show
0 228 moveto (5985   proc->pgdir = pgdir;) show
0 216 moveto (5986   proc->sz = sz;) show
0 204 moveto (5987   proc->tf->eip = elf.entry;  // main) show
0 192 moveto (5988   proc->tf->esp = sp;) show
0 180 moveto (5989   switchuvm\(proc\);) show
0 168 moveto (5990   freevm\(oldpgdir\);) show
0 156 moveto (5991   return 0;) show
0 144 moveto (5992 ) show
0 132 moveto (5993  bad:) show
0 120 moveto (5994   if\(pgdir\)) show
0 108 moveto (5995     freevm\(pgdir\);) show
0 96 moveto (5996   if\(ip\)) show
0 84 moveto (5997     iunlockput\(ip\);) show
0 72 moveto (5998   return -1;) show
0 60 moveto (5999 }) show
0 24 moveto (Sheet 59) show
grestore
restore
showpage
%%Page: 68 68
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/pipe.c  Page 1) show
0 648 moveto (6000 #include "types.h") show
0 636 moveto (6001 #include "defs.h") show
0 624 moveto (6002 #include "param.h") show
0 612 moveto (6003 #include "mmu.h") show
0 600 moveto (6004 #include "proc.h") show
0 588 moveto (6005 #include "fs.h") show
0 576 moveto (6006 #include "file.h") show
0 564 moveto (6007 #include "spinlock.h") show
0 552 moveto (6008 ) show
0 540 moveto (6009 #define PIPESIZE 512) show
0 528 moveto (6010 ) show
0 516 moveto (6011 struct pipe {) show
0 504 moveto (6012   struct spinlock lock;) show
0 492 moveto (6013   char data[PIPESIZE];) show
0 480 moveto (6014   uint nread;     // number of bytes read) show
0 468 moveto (6015   uint nwrite;    // number of bytes written) show
0 456 moveto (6016   int readopen;   // read fd is still open) show
0 444 moveto (6017   int writeopen;  // write fd is still open) show
0 432 moveto (6018 };) show
0 420 moveto (6019 ) show
0 408 moveto (6020 int) show
0 396 moveto (6021 pipealloc\(struct file **f0, struct file **f1\)) show
0 384 moveto (6022 {) show
0 372 moveto (6023   struct pipe *p;) show
0 360 moveto (6024 ) show
0 348 moveto (6025   p = 0;) show
0 336 moveto (6026   *f0 = *f1 = 0;) show
0 324 moveto (6027   if\(\(*f0 = filealloc\(\)\) == 0 || \(*f1 = filealloc\(\)\) == 0\)) show
0 312 moveto (6028     goto bad;) show
0 300 moveto (6029   if\(\(p = \(struct pipe*\)kalloc\(\)\) == 0\)) show
0 288 moveto (6030     goto bad;) show
0 276 moveto (6031   p->readopen = 1;) show
0 264 moveto (6032   p->writeopen = 1;) show
0 252 moveto (6033   p->nwrite = 0;) show
0 240 moveto (6034   p->nread = 0;) show
0 228 moveto (6035   initlock\(&p->lock, "pipe"\);) show
0 216 moveto (6036   \(*f0\)->type = FD_PIPE;) show
0 204 moveto (6037   \(*f0\)->readable = 1;) show
0 192 moveto (6038   \(*f0\)->writable = 0;) show
0 180 moveto (6039   \(*f0\)->pipe = p;) show
0 168 moveto (6040   \(*f1\)->type = FD_PIPE;) show
0 156 moveto (6041   \(*f1\)->readable = 0;) show
0 144 moveto (6042   \(*f1\)->writable = 1;) show
0 132 moveto (6043   \(*f1\)->pipe = p;) show
0 120 moveto (6044   return 0;) show
0 108 moveto (6045 ) show
0 96 moveto (6046 ) show
0 84 moveto (6047 ) show
0 72 moveto (6048 ) show
0 60 moveto (6049 ) show
0 24 moveto (Sheet 60) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/pipe.c  Page 2) show
0 648 moveto (6050  bad:) show
0 636 moveto (6051   if\(p\)) show
0 624 moveto (6052     kfree\(\(char*\)p\);) show
0 612 moveto (6053   if\(*f0\)) show
0 600 moveto (6054     fileclose\(*f0\);) show
0 588 moveto (6055   if\(*f1\)) show
0 576 moveto (6056     fileclose\(*f1\);) show
0 564 moveto (6057   return -1;) show
0 552 moveto (6058 }) show
0 540 moveto (6059 ) show
0 528 moveto (6060 void) show
0 516 moveto (6061 pipeclose\(struct pipe *p, int writable\)) show
0 504 moveto (6062 {) show
0 492 moveto (6063   acquire\(&p->lock\);) show
0 480 moveto (6064   if\(writable\){) show
0 468 moveto (6065     p->writeopen = 0;) show
0 456 moveto (6066     wakeup\(&p->nread\);) show
0 444 moveto (6067   } else {) show
0 432 moveto (6068     p->readopen = 0;) show
0 420 moveto (6069     wakeup\(&p->nwrite\);) show
0 408 moveto (6070   }) show
0 396 moveto (6071   if\(p->readopen == 0 && p->writeopen == 0\){) show
0 384 moveto (6072     release\(&p->lock\);) show
0 372 moveto (6073     kfree\(\(char*\)p\);) show
0 360 moveto (6074   } else) show
0 348 moveto (6075     release\(&p->lock\);) show
0 336 moveto (6076 }) show
0 324 moveto (6077 ) show
0 312 moveto (6078 ) show
0 300 moveto (6079 int) show
0 288 moveto (6080 pipewrite\(struct pipe *p, char *addr, int n\)) show
0 276 moveto (6081 {) show
0 264 moveto (6082   int i;) show
0 252 moveto (6083 ) show
0 240 moveto (6084   acquire\(&p->lock\);) show
0 228 moveto (6085   for\(i = 0; i < n; i++\){) show
0 216 moveto (6086     while\(p->nwrite == p->nread + PIPESIZE\){  ) show
0 204 moveto (6087       if\(p->readopen == 0 || proc->killed\){) show
0 192 moveto (6088         release\(&p->lock\);) show
0 180 moveto (6089         return -1;) show
0 168 moveto (6090       }) show
0 156 moveto (6091       wakeup\(&p->nread\);) show
0 144 moveto (6092       sleep\(&p->nwrite, &p->lock\);  ) show
0 132 moveto (6093     }) show
0 120 moveto (6094     p->data[p->nwrite++ % PIPESIZE] = addr[i];) show
0 108 moveto (6095   }) show
0 96 moveto (6096   wakeup\(&p->nread\);  ) show
0 84 moveto (6097   release\(&p->lock\);) show
0 72 moveto (6098   return n;) show
0 60 moveto (6099 }) show
0 24 moveto (Sheet 60) show
grestore
restore
showpage
%%Page: 69 69
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/pipe.c  Page 3) show
0 648 moveto (6100 int) show
0 636 moveto (6101 piperead\(struct pipe *p, char *addr, int n\)) show
0 624 moveto (6102 {) show
0 612 moveto (6103   int i;) show
0 600 moveto (6104 ) show
0 588 moveto (6105   acquire\(&p->lock\);) show
0 576 moveto (6106   while\(p->nread == p->nwrite && p->writeopen\){  ) show
0 564 moveto (6107     if\(proc->killed\){) show
0 552 moveto (6108       release\(&p->lock\);) show
0 540 moveto (6109       return -1;) show
0 528 moveto (6110     }) show
0 516 moveto (6111     sleep\(&p->nread, &p->lock\); ) show
0 504 moveto (6112   }) show
0 492 moveto (6113   for\(i = 0; i < n; i++\){  ) show
0 480 moveto (6114     if\(p->nread == p->nwrite\)) show
0 468 moveto (6115       break;) show
0 456 moveto (6116     addr[i] = p->data[p->nread++ % PIPESIZE];) show
0 444 moveto (6117   }) show
0 432 moveto (6118   wakeup\(&p->nwrite\);  ) show
0 420 moveto (6119   release\(&p->lock\);) show
0 408 moveto (6120   return i;) show
0 396 moveto (6121 }) show
0 384 moveto (6122 ) show
0 372 moveto (6123 ) show
0 360 moveto (6124 ) show
0 348 moveto (6125 ) show
0 336 moveto (6126 ) show
0 324 moveto (6127 ) show
0 312 moveto (6128 ) show
0 300 moveto (6129 ) show
0 288 moveto (6130 ) show
0 276 moveto (6131 ) show
0 264 moveto (6132 ) show
0 252 moveto (6133 ) show
0 240 moveto (6134 ) show
0 228 moveto (6135 ) show
0 216 moveto (6136 ) show
0 204 moveto (6137 ) show
0 192 moveto (6138 ) show
0 180 moveto (6139 ) show
0 168 moveto (6140 ) show
0 156 moveto (6141 ) show
0 144 moveto (6142 ) show
0 132 moveto (6143 ) show
0 120 moveto (6144 ) show
0 108 moveto (6145 ) show
0 96 moveto (6146 ) show
0 84 moveto (6147 ) show
0 72 moveto (6148 ) show
0 60 moveto (6149 ) show
0 24 moveto (Sheet 61) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/string.c  Page 1) show
0 648 moveto (6150 #include "types.h") show
0 636 moveto (6151 #include "x86.h") show
0 624 moveto (6152 ) show
0 612 moveto (6153 void*) show
0 600 moveto (6154 memset\(void *dst, int c, uint n\)) show
0 588 moveto (6155 {) show
0 576 moveto (6156   if \(\(int\)dst%4 == 0 && n%4 == 0\){) show
0 564 moveto (6157     c &= 0xFF;) show
0 552 moveto (6158     stosl\(dst, \(c<<24\)|\(c<<16\)|\(c<<8\)|c, n/4\);) show
0 540 moveto (6159   } else) show
0 528 moveto (6160     stosb\(dst, c, n\);) show
0 516 moveto (6161   return dst;) show
0 504 moveto (6162 }) show
0 492 moveto (6163 ) show
0 480 moveto (6164 int) show
0 468 moveto (6165 memcmp\(const void *v1, const void *v2, uint n\)) show
0 456 moveto (6166 {) show
0 444 moveto (6167   const uchar *s1, *s2;) show
0 432 moveto (6168 ) show
0 420 moveto (6169   s1 = v1;) show
0 408 moveto (6170   s2 = v2;) show
0 396 moveto (6171   while\(n-- > 0\){) show
0 384 moveto (6172     if\(*s1 != *s2\)) show
0 372 moveto (6173       return *s1 - *s2;) show
0 360 moveto (6174     s1++, s2++;) show
0 348 moveto (6175   }) show
0 336 moveto (6176 ) show
0 324 moveto (6177   return 0;) show
0 312 moveto (6178 }) show
0 300 moveto (6179 ) show
0 288 moveto (6180 void*) show
0 276 moveto (6181 memmove\(void *dst, const void *src, uint n\)) show
0 264 moveto (6182 {) show
0 252 moveto (6183   const char *s;) show
0 240 moveto (6184   char *d;) show
0 228 moveto (6185 ) show
0 216 moveto (6186   s = src;) show
0 204 moveto (6187   d = dst;) show
0 192 moveto (6188   if\(s < d && s + n > d\){) show
0 180 moveto (6189     s += n;) show
0 168 moveto (6190     d += n;) show
0 156 moveto (6191     while\(n-- > 0\)) show
0 144 moveto (6192       *--d = *--s;) show
0 132 moveto (6193   } else) show
0 120 moveto (6194     while\(n-- > 0\)) show
0 108 moveto (6195       *d++ = *s++;) show
0 96 moveto (6196 ) show
0 84 moveto (6197   return dst;) show
0 72 moveto (6198 }) show
0 60 moveto (6199 ) show
0 24 moveto (Sheet 61) show
grestore
restore
showpage
%%Page: 70 70
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/string.c  Page 2) show
0 648 moveto (6200 // memcpy exists to placate GCC.  Use memmove.) show
0 636 moveto (6201 void*) show
0 624 moveto (6202 memcpy\(void *dst, const void *src, uint n\)) show
0 612 moveto (6203 {) show
0 600 moveto (6204   return memmove\(dst, src, n\);) show
0 588 moveto (6205 }) show
0 576 moveto (6206 ) show
0 564 moveto (6207 int) show
0 552 moveto (6208 strncmp\(const char *p, const char *q, uint n\)) show
0 540 moveto (6209 {) show
0 528 moveto (6210   while\(n > 0 && *p && *p == *q\)) show
0 516 moveto (6211     n--, p++, q++;) show
0 504 moveto (6212   if\(n == 0\)) show
0 492 moveto (6213     return 0;) show
0 480 moveto (6214   return \(uchar\)*p - \(uchar\)*q;) show
0 468 moveto (6215 }) show
0 456 moveto (6216 ) show
0 444 moveto (6217 char*) show
0 432 moveto (6218 strncpy\(char *s, const char *t, int n\)) show
0 420 moveto (6219 {) show
0 408 moveto (6220   char *os;) show
0 396 moveto (6221 ) show
0 384 moveto (6222   os = s;) show
0 372 moveto (6223   while\(n-- > 0 && \(*s++ = *t++\) != 0\)) show
0 360 moveto (6224     ;) show
0 348 moveto (6225   while\(n-- > 0\)) show
0 336 moveto (6226     *s++ = 0;) show
0 324 moveto (6227   return os;) show
0 312 moveto (6228 }) show
0 300 moveto (6229 ) show
0 288 moveto (6230 // Like strncpy but guaranteed to NUL-terminate.) show
0 276 moveto (6231 char*) show
0 264 moveto (6232 safestrcpy\(char *s, const char *t, int n\)) show
0 252 moveto (6233 {) show
0 240 moveto (6234   char *os;) show
0 228 moveto (6235 ) show
0 216 moveto (6236   os = s;) show
0 204 moveto (6237   if\(n <= 0\)) show
0 192 moveto (6238     return os;) show
0 180 moveto (6239   while\(--n > 0 && \(*s++ = *t++\) != 0\)) show
0 168 moveto (6240     ;) show
0 156 moveto (6241   *s = 0;) show
0 144 moveto (6242   return os;) show
0 132 moveto (6243 }) show
0 120 moveto (6244 ) show
0 108 moveto (6245 ) show
0 96 moveto (6246 ) show
0 84 moveto (6247 ) show
0 72 moveto (6248 ) show
0 60 moveto (6249 ) show
0 24 moveto (Sheet 62) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/string.c  Page 3) show
0 648 moveto (6250 int) show
0 636 moveto (6251 strlen\(const char *s\)) show
0 624 moveto (6252 {) show
0 612 moveto (6253   int n;) show
0 600 moveto (6254 ) show
0 588 moveto (6255   for\(n = 0; s[n]; n++\)) show
0 576 moveto (6256     ;) show
0 564 moveto (6257   return n;) show
0 552 moveto (6258 }) show
0 540 moveto (6259 ) show
0 528 moveto (6260 ) show
0 516 moveto (6261 ) show
0 504 moveto (6262 ) show
0 492 moveto (6263 ) show
0 480 moveto (6264 ) show
0 468 moveto (6265 ) show
0 456 moveto (6266 ) show
0 444 moveto (6267 ) show
0 432 moveto (6268 ) show
0 420 moveto (6269 ) show
0 408 moveto (6270 ) show
0 396 moveto (6271 ) show
0 384 moveto (6272 ) show
0 372 moveto (6273 ) show
0 360 moveto (6274 ) show
0 348 moveto (6275 ) show
0 336 moveto (6276 ) show
0 324 moveto (6277 ) show
0 312 moveto (6278 ) show
0 300 moveto (6279 ) show
0 288 moveto (6280 ) show
0 276 moveto (6281 ) show
0 264 moveto (6282 ) show
0 252 moveto (6283 ) show
0 240 moveto (6284 ) show
0 228 moveto (6285 ) show
0 216 moveto (6286 ) show
0 204 moveto (6287 ) show
0 192 moveto (6288 ) show
0 180 moveto (6289 ) show
0 168 moveto (6290 ) show
0 156 moveto (6291 ) show
0 144 moveto (6292 ) show
0 132 moveto (6293 ) show
0 120 moveto (6294 ) show
0 108 moveto (6295 ) show
0 96 moveto (6296 ) show
0 84 moveto (6297 ) show
0 72 moveto (6298 ) show
0 60 moveto (6299 ) show
0 24 moveto (Sheet 62) show
grestore
restore
showpage
%%Page: 71 71
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/mp.h  Page 1) show
0 648 moveto (6300 // See MultiProcessor Specification Version 1.[14]) show
0 636 moveto (6301 ) show
0 624 moveto (6302 struct mp {             // floating pointer) show
0 612 moveto (6303   uchar signature[4];           // "_MP_") show
0 600 moveto (6304   void *physaddr;               // phys addr of MP config table) show
0 588 moveto (6305   uchar length;                 // 1) show
0 576 moveto (6306   uchar specrev;                // [14]) show
0 564 moveto (6307   uchar checksum;               // all bytes must add up to 0) show
0 552 moveto (6308   uchar type;                   // MP system config type) show
0 540 moveto (6309   uchar imcrp;) show
0 528 moveto (6310   uchar reserved[3];) show
0 516 moveto (6311 };) show
0 504 moveto (6312 ) show
0 492 moveto (6313 struct mpconf {         // configuration table header) show
0 480 moveto (6314   uchar signature[4];           // "PCMP") show
0 468 moveto (6315   ushort length;                // total table length) show
0 456 moveto (6316   uchar version;                // [14]) show
0 444 moveto (6317   uchar checksum;               // all bytes must add up to 0) show
0 432 moveto (6318   uchar product[20];            // product id) show
0 420 moveto (6319   uint *oemtable;               // OEM table pointer) show
0 408 moveto (6320   ushort oemlength;             // OEM table length) show
0 396 moveto (6321   ushort entry;                 // entry count) show
0 384 moveto (6322   uint *lapicaddr;              // address of local APIC) show
0 372 moveto (6323   ushort xlength;               // extended table length) show
0 360 moveto (6324   uchar xchecksum;              // extended table checksum) show
0 348 moveto (6325   uchar reserved;) show
0 336 moveto (6326 };) show
0 324 moveto (6327 ) show
0 312 moveto (6328 struct mpproc {         // processor table entry) show
0 300 moveto (6329   uchar type;                   // entry type \(0\)) show
0 288 moveto (6330   uchar apicid;                 // local APIC id) show
0 276 moveto (6331   uchar version;                // local APIC verison) show
0 264 moveto (6332   uchar flags;                  // CPU flags) show
0 252 moveto (6333     #define MPBOOT 0x02           // This proc is the bootstrap processor.) show
0 240 moveto (6334   uchar signature[4];           // CPU signature) show
0 228 moveto (6335   uint feature;                 // feature flags from CPUID instruction) show
0 216 moveto (6336   uchar reserved[8];) show
0 204 moveto (6337 };) show
0 192 moveto (6338 ) show
0 180 moveto (6339 struct mpioapic {       // I/O APIC table entry) show
0 168 moveto (6340   uchar type;                   // entry type \(2\)) show
0 156 moveto (6341   uchar apicno;                 // I/O APIC id) show
0 144 moveto (6342   uchar version;                // I/O APIC version) show
0 132 moveto (6343   uchar flags;                  // I/O APIC flags) show
0 120 moveto (6344   uint *addr;                  // I/O APIC address) show
0 108 moveto (6345 };) show
0 96 moveto (6346 ) show
0 84 moveto (6347 ) show
0 72 moveto (6348 ) show
0 60 moveto (6349 ) show
0 24 moveto (Sheet 63) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/mp.h  Page 2) show
0 648 moveto (6350 // Table entry types) show
0 636 moveto (6351 #define MPPROC    0x00  // One per processor) show
0 624 moveto (6352 #define MPBUS     0x01  // One per bus) show
0 612 moveto (6353 #define MPIOAPIC  0x02  // One per I/O APIC) show
0 600 moveto (6354 #define MPIOINTR  0x03  // One per bus interrupt source) show
0 588 moveto (6355 #define MPLINTR   0x04  // One per system interrupt source) show
0 576 moveto (6356 ) show
0 564 moveto (6357 ) show
0 552 moveto (6358 ) show
0 540 moveto (6359 ) show
0 528 moveto (6360 ) show
0 516 moveto (6361 ) show
0 504 moveto (6362 ) show
0 492 moveto (6363 ) show
0 480 moveto (6364 ) show
0 468 moveto (6365 ) show
0 456 moveto (6366 ) show
0 444 moveto (6367 ) show
0 432 moveto (6368 ) show
0 420 moveto (6369 ) show
0 408 moveto (6370 ) show
0 396 moveto (6371 ) show
0 384 moveto (6372 ) show
0 372 moveto (6373 ) show
0 360 moveto (6374 ) show
0 348 moveto (6375 ) show
0 336 moveto (6376 ) show
0 324 moveto (6377 ) show
0 312 moveto (6378 ) show
0 300 moveto (6379 ) show
0 288 moveto (6380 ) show
0 276 moveto (6381 ) show
0 264 moveto (6382 ) show
0 252 moveto (6383 ) show
0 240 moveto (6384 ) show
0 228 moveto (6385 ) show
0 216 moveto (6386 ) show
0 204 moveto (6387 ) show
0 192 moveto (6388 ) show
0 180 moveto (6389 ) show
0 168 moveto (6390 ) show
0 156 moveto (6391 ) show
0 144 moveto (6392 ) show
0 132 moveto (6393 ) show
0 120 moveto (6394 ) show
0 108 moveto (6395 ) show
0 96 moveto (6396 ) show
0 84 moveto (6397 ) show
0 72 moveto (6398 ) show
0 60 moveto (6399 ) show
0 24 moveto (Sheet 63) show
grestore
restore
showpage
%%Page: 72 72
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/mp.c  Page 1) show
0 648 moveto (6400 // Multiprocessor support) show
0 636 moveto (6401 // Search memory for MP description structures.) show
0 624 moveto (6402 // http://developer.intel.com/design/pentium/datashts/24201606.pdf) show
0 612 moveto (6403 ) show
0 600 moveto (6404 #include "types.h") show
0 588 moveto (6405 #include "defs.h") show
0 576 moveto (6406 #include "param.h") show
0 564 moveto (6407 #include "memlayout.h") show
0 552 moveto (6408 #include "mp.h") show
0 540 moveto (6409 #include "x86.h") show
0 528 moveto (6410 #include "mmu.h") show
0 516 moveto (6411 #include "proc.h") show
0 504 moveto (6412 ) show
0 492 moveto (6413 struct cpu cpus[NCPU];) show
0 480 moveto (6414 static struct cpu *bcpu;) show
0 468 moveto (6415 int ismp;) show
0 456 moveto (6416 int ncpu;) show
0 444 moveto (6417 uchar ioapicid;) show
0 432 moveto (6418 ) show
0 420 moveto (6419 int) show
0 408 moveto (6420 mpbcpu\(void\)) show
0 396 moveto (6421 {) show
0 384 moveto (6422   return bcpu-cpus;) show
0 372 moveto (6423 }) show
0 360 moveto (6424 ) show
0 348 moveto (6425 static uchar) show
0 336 moveto (6426 sum\(uchar *addr, int len\)) show
0 324 moveto (6427 {) show
0 312 moveto (6428   int i, sum;) show
0 300 moveto (6429 ) show
0 288 moveto (6430   sum = 0;) show
0 276 moveto (6431   for\(i=0; i<len; i++\)) show
0 264 moveto (6432     sum += addr[i];) show
0 252 moveto (6433   return sum;) show
0 240 moveto (6434 }) show
0 228 moveto (6435 ) show
0 216 moveto (6436 // Look for an MP structure in the len bytes at addr.) show
0 204 moveto (6437 static struct mp*) show
0 192 moveto (6438 mpsearch1\(uint a, int len\)) show
0 180 moveto (6439 {) show
0 168 moveto (6440   uchar *e, *p, *addr;) show
0 156 moveto (6441 ) show
0 144 moveto (6442   addr = p2v\(a\);) show
0 132 moveto (6443   e = addr+len;) show
0 120 moveto (6444   for\(p = addr; p < e; p += sizeof\(struct mp\)\)) show
0 108 moveto (6445     if\(memcmp\(p, "_MP_", 4\) == 0 && sum\(p, sizeof\(struct mp\)\) == 0\)) show
0 96 moveto (6446       return \(struct mp*\)p;) show
0 84 moveto (6447   return 0;) show
0 72 moveto (6448 }) show
0 60 moveto (6449 ) show
0 24 moveto (Sheet 64) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/mp.c  Page 2) show
0 648 moveto (6450 // Search for the MP Floating Pointer Structure, which according to the) show
0 636 moveto (6451 // spec is in one of the following three locations:) show
0 624 moveto (6452 // 1\) in the first KB of the EBDA;) show
0 612 moveto (6453 // 2\) in the last KB of system base memory;) show
0 600 moveto (6454 // 3\) in the BIOS ROM between 0xE0000 and 0xFFFFF.) show
0 588 moveto (6455 static struct mp*) show
0 576 moveto (6456 mpsearch\(void\)) show
0 564 moveto (6457 {) show
0 552 moveto (6458   uchar *bda;) show
0 540 moveto (6459   uint p;) show
0 528 moveto (6460   struct mp *mp;) show
0 516 moveto (6461 ) show
0 504 moveto (6462   bda = \(uchar *\) P2V\(0x400\);) show
0 492 moveto (6463   if\(\(p = \(\(bda[0x0F]<<8\)| bda[0x0E]\) << 4\)\){) show
0 480 moveto (6464     if\(\(mp = mpsearch1\(p, 1024\)\)\)) show
0 468 moveto (6465       return mp;) show
0 456 moveto (6466   } else {) show
0 444 moveto (6467     p = \(\(bda[0x14]<<8\)|bda[0x13]\)*1024;) show
0 432 moveto (6468     if\(\(mp = mpsearch1\(p-1024, 1024\)\)\)) show
0 420 moveto (6469       return mp;) show
0 408 moveto (6470   }) show
0 396 moveto (6471   return mpsearch1\(0xF0000, 0x10000\);) show
0 384 moveto (6472 }) show
0 372 moveto (6473 ) show
0 360 moveto (6474 // Search for an MP configuration table.  For now,) show
0 348 moveto (6475 // don't accept the default configurations \(physaddr == 0\).) show
0 336 moveto (6476 // Check for correct signature, calculate the checksum and,) show
0 324 moveto (6477 // if correct, check the version.) show
0 312 moveto (6478 // To do: check extended table checksum.) show
0 300 moveto (6479 static struct mpconf*) show
0 288 moveto (6480 mpconfig\(struct mp **pmp\)) show
0 276 moveto (6481 {) show
0 264 moveto (6482   struct mpconf *conf;) show
0 252 moveto (6483   struct mp *mp;) show
0 240 moveto (6484 ) show
0 228 moveto (6485   if\(\(mp = mpsearch\(\)\) == 0 || mp->physaddr == 0\)) show
0 216 moveto (6486     return 0;) show
0 204 moveto (6487   conf = \(struct mpconf*\) p2v\(\(uint\) mp->physaddr\);) show
0 192 moveto (6488   if\(memcmp\(conf, "PCMP", 4\) != 0\)) show
0 180 moveto (6489     return 0;) show
0 168 moveto (6490   if\(conf->version != 1 && conf->version != 4\)) show
0 156 moveto (6491     return 0;) show
0 144 moveto (6492   if\(sum\(\(uchar*\)conf, conf->length\) != 0\)) show
0 132 moveto (6493     return 0;) show
0 120 moveto (6494   *pmp = mp;) show
0 108 moveto (6495   return conf;) show
0 96 moveto (6496 }) show
0 84 moveto (6497 ) show
0 72 moveto (6498 ) show
0 60 moveto (6499 ) show
0 24 moveto (Sheet 64) show
grestore
restore
showpage
%%Page: 73 73
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/mp.c  Page 3) show
0 648 moveto (6500 void) show
0 636 moveto (6501 mpinit\(void\)) show
0 624 moveto (6502 {) show
0 612 moveto (6503   uchar *p, *e;) show
0 600 moveto (6504   struct mp *mp;) show
0 588 moveto (6505   struct mpconf *conf;) show
0 576 moveto (6506   struct mpproc *proc;) show
0 564 moveto (6507   struct mpioapic *ioapic;) show
0 552 moveto (6508 ) show
0 540 moveto (6509   bcpu = &cpus[0];) show
0 528 moveto (6510   if\(\(conf = mpconfig\(&mp\)\) == 0\)) show
0 516 moveto (6511     return;) show
0 504 moveto (6512   ismp = 1;) show
0 492 moveto (6513   lapic = \(uint*\)conf->lapicaddr;) show
0 480 moveto (6514   for\(p=\(uchar*\)\(conf+1\), e=\(uchar*\)conf+conf->length; p<e; \){) show
0 468 moveto (6515     switch\(*p\){) show
0 456 moveto (6516     case MPPROC:) show
0 444 moveto (6517       proc = \(struct mpproc*\)p;) show
0 432 moveto (6518       if\(ncpu != proc->apicid\){) show
0 420 moveto (6519         cprintf\("mpinit: ncpu=%d apicid=%d\\n", ncpu, proc->apicid\);) show
0 408 moveto (6520         ismp = 0;) show
0 396 moveto (6521       }) show
0 384 moveto (6522       if\(proc->flags & MPBOOT\)) show
0 372 moveto (6523         bcpu = &cpus[ncpu];) show
0 360 moveto (6524       cpus[ncpu].id = ncpu;) show
0 348 moveto (6525       ncpu++;) show
0 336 moveto (6526       p += sizeof\(struct mpproc\);) show
0 324 moveto (6527       continue;) show
0 312 moveto (6528     case MPIOAPIC:) show
0 300 moveto (6529       ioapic = \(struct mpioapic*\)p;) show
0 288 moveto (6530       ioapicid = ioapic->apicno;) show
0 276 moveto (6531       p += sizeof\(struct mpioapic\);) show
0 264 moveto (6532       continue;) show
0 252 moveto (6533     case MPBUS:) show
0 240 moveto (6534     case MPIOINTR:) show
0 228 moveto (6535     case MPLINTR:) show
0 216 moveto (6536       p += 8;) show
0 204 moveto (6537       continue;) show
0 192 moveto (6538     default:) show
0 180 moveto (6539       cprintf\("mpinit: unknown config type %x\\n", *p\);) show
0 168 moveto (6540       ismp = 0;) show
0 156 moveto (6541     }) show
0 144 moveto (6542   }) show
0 132 moveto (6543   if\(!ismp\){) show
0 120 moveto (6544     // Didn't like what we found; fall back to no MP.) show
0 108 moveto (6545     ncpu = 1;) show
0 96 moveto (6546     lapic = 0;) show
0 84 moveto (6547     ioapicid = 0;) show
0 72 moveto (6548     return;) show
0 60 moveto (6549   }) show
0 24 moveto (Sheet 65) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/mp.c  Page 4) show
0 648 moveto (6550   if\(mp->imcrp\){) show
0 636 moveto (6551     // Bochs doesn't support IMCR, so this doesn't run on Bochs.) show
0 624 moveto (6552     // But it would on real hardware.) show
0 612 moveto (6553     outb\(0x22, 0x70\);   // Select IMCR) show
0 600 moveto (6554     outb\(0x23, inb\(0x23\) | 1\);  // Mask external interrupts.) show
0 588 moveto (6555   }) show
0 576 moveto (6556 }) show
0 564 moveto (6557 ) show
0 552 moveto (6558 ) show
0 540 moveto (6559 ) show
0 528 moveto (6560 ) show
0 516 moveto (6561 ) show
0 504 moveto (6562 ) show
0 492 moveto (6563 ) show
0 480 moveto (6564 ) show
0 468 moveto (6565 ) show
0 456 moveto (6566 ) show
0 444 moveto (6567 ) show
0 432 moveto (6568 ) show
0 420 moveto (6569 ) show
0 408 moveto (6570 ) show
0 396 moveto (6571 ) show
0 384 moveto (6572 ) show
0 372 moveto (6573 ) show
0 360 moveto (6574 ) show
0 348 moveto (6575 ) show
0 336 moveto (6576 ) show
0 324 moveto (6577 ) show
0 312 moveto (6578 ) show
0 300 moveto (6579 ) show
0 288 moveto (6580 ) show
0 276 moveto (6581 ) show
0 264 moveto (6582 ) show
0 252 moveto (6583 ) show
0 240 moveto (6584 ) show
0 228 moveto (6585 ) show
0 216 moveto (6586 ) show
0 204 moveto (6587 ) show
0 192 moveto (6588 ) show
0 180 moveto (6589 ) show
0 168 moveto (6590 ) show
0 156 moveto (6591 ) show
0 144 moveto (6592 ) show
0 132 moveto (6593 ) show
0 120 moveto (6594 ) show
0 108 moveto (6595 ) show
0 96 moveto (6596 ) show
0 84 moveto (6597 ) show
0 72 moveto (6598 ) show
0 60 moveto (6599 ) show
0 24 moveto (Sheet 65) show
grestore
restore
showpage
%%Page: 74 74
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/lapic.c  Page 1) show
0 648 moveto (6600 // The local APIC manages internal \(non-I/O\) interrupts.) show
0 636 moveto (6601 // See Chapter 8 & Appendix C of Intel processor manual volume 3.) show
0 624 moveto (6602 ) show
0 612 moveto (6603 #include "types.h") show
0 600 moveto (6604 #include "defs.h") show
0 588 moveto (6605 #include "memlayout.h") show
0 576 moveto (6606 #include "traps.h") show
0 564 moveto (6607 #include "mmu.h") show
0 552 moveto (6608 #include "x86.h") show
0 540 moveto (6609 ) show
0 528 moveto (6610 // Local APIC registers, divided by 4 for use as uint[] indices.) show
0 516 moveto (6611 #define ID      \(0x0020/4\)   // ID) show
0 504 moveto (6612 #define VER     \(0x0030/4\)   // Version) show
0 492 moveto (6613 #define TPR     \(0x0080/4\)   // Task Priority) show
0 480 moveto (6614 #define EOI     \(0x00B0/4\)   // EOI) show
0 468 moveto (6615 #define SVR     \(0x00F0/4\)   // Spurious Interrupt Vector) show
0 456 moveto (6616   #define ENABLE     0x00000100   // Unit Enable) show
0 444 moveto (6617 #define ESR     \(0x0280/4\)   // Error Status) show
0 432 moveto (6618 #define ICRLO   \(0x0300/4\)   // Interrupt Command) show
0 420 moveto (6619   #define INIT       0x00000500   // INIT/RESET) show
0 408 moveto (6620   #define STARTUP    0x00000600   // Startup IPI) show
0 396 moveto (6621   #define DELIVS     0x00001000   // Delivery status) show
0 384 moveto (6622   #define ASSERT     0x00004000   // Assert interrupt \(vs deassert\)) show
0 372 moveto (6623   #define DEASSERT   0x00000000) show
0 360 moveto (6624   #define LEVEL      0x00008000   // Level triggered) show
0 348 moveto (6625   #define BCAST      0x00080000   // Send to all APICs, including self.) show
0 336 moveto (6626   #define BUSY       0x00001000) show
0 324 moveto (6627   #define FIXED      0x00000000) show
0 312 moveto (6628 #define ICRHI   \(0x0310/4\)   // Interrupt Command [63:32]) show
0 300 moveto (6629 #define TIMER   \(0x0320/4\)   // Local Vector Table 0 \(TIMER\)) show
0 288 moveto (6630   #define X1         0x0000000B   // divide counts by 1) show
0 276 moveto (6631   #define PERIODIC   0x00020000   // Periodic) show
0 264 moveto (6632 #define PCINT   \(0x0340/4\)   // Performance Counter LVT) show
0 252 moveto (6633 #define LINT0   \(0x0350/4\)   // Local Vector Table 1 \(LINT0\)) show
0 240 moveto (6634 #define LINT1   \(0x0360/4\)   // Local Vector Table 2 \(LINT1\)) show
0 228 moveto (6635 #define ERROR   \(0x0370/4\)   // Local Vector Table 3 \(ERROR\)) show
0 216 moveto (6636   #define MASKED     0x00010000   // Interrupt masked) show
0 204 moveto (6637 #define TICR    \(0x0380/4\)   // Timer Initial Count) show
0 192 moveto (6638 #define TCCR    \(0x0390/4\)   // Timer Current Count) show
0 180 moveto (6639 #define TDCR    \(0x03E0/4\)   // Timer Divide Configuration) show
0 168 moveto (6640 ) show
0 156 moveto (6641 volatile uint *lapic;  // Initialized in mp.c) show
0 144 moveto (6642 ) show
0 132 moveto (6643 static void) show
0 120 moveto (6644 lapicw\(int index, int value\)) show
0 108 moveto (6645 {) show
0 96 moveto (6646   lapic[index] = value;) show
0 84 moveto (6647   lapic[ID];  // wait for write to finish, by reading) show
0 72 moveto (6648 }) show
0 60 moveto (6649 ) show
0 24 moveto (Sheet 66) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/lapic.c  Page 2) show
0 648 moveto (6650 void) show
0 636 moveto (6651 lapicinit\(void\)) show
0 624 moveto (6652 {) show
0 612 moveto (6653   if\(!lapic\)) show
0 600 moveto (6654     return;) show
0 588 moveto (6655 ) show
0 576 moveto (6656   // Enable local APIC; set spurious interrupt vector.) show
0 564 moveto (6657   lapicw\(SVR, ENABLE | \(T_IRQ0 + IRQ_SPURIOUS\)\);) show
0 552 moveto (6658 ) show
0 540 moveto (6659   // The timer repeatedly counts down at bus frequency) show
0 528 moveto (6660   // from lapic[TICR] and then issues an interrupt.) show
0 516 moveto (6661   // If xv6 cared more about precise timekeeping,) show
0 504 moveto (6662   // TICR would be calibrated using an external time source.) show
0 492 moveto (6663   lapicw\(TDCR, X1\);) show
0 480 moveto (6664   lapicw\(TIMER, PERIODIC | \(T_IRQ0 + IRQ_TIMER\)\);) show
0 468 moveto (6665   lapicw\(TICR, 10000000\);) show
0 456 moveto (6666 ) show
0 444 moveto (6667   // Disable logical interrupt lines.) show
0 432 moveto (6668   lapicw\(LINT0, MASKED\);) show
0 420 moveto (6669   lapicw\(LINT1, MASKED\);) show
0 408 moveto (6670 ) show
0 396 moveto (6671   // Disable performance counter overflow interrupts) show
0 384 moveto (6672   // on machines that provide that interrupt entry.) show
0 372 moveto (6673   if\(\(\(lapic[VER]>>16\) & 0xFF\) >= 4\)) show
0 360 moveto (6674     lapicw\(PCINT, MASKED\);) show
0 348 moveto (6675 ) show
0 336 moveto (6676   // Map error interrupt to IRQ_ERROR.) show
0 324 moveto (6677   lapicw\(ERROR, T_IRQ0 + IRQ_ERROR\);) show
0 312 moveto (6678 ) show
0 300 moveto (6679   // Clear error status register \(requires back-to-back writes\).) show
0 288 moveto (6680   lapicw\(ESR, 0\);) show
0 276 moveto (6681   lapicw\(ESR, 0\);) show
0 264 moveto (6682 ) show
0 252 moveto (6683   // Ack any outstanding interrupts.) show
0 240 moveto (6684   lapicw\(EOI, 0\);) show
0 228 moveto (6685 ) show
0 216 moveto (6686   // Send an Init Level De-Assert to synchronise arbitration ID's.) show
0 204 moveto (6687   lapicw\(ICRHI, 0\);) show
0 192 moveto (6688   lapicw\(ICRLO, BCAST | INIT | LEVEL\);) show
0 180 moveto (6689   while\(lapic[ICRLO] & DELIVS\)) show
0 168 moveto (6690     ;) show
0 156 moveto (6691 ) show
0 144 moveto (6692   // Enable interrupts on the APIC \(but not on the processor\).) show
0 132 moveto (6693   lapicw\(TPR, 0\);) show
0 120 moveto (6694 }) show
0 108 moveto (6695 ) show
0 96 moveto (6696 ) show
0 84 moveto (6697 ) show
0 72 moveto (6698 ) show
0 60 moveto (6699 ) show
0 24 moveto (Sheet 66) show
grestore
restore
showpage
%%Page: 75 75
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/lapic.c  Page 3) show
0 648 moveto (6700 int) show
0 636 moveto (6701 cpunum\(void\)) show
0 624 moveto (6702 {) show
0 612 moveto (6703   // Cannot call cpu when interrupts are enabled:) show
0 600 moveto (6704   // result not guaranteed to last long enough to be used!) show
0 588 moveto (6705   // Would prefer to panic but even printing is chancy here:) show
0 576 moveto (6706   // almost everything, including cprintf and panic, calls cpu,) show
0 564 moveto (6707   // often indirectly through acquire and release.) show
0 552 moveto (6708   if\(readeflags\(\)&FL_IF\){) show
0 540 moveto (6709     static int n;) show
0 528 moveto (6710     if\(n++ == 0\)) show
0 516 moveto (6711       cprintf\("cpu called from %x with interrupts enabled\\n",) show
0 504 moveto (6712         __builtin_return_address\(0\)\);) show
0 492 moveto (6713   }) show
0 480 moveto (6714 ) show
0 468 moveto (6715   if\(lapic\)) show
0 456 moveto (6716     return lapic[ID]>>24;) show
0 444 moveto (6717   return 0;) show
0 432 moveto (6718 }) show
0 420 moveto (6719 ) show
0 408 moveto (6720 // Acknowledge interrupt.) show
0 396 moveto (6721 void) show
0 384 moveto (6722 lapiceoi\(void\)) show
0 372 moveto (6723 {) show
0 360 moveto (6724   if\(lapic\)) show
0 348 moveto (6725     lapicw\(EOI, 0\);) show
0 336 moveto (6726 }) show
0 324 moveto (6727 ) show
0 312 moveto (6728 // Spin for a given number of microseconds.) show
0 300 moveto (6729 // On real hardware would want to tune this dynamically.) show
0 288 moveto (6730 void) show
0 276 moveto (6731 microdelay\(int us\)) show
0 264 moveto (6732 {) show
0 252 moveto (6733 }) show
0 240 moveto (6734 ) show
0 228 moveto (6735 #define IO_RTC  0x70) show
0 216 moveto (6736 ) show
0 204 moveto (6737 // Start additional processor running entry code at addr.) show
0 192 moveto (6738 // See Appendix B of MultiProcessor Specification.) show
0 180 moveto (6739 void) show
0 168 moveto (6740 lapicstartap\(uchar apicid, uint addr\)) show
0 156 moveto (6741 {) show
0 144 moveto (6742   int i;) show
0 132 moveto (6743   ushort *wrv;) show
0 120 moveto (6744 ) show
0 108 moveto (6745   // "The BSP must initialize CMOS shutdown code to 0AH) show
0 96 moveto (6746   // and the warm reset vector \(DWORD based at 40:67\) to point at) show
0 84 moveto (6747   // the AP startup code prior to the [universal startup algorithm].") show
0 72 moveto (6748   outb\(IO_RTC, 0xF\);  // offset 0xF is shutdown code) show
0 60 moveto (6749   outb\(IO_RTC+1, 0x0A\);) show
0 24 moveto (Sheet 67) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/lapic.c  Page 4) show
0 648 moveto (6750   wrv = \(ushort*\)P2V\(\(0x40<<4 | 0x67\)\);  // Warm reset vector) show
0 636 moveto (6751   wrv[0] = 0;) show
0 624 moveto (6752   wrv[1] = addr >> 4;) show
0 612 moveto (6753 ) show
0 600 moveto (6754   // "Universal startup algorithm.") show
0 588 moveto (6755   // Send INIT \(level-triggered\) interrupt to reset other CPU.) show
0 576 moveto (6756   lapicw\(ICRHI, apicid<<24\);) show
0 564 moveto (6757   lapicw\(ICRLO, INIT | LEVEL | ASSERT\);) show
0 552 moveto (6758   microdelay\(200\);) show
0 540 moveto (6759   lapicw\(ICRLO, INIT | LEVEL\);) show
0 528 moveto (6760   microdelay\(100\);    // should be 10ms, but too slow in Bochs!) show
0 516 moveto (6761 ) show
0 504 moveto (6762   // Send startup IPI \(twice!\) to enter code.) show
0 492 moveto (6763   // Regular hardware is supposed to only accept a STARTUP) show
0 480 moveto (6764   // when it is in the halted state due to an INIT.  So the second) show
0 468 moveto (6765   // should be ignored, but it is part of the official Intel algorithm.) show
0 456 moveto (6766   // Bochs complains about the second one.  Too bad for Bochs.) show
0 444 moveto (6767   for\(i = 0; i < 2; i++\){) show
0 432 moveto (6768     lapicw\(ICRHI, apicid<<24\);) show
0 420 moveto (6769     lapicw\(ICRLO, STARTUP | \(addr>>12\)\);) show
0 408 moveto (6770     microdelay\(200\);) show
0 396 moveto (6771   }) show
0 384 moveto (6772 }) show
0 372 moveto (6773 ) show
0 360 moveto (6774 ) show
0 348 moveto (6775 ) show
0 336 moveto (6776 ) show
0 324 moveto (6777 ) show
0 312 moveto (6778 ) show
0 300 moveto (6779 ) show
0 288 moveto (6780 ) show
0 276 moveto (6781 ) show
0 264 moveto (6782 ) show
0 252 moveto (6783 ) show
0 240 moveto (6784 ) show
0 228 moveto (6785 ) show
0 216 moveto (6786 ) show
0 204 moveto (6787 ) show
0 192 moveto (6788 ) show
0 180 moveto (6789 ) show
0 168 moveto (6790 ) show
0 156 moveto (6791 ) show
0 144 moveto (6792 ) show
0 132 moveto (6793 ) show
0 120 moveto (6794 ) show
0 108 moveto (6795 ) show
0 96 moveto (6796 ) show
0 84 moveto (6797 ) show
0 72 moveto (6798 ) show
0 60 moveto (6799 ) show
0 24 moveto (Sheet 67) show
grestore
restore
showpage
%%Page: 76 76
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/ioapic.c  Page 1) show
0 648 moveto (6800 // The I/O APIC manages hardware interrupts for an SMP system.) show
0 636 moveto (6801 // http://www.intel.com/design/chipsets/datashts/29056601.pdf) show
0 624 moveto (6802 // See also picirq.c.) show
0 612 moveto (6803 ) show
0 600 moveto (6804 #include "types.h") show
0 588 moveto (6805 #include "defs.h") show
0 576 moveto (6806 #include "traps.h") show
0 564 moveto (6807 ) show
0 552 moveto (6808 #define IOAPIC  0xFEC00000   // Default physical address of IO APIC) show
0 540 moveto (6809 ) show
0 528 moveto (6810 #define REG_ID     0x00  // Register index: ID) show
0 516 moveto (6811 #define REG_VER    0x01  // Register index: version) show
0 504 moveto (6812 #define REG_TABLE  0x10  // Redirection table base) show
0 492 moveto (6813 ) show
0 480 moveto (6814 // The redirection table starts at REG_TABLE and uses) show
0 468 moveto (6815 // two registers to configure each interrupt.) show
0 456 moveto (6816 // The first \(low\) register in a pair contains configuration bits.) show
0 444 moveto (6817 // The second \(high\) register contains a bitmask telling which) show
0 432 moveto (6818 // CPUs can serve that interrupt.) show
0 420 moveto (6819 #define INT_DISABLED   0x00010000  // Interrupt disabled) show
0 408 moveto (6820 #define INT_LEVEL      0x00008000  // Level-triggered \(vs edge-\)) show
0 396 moveto (6821 #define INT_ACTIVELOW  0x00002000  // Active low \(vs high\)) show
0 384 moveto (6822 #define INT_LOGICAL    0x00000800  // Destination is CPU id \(vs APIC ID\)) show
0 372 moveto (6823 ) show
0 360 moveto (6824 volatile struct ioapic *ioapic;) show
0 348 moveto (6825 ) show
0 336 moveto (6826 // IO APIC MMIO structure: write reg, then read or write data.) show
0 324 moveto (6827 struct ioapic {) show
0 312 moveto (6828   uint reg;) show
0 300 moveto (6829   uint pad[3];) show
0 288 moveto (6830   uint data;) show
0 276 moveto (6831 };) show
0 264 moveto (6832 ) show
0 252 moveto (6833 static uint) show
0 240 moveto (6834 ioapicread\(int reg\)) show
0 228 moveto (6835 {) show
0 216 moveto (6836   ioapic->reg = reg;) show
0 204 moveto (6837   return ioapic->data;) show
0 192 moveto (6838 }) show
0 180 moveto (6839 ) show
0 168 moveto (6840 static void) show
0 156 moveto (6841 ioapicwrite\(int reg, uint data\)) show
0 144 moveto (6842 {) show
0 132 moveto (6843   ioapic->reg = reg;) show
0 120 moveto (6844   ioapic->data = data;) show
0 108 moveto (6845 }) show
0 96 moveto (6846 ) show
0 84 moveto (6847 ) show
0 72 moveto (6848 ) show
0 60 moveto (6849 ) show
0 24 moveto (Sheet 68) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/ioapic.c  Page 2) show
0 648 moveto (6850 void) show
0 636 moveto (6851 ioapicinit\(void\)) show
0 624 moveto (6852 {) show
0 612 moveto (6853   int i, id, maxintr;) show
0 600 moveto (6854 ) show
0 588 moveto (6855   if\(!ismp\)) show
0 576 moveto (6856     return;) show
0 564 moveto (6857 ) show
0 552 moveto (6858   ioapic = \(volatile struct ioapic*\)IOAPIC;) show
0 540 moveto (6859   maxintr = \(ioapicread\(REG_VER\) >> 16\) & 0xFF;) show
0 528 moveto (6860   id = ioapicread\(REG_ID\) >> 24;) show
0 516 moveto (6861   if\(id != ioapicid\)) show
0 504 moveto (6862     cprintf\("ioapicinit: id isn't equal to ioapicid; not a MP\\n"\);) show
0 492 moveto (6863 ) show
0 480 moveto (6864   // Mark all interrupts edge-triggered, active high, disabled,) show
0 468 moveto (6865   // and not routed to any CPUs.) show
0 456 moveto (6866   for\(i = 0; i <= maxintr; i++\){) show
0 444 moveto (6867     ioapicwrite\(REG_TABLE+2*i, INT_DISABLED | \(T_IRQ0 + i\)\);) show
0 432 moveto (6868     ioapicwrite\(REG_TABLE+2*i+1, 0\);) show
0 420 moveto (6869   }) show
0 408 moveto (6870 }) show
0 396 moveto (6871 ) show
0 384 moveto (6872 void) show
0 372 moveto (6873 ioapicenable\(int irq, int cpunum\)) show
0 360 moveto (6874 {) show
0 348 moveto (6875   if\(!ismp\)) show
0 336 moveto (6876     return;) show
0 324 moveto (6877 ) show
0 312 moveto (6878   // Mark interrupt edge-triggered, active high,) show
0 300 moveto (6879   // enabled, and routed to the given cpunum,) show
0 288 moveto (6880   // which happens to be that cpu's APIC ID.) show
0 276 moveto (6881   ioapicwrite\(REG_TABLE+2*irq, T_IRQ0 + irq\);) show
0 264 moveto (6882   ioapicwrite\(REG_TABLE+2*irq+1, cpunum << 24\);) show
0 252 moveto (6883 }) show
0 240 moveto (6884 ) show
0 228 moveto (6885 ) show
0 216 moveto (6886 ) show
0 204 moveto (6887 ) show
0 192 moveto (6888 ) show
0 180 moveto (6889 ) show
0 168 moveto (6890 ) show
0 156 moveto (6891 ) show
0 144 moveto (6892 ) show
0 132 moveto (6893 ) show
0 120 moveto (6894 ) show
0 108 moveto (6895 ) show
0 96 moveto (6896 ) show
0 84 moveto (6897 ) show
0 72 moveto (6898 ) show
0 60 moveto (6899 ) show
0 24 moveto (Sheet 68) show
grestore
restore
showpage
%%Page: 77 77
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/picirq.c  Page 1) show
0 648 moveto (6900 // Intel 8259A programmable interrupt controllers.) show
0 636 moveto (6901 ) show
0 624 moveto (6902 #include "types.h") show
0 612 moveto (6903 #include "x86.h") show
0 600 moveto (6904 #include "traps.h") show
0 588 moveto (6905 ) show
0 576 moveto (6906 // I/O Addresses of the two programmable interrupt controllers) show
0 564 moveto (6907 #define IO_PIC1         0x20    // Master \(IRQs 0-7\)) show
0 552 moveto (6908 #define IO_PIC2         0xA0    // Slave \(IRQs 8-15\)) show
0 540 moveto (6909 ) show
0 528 moveto (6910 #define IRQ_SLAVE       2       // IRQ at which slave connects to master) show
0 516 moveto (6911 ) show
0 504 moveto (6912 // Current IRQ mask.) show
0 492 moveto (6913 // Initial IRQ mask has interrupt 2 enabled \(for slave 8259A\).) show
0 480 moveto (6914 static ushort irqmask = 0xFFFF & ~\(1<<IRQ_SLAVE\);) show
0 468 moveto (6915 ) show
0 456 moveto (6916 static void) show
0 444 moveto (6917 picsetmask\(ushort mask\)) show
0 432 moveto (6918 {) show
0 420 moveto (6919   irqmask = mask;) show
0 408 moveto (6920   outb\(IO_PIC1+1, mask\);) show
0 396 moveto (6921   outb\(IO_PIC2+1, mask >> 8\);) show
0 384 moveto (6922 }) show
0 372 moveto (6923 ) show
0 360 moveto (6924 void) show
0 348 moveto (6925 picenable\(int irq\)) show
0 336 moveto (6926 {) show
0 324 moveto (6927   picsetmask\(irqmask & ~\(1<<irq\)\);) show
0 312 moveto (6928 }) show
0 300 moveto (6929 ) show
0 288 moveto (6930 // Initialize the 8259A interrupt controllers.) show
0 276 moveto (6931 void) show
0 264 moveto (6932 picinit\(void\)) show
0 252 moveto (6933 {) show
0 240 moveto (6934   // mask all interrupts) show
0 228 moveto (6935   outb\(IO_PIC1+1, 0xFF\);) show
0 216 moveto (6936   outb\(IO_PIC2+1, 0xFF\);) show
0 204 moveto (6937 ) show
0 192 moveto (6938   // Set up master \(8259A-1\)) show
0 180 moveto (6939 ) show
0 168 moveto (6940   // ICW1:  0001g0hi) show
0 156 moveto (6941   //    g:  0 = edge triggering, 1 = level triggering) show
0 144 moveto (6942   //    h:  0 = cascaded PICs, 1 = master only) show
0 132 moveto (6943   //    i:  0 = no ICW4, 1 = ICW4 required) show
0 120 moveto (6944   outb\(IO_PIC1, 0x11\);) show
0 108 moveto (6945 ) show
0 96 moveto (6946   // ICW2:  Vector offset) show
0 84 moveto (6947   outb\(IO_PIC1+1, T_IRQ0\);) show
0 72 moveto (6948 ) show
0 60 moveto (6949 ) show
0 24 moveto (Sheet 69) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/picirq.c  Page 2) show
0 648 moveto (6950   // ICW3:  \(master PIC\) bit mask of IR lines connected to slaves) show
0 636 moveto (6951   //        \(slave PIC\) 3-bit # of slave's connection to master) show
0 624 moveto (6952   outb\(IO_PIC1+1, 1<<IRQ_SLAVE\);) show
0 612 moveto (6953 ) show
0 600 moveto (6954   // ICW4:  000nbmap) show
0 588 moveto (6955   //    n:  1 = special fully nested mode) show
0 576 moveto (6956   //    b:  1 = buffered mode) show
0 564 moveto (6957   //    m:  0 = slave PIC, 1 = master PIC) show
0 552 moveto (6958   //      \(ignored when b is 0, as the master/slave role) show
0 540 moveto (6959   //      can be hardwired\).) show
0 528 moveto (6960   //    a:  1 = Automatic EOI mode) show
0 516 moveto (6961   //    p:  0 = MCS-80/85 mode, 1 = intel x86 mode) show
0 504 moveto (6962   outb\(IO_PIC1+1, 0x3\);) show
0 492 moveto (6963 ) show
0 480 moveto (6964   // Set up slave \(8259A-2\)) show
0 468 moveto (6965   outb\(IO_PIC2, 0x11\);                  // ICW1) show
0 456 moveto (6966   outb\(IO_PIC2+1, T_IRQ0 + 8\);      // ICW2) show
0 444 moveto (6967   outb\(IO_PIC2+1, IRQ_SLAVE\);           // ICW3) show
0 432 moveto (6968   // NB Automatic EOI mode doesn't tend to work on the slave.) show
0 420 moveto (6969   // Linux source code says it's "to be investigated".) show
0 408 moveto (6970   outb\(IO_PIC2+1, 0x3\);                 // ICW4) show
0 396 moveto (6971 ) show
0 384 moveto (6972   // OCW3:  0ef01prs) show
0 372 moveto (6973   //   ef:  0x = NOP, 10 = clear specific mask, 11 = set specific mask) show
0 360 moveto (6974   //    p:  0 = no polling, 1 = polling mode) show
0 348 moveto (6975   //   rs:  0x = NOP, 10 = read IRR, 11 = read ISR) show
0 336 moveto (6976   outb\(IO_PIC1, 0x68\);             // clear specific mask) show
0 324 moveto (6977   outb\(IO_PIC1, 0x0a\);             // read IRR by default) show
0 312 moveto (6978 ) show
0 300 moveto (6979   outb\(IO_PIC2, 0x68\);             // OCW3) show
0 288 moveto (6980   outb\(IO_PIC2, 0x0a\);             // OCW3) show
0 276 moveto (6981 ) show
0 264 moveto (6982   if\(irqmask != 0xFFFF\)) show
0 252 moveto (6983     picsetmask\(irqmask\);) show
0 240 moveto (6984 }) show
0 228 moveto (6985 ) show
0 216 moveto (6986 ) show
0 204 moveto (6987 ) show
0 192 moveto (6988 ) show
0 180 moveto (6989 ) show
0 168 moveto (6990 ) show
0 156 moveto (6991 ) show
0 144 moveto (6992 ) show
0 132 moveto (6993 ) show
0 120 moveto (6994 ) show
0 108 moveto (6995 ) show
0 96 moveto (6996 ) show
0 84 moveto (6997 ) show
0 72 moveto (6998 ) show
0 60 moveto (6999 ) show
0 24 moveto (Sheet 69) show
grestore
restore
showpage
%%Page: 78 78
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/kbd.h  Page 1) show
0 648 moveto (7000 // PC keyboard interface constants) show
0 636 moveto (7001 ) show
0 624 moveto (7002 #define KBSTATP         0x64    // kbd controller status port\(I\)) show
0 612 moveto (7003 #define KBS_DIB         0x01    // kbd data in buffer) show
0 600 moveto (7004 #define KBDATAP         0x60    // kbd data port\(I\)) show
0 588 moveto (7005 ) show
0 576 moveto (7006 #define NO              0) show
0 564 moveto (7007 ) show
0 552 moveto (7008 #define SHIFT           \(1<<0\)) show
0 540 moveto (7009 #define CTL             \(1<<1\)) show
0 528 moveto (7010 #define ALT             \(1<<2\)) show
0 516 moveto (7011 ) show
0 504 moveto (7012 #define CAPSLOCK        \(1<<3\)) show
0 492 moveto (7013 #define NUMLOCK         \(1<<4\)) show
0 480 moveto (7014 #define SCROLLLOCK      \(1<<5\)) show
0 468 moveto (7015 ) show
0 456 moveto (7016 #define E0ESC           \(1<<6\)) show
0 444 moveto (7017 ) show
0 432 moveto (7018 // Special keycodes) show
0 420 moveto (7019 #define KEY_HOME        0xE0) show
0 408 moveto (7020 #define KEY_END         0xE1) show
0 396 moveto (7021 #define KEY_UP          0xE2) show
0 384 moveto (7022 #define KEY_DN          0xE3) show
0 372 moveto (7023 #define KEY_LF          0xE4) show
0 360 moveto (7024 #define KEY_RT          0xE5) show
0 348 moveto (7025 #define KEY_PGUP        0xE6) show
0 336 moveto (7026 #define KEY_PGDN        0xE7) show
0 324 moveto (7027 #define KEY_INS         0xE8) show
0 312 moveto (7028 #define KEY_DEL         0xE9) show
0 300 moveto (7029 ) show
0 288 moveto (7030 // C\('A'\) == Control-A) show
0 276 moveto (7031 #define C\(x\) \(x - '@'\)) show
0 264 moveto (7032 ) show
0 252 moveto (7033 static uchar shiftcode[256] =) show
0 240 moveto (7034 {) show
0 228 moveto (7035   [0x1D] CTL,) show
0 216 moveto (7036   [0x2A] SHIFT,) show
0 204 moveto (7037   [0x36] SHIFT,) show
0 192 moveto (7038   [0x38] ALT,) show
0 180 moveto (7039   [0x9D] CTL,) show
0 168 moveto (7040   [0xB8] ALT) show
0 156 moveto (7041 };) show
0 144 moveto (7042 ) show
0 132 moveto (7043 static uchar togglecode[256] =) show
0 120 moveto (7044 {) show
0 108 moveto (7045   [0x3A] CAPSLOCK,) show
0 96 moveto (7046   [0x45] NUMLOCK,) show
0 84 moveto (7047   [0x46] SCROLLLOCK) show
0 72 moveto (7048 };) show
0 60 moveto (7049 ) show
0 24 moveto (Sheet 70) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/kbd.h  Page 2) show
0 648 moveto (7050 static uchar normalmap[256] =) show
0 636 moveto (7051 {) show
0 624 moveto (7052   NO,   0x1B, '1',  '2',  '3',  '4',  '5',  '6',  // 0x00) show
0 612 moveto (7053   '7',  '8',  '9',  '0',  '-',  '=',  '\\b', '\\t',) show
0 600 moveto (7054   'q',  'w',  'e',  'r',  't',  'y',  'u',  'i',  // 0x10) show
0 588 moveto (7055   'o',  'p',  '[',  ']',  '\\n', NO,   'a',  's',) show
0 576 moveto (7056   'd',  'f',  'g',  'h',  'j',  'k',  'l',  ';',  // 0x20) show
0 564 moveto (7057   '\\'', '`',  NO,   '\\\\', 'z',  'x',  'c',  'v',) show
0 552 moveto (7058   'b',  'n',  'm',  ',',  '.',  '/',  NO,   '*',  // 0x30) show
0 540 moveto (7059   NO,   ' ',  NO,   NO,   NO,   NO,   NO,   NO,) show
0 528 moveto (7060   NO,   NO,   NO,   NO,   NO,   NO,   NO,   '7',  // 0x40) show
0 516 moveto (7061   '8',  '9',  '-',  '4',  '5',  '6',  '+',  '1',) show
0 504 moveto (7062   '2',  '3',  '0',  '.',  NO,   NO,   NO,   NO,   // 0x50) show
0 492 moveto (7063   [0x9C] '\\n',      // KP_Enter) show
0 480 moveto (7064   [0xB5] '/',       // KP_Div) show
0 468 moveto (7065   [0xC8] KEY_UP,    [0xD0] KEY_DN,) show
0 456 moveto (7066   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) show
0 444 moveto (7067   [0xCB] KEY_LF,    [0xCD] KEY_RT,) show
0 432 moveto (7068   [0x97] KEY_HOME,  [0xCF] KEY_END,) show
0 420 moveto (7069   [0xD2] KEY_INS,   [0xD3] KEY_DEL) show
0 408 moveto (7070 };) show
0 396 moveto (7071 ) show
0 384 moveto (7072 static uchar shiftmap[256] =) show
0 372 moveto (7073 {) show
0 360 moveto (7074   NO,   033,  '!',  '@',  '#',  '$',  '%',  '^',  // 0x00) show
0 348 moveto (7075   '&',  '*',  '\(',  '\)',  '_',  '+',  '\\b', '\\t',) show
0 336 moveto (7076   'Q',  'W',  'E',  'R',  'T',  'Y',  'U',  'I',  // 0x10) show
0 324 moveto (7077   'O',  'P',  '{',  '}',  '\\n', NO,   'A',  'S',) show
0 312 moveto (7078   'D',  'F',  'G',  'H',  'J',  'K',  'L',  ':',  // 0x20) show
0 300 moveto (7079   '"',  '~',  NO,   '|',  'Z',  'X',  'C',  'V',) show
0 288 moveto (7080   'B',  'N',  'M',  '<',  '>',  '?',  NO,   '*',  // 0x30) show
0 276 moveto (7081   NO,   ' ',  NO,   NO,   NO,   NO,   NO,   NO,) show
0 264 moveto (7082   NO,   NO,   NO,   NO,   NO,   NO,   NO,   '7',  // 0x40) show
0 252 moveto (7083   '8',  '9',  '-',  '4',  '5',  '6',  '+',  '1',) show
0 240 moveto (7084   '2',  '3',  '0',  '.',  NO,   NO,   NO,   NO,   // 0x50) show
0 228 moveto (7085   [0x9C] '\\n',      // KP_Enter) show
0 216 moveto (7086   [0xB5] '/',       // KP_Div) show
0 204 moveto (7087   [0xC8] KEY_UP,    [0xD0] KEY_DN,) show
0 192 moveto (7088   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) show
0 180 moveto (7089   [0xCB] KEY_LF,    [0xCD] KEY_RT,) show
0 168 moveto (7090   [0x97] KEY_HOME,  [0xCF] KEY_END,) show
0 156 moveto (7091   [0xD2] KEY_INS,   [0xD3] KEY_DEL) show
0 144 moveto (7092 };) show
0 132 moveto (7093 ) show
0 120 moveto (7094 ) show
0 108 moveto (7095 ) show
0 96 moveto (7096 ) show
0 84 moveto (7097 ) show
0 72 moveto (7098 ) show
0 60 moveto (7099 ) show
0 24 moveto (Sheet 70) show
grestore
restore
showpage
%%Page: 79 79
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/kbd.h  Page 3) show
0 648 moveto (7100 static uchar ctlmap[256] =) show
0 636 moveto (7101 {) show
0 624 moveto (7102   NO,      NO,      NO,      NO,      NO,      NO,      NO,      NO,) show
0 612 moveto (7103   NO,      NO,      NO,      NO,      NO,      NO,      NO,      NO,) show
0 600 moveto (7104   C\('Q'\),  C\('W'\),  C\('E'\),  C\('R'\),  C\('T'\),  C\('Y'\),  C\('U'\),  C\('I'\),) show
0 588 moveto (7105   C\('O'\),  C\('P'\),  NO,      NO,      '\\r',    NO,      C\('A'\),  C\('S'\),) show
0 576 moveto (7106   C\('D'\),  C\('F'\),  C\('G'\),  C\('H'\),  C\('J'\),  C\('K'\),  C\('L'\),  NO,) show
0 564 moveto (7107   NO,      NO,      NO,      C\('\\\\'\), C\('Z'\),  C\('X'\),  C\('C'\),  C\('V'\),) show
0 552 moveto (7108   C\('B'\),  C\('N'\),  C\('M'\),  NO,      NO,      C\('/'\),  NO,      NO,) show
0 540 moveto (7109   [0x9C] '\\r',      // KP_Enter) show
0 528 moveto (7110   [0xB5] C\('/'\),    // KP_Div) show
0 516 moveto (7111   [0xC8] KEY_UP,    [0xD0] KEY_DN,) show
0 504 moveto (7112   [0xC9] KEY_PGUP,  [0xD1] KEY_PGDN,) show
0 492 moveto (7113   [0xCB] KEY_LF,    [0xCD] KEY_RT,) show
0 480 moveto (7114   [0x97] KEY_HOME,  [0xCF] KEY_END,) show
0 468 moveto (7115   [0xD2] KEY_INS,   [0xD3] KEY_DEL) show
0 456 moveto (7116 };) show
0 444 moveto (7117 ) show
0 432 moveto (7118 ) show
0 420 moveto (7119 ) show
0 408 moveto (7120 ) show
0 396 moveto (7121 ) show
0 384 moveto (7122 ) show
0 372 moveto (7123 ) show
0 360 moveto (7124 ) show
0 348 moveto (7125 ) show
0 336 moveto (7126 ) show
0 324 moveto (7127 ) show
0 312 moveto (7128 ) show
0 300 moveto (7129 ) show
0 288 moveto (7130 ) show
0 276 moveto (7131 ) show
0 264 moveto (7132 ) show
0 252 moveto (7133 ) show
0 240 moveto (7134 ) show
0 228 moveto (7135 ) show
0 216 moveto (7136 ) show
0 204 moveto (7137 ) show
0 192 moveto (7138 ) show
0 180 moveto (7139 ) show
0 168 moveto (7140 ) show
0 156 moveto (7141 ) show
0 144 moveto (7142 ) show
0 132 moveto (7143 ) show
0 120 moveto (7144 ) show
0 108 moveto (7145 ) show
0 96 moveto (7146 ) show
0 84 moveto (7147 ) show
0 72 moveto (7148 ) show
0 60 moveto (7149 ) show
0 24 moveto (Sheet 71) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/kbd.c  Page 1) show
0 648 moveto (7150 #include "types.h") show
0 636 moveto (7151 #include "x86.h") show
0 624 moveto (7152 #include "defs.h") show
0 612 moveto (7153 #include "kbd.h") show
0 600 moveto (7154 ) show
0 588 moveto (7155 int) show
0 576 moveto (7156 kbdgetc\(void\)) show
0 564 moveto (7157 {) show
0 552 moveto (7158   static uint shift;) show
0 540 moveto (7159   static uchar *charcode[4] = {) show
0 528 moveto (7160     normalmap, shiftmap, ctlmap, ctlmap) show
0 516 moveto (7161   };) show
0 504 moveto (7162   uint st, data, c;) show
0 492 moveto (7163 ) show
0 480 moveto (7164   st = inb\(KBSTATP\);) show
0 468 moveto (7165   if\(\(st & KBS_DIB\) == 0\)) show
0 456 moveto (7166     return -1;) show
0 444 moveto (7167   data = inb\(KBDATAP\);) show
0 432 moveto (7168 ) show
0 420 moveto (7169   if\(data == 0xE0\){) show
0 408 moveto (7170     shift |= E0ESC;) show
0 396 moveto (7171     return 0;) show
0 384 moveto (7172   } else if\(data & 0x80\){) show
0 372 moveto (7173     // Key released) show
0 360 moveto (7174     data = \(shift & E0ESC ? data : data & 0x7F\);) show
0 348 moveto (7175     shift &= ~\(shiftcode[data] | E0ESC\);) show
0 336 moveto (7176     return 0;) show
0 324 moveto (7177   } else if\(shift & E0ESC\){) show
0 312 moveto (7178     // Last character was an E0 escape; or with 0x80) show
0 300 moveto (7179     data |= 0x80;) show
0 288 moveto (7180     shift &= ~E0ESC;) show
0 276 moveto (7181   }) show
0 264 moveto (7182 ) show
0 252 moveto (7183   shift |= shiftcode[data];) show
0 240 moveto (7184   shift ^= togglecode[data];) show
0 228 moveto (7185   c = charcode[shift & \(CTL | SHIFT\)][data];) show
0 216 moveto (7186   if\(shift & CAPSLOCK\){) show
0 204 moveto (7187     if\('a' <= c && c <= 'z'\)) show
0 192 moveto (7188       c += 'A' - 'a';) show
0 180 moveto (7189     else if\('A' <= c && c <= 'Z'\)) show
0 168 moveto (7190       c += 'a' - 'A';) show
0 156 moveto (7191   }) show
0 144 moveto (7192   return c;) show
0 132 moveto (7193 }) show
0 120 moveto (7194 ) show
0 108 moveto (7195 void) show
0 96 moveto (7196 kbdintr\(void\)) show
0 84 moveto (7197 {) show
0 72 moveto (7198   consoleintr\(kbdgetc\);) show
0 60 moveto (7199 }) show
0 24 moveto (Sheet 71) show
grestore
restore
showpage
%%Page: 80 80
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/console.c  Page 1) show
0 648 moveto (7200 // Console input and output.) show
0 636 moveto (7201 // Input is from the keyboard or serial port.) show
0 624 moveto (7202 // Output is written to the screen and serial port.) show
0 612 moveto (7203 ) show
0 600 moveto (7204 #include "types.h") show
0 588 moveto (7205 #include "defs.h") show
0 576 moveto (7206 #include "param.h") show
0 564 moveto (7207 #include "traps.h") show
0 552 moveto (7208 #include "spinlock.h") show
0 540 moveto (7209 #include "fs.h") show
0 528 moveto (7210 #include "file.h") show
0 516 moveto (7211 #include "memlayout.h") show
0 504 moveto (7212 #include "mmu.h") show
0 492 moveto (7213 #include "proc.h") show
0 480 moveto (7214 #include "x86.h") show
0 468 moveto (7215 ) show
0 456 moveto (7216 static void consputc\(int\);) show
0 444 moveto (7217 ) show
0 432 moveto (7218 static int panicked = 0;) show
0 420 moveto (7219 ) show
0 408 moveto (7220 static struct {) show
0 396 moveto (7221   struct spinlock lock;) show
0 384 moveto (7222   int locking;) show
0 372 moveto (7223 } cons;) show
0 360 moveto (7224 ) show
0 348 moveto (7225 static void) show
0 336 moveto (7226 printint\(int xx, int base, int sign\)) show
0 324 moveto (7227 {) show
0 312 moveto (7228   static char digits[] = "0123456789abcdef";) show
0 300 moveto (7229   char buf[16];) show
0 288 moveto (7230   int i;) show
0 276 moveto (7231   uint x;) show
0 264 moveto (7232 ) show
0 252 moveto (7233   if\(sign && \(sign = xx < 0\)\)) show
0 240 moveto (7234     x = -xx;) show
0 228 moveto (7235   else) show
0 216 moveto (7236     x = xx;) show
0 204 moveto (7237 ) show
0 192 moveto (7238   i = 0;) show
0 180 moveto (7239   do{) show
0 168 moveto (7240     buf[i++] = digits[x % base];) show
0 156 moveto (7241   }while\(\(x /= base\) != 0\);) show
0 144 moveto (7242 ) show
0 132 moveto (7243   if\(sign\)) show
0 120 moveto (7244     buf[i++] = '-';) show
0 108 moveto (7245 ) show
0 96 moveto (7246   while\(--i >= 0\)) show
0 84 moveto (7247     consputc\(buf[i]\);) show
0 72 moveto (7248 }) show
0 60 moveto (7249 ) show
0 24 moveto (Sheet 72) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/console.c  Page 2) show
0 648 moveto (7250 // Print to the console. only understands %d, %x, %p, %s.) show
0 636 moveto (7251 void) show
0 624 moveto (7252 cprintf\(char *fmt, ...\)) show
0 612 moveto (7253 {) show
0 600 moveto (7254   int i, c, locking;) show
0 588 moveto (7255   uint *argp;) show
0 576 moveto (7256   char *s;) show
0 564 moveto (7257 ) show
0 552 moveto (7258   locking = cons.locking;) show
0 540 moveto (7259   if\(locking\)) show
0 528 moveto (7260     acquire\(&cons.lock\);) show
0 516 moveto (7261 ) show
0 504 moveto (7262   if \(fmt == 0\)) show
0 492 moveto (7263     panic\("null fmt"\);) show
0 480 moveto (7264 ) show
0 468 moveto (7265   argp = \(uint*\)\(void*\)\(&fmt + 1\);) show
0 456 moveto (7266   for\(i = 0; \(c = fmt[i] & 0xff\) != 0; i++\){) show
0 444 moveto (7267     if\(c != '%'\){) show
0 432 moveto (7268       consputc\(c\);) show
0 420 moveto (7269       continue;) show
0 408 moveto (7270     }) show
0 396 moveto (7271     c = fmt[++i] & 0xff;) show
0 384 moveto (7272     if\(c == 0\)) show
0 372 moveto (7273       break;) show
0 360 moveto (7274     switch\(c\){) show
0 348 moveto (7275     case 'd':) show
0 336 moveto (7276       printint\(*argp++, 10, 1\);) show
0 324 moveto (7277       break;) show
0 312 moveto (7278     case 'x':) show
0 300 moveto (7279     case 'p':) show
0 288 moveto (7280       printint\(*argp++, 16, 0\);) show
0 276 moveto (7281       break;) show
0 264 moveto (7282     case 's':) show
0 252 moveto (7283       if\(\(s = \(char*\)*argp++\) == 0\)) show
0 240 moveto (7284         s = "\(null\)";) show
0 228 moveto (7285       for\(; *s; s++\)) show
0 216 moveto (7286         consputc\(*s\);) show
0 204 moveto (7287       break;) show
0 192 moveto (7288     case '%':) show
0 180 moveto (7289       consputc\('%'\);) show
0 168 moveto (7290       break;) show
0 156 moveto (7291     default:) show
0 144 moveto (7292       // Print unknown % sequence to draw attention.) show
0 132 moveto (7293       consputc\('%'\);) show
0 120 moveto (7294       consputc\(c\);) show
0 108 moveto (7295       break;) show
0 96 moveto (7296     }) show
0 84 moveto (7297   }) show
0 72 moveto (7298 ) show
0 60 moveto (7299 ) show
0 24 moveto (Sheet 72) show
grestore
restore
showpage
%%Page: 81 81
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/console.c  Page 3) show
0 648 moveto (7300   if\(locking\)) show
0 636 moveto (7301     release\(&cons.lock\);) show
0 624 moveto (7302 }) show
0 612 moveto (7303 ) show
0 600 moveto (7304 void) show
0 588 moveto (7305 panic\(char *s\)) show
0 576 moveto (7306 {) show
0 564 moveto (7307   int i;) show
0 552 moveto (7308   uint pcs[10];) show
0 540 moveto (7309 ) show
0 528 moveto (7310   cli\(\);) show
0 516 moveto (7311   cons.locking = 0;) show
0 504 moveto (7312   cprintf\("cpu%d: panic: ", cpu->id\);) show
0 492 moveto (7313   cprintf\(s\);) show
0 480 moveto (7314   cprintf\("\\n"\);) show
0 468 moveto (7315   getcallerpcs\(&s, pcs\);) show
0 456 moveto (7316   for\(i=0; i<10; i++\)) show
0 444 moveto (7317     cprintf\(" %p", pcs[i]\);) show
0 432 moveto (7318   panicked = 1; // freeze other CPU) show
0 420 moveto (7319   for\(;;\)) show
0 408 moveto (7320     ;) show
0 396 moveto (7321 }) show
0 384 moveto (7322 ) show
0 372 moveto (7323 ) show
0 360 moveto (7324 ) show
0 348 moveto (7325 ) show
0 336 moveto (7326 ) show
0 324 moveto (7327 ) show
0 312 moveto (7328 ) show
0 300 moveto (7329 ) show
0 288 moveto (7330 ) show
0 276 moveto (7331 ) show
0 264 moveto (7332 ) show
0 252 moveto (7333 ) show
0 240 moveto (7334 ) show
0 228 moveto (7335 ) show
0 216 moveto (7336 ) show
0 204 moveto (7337 ) show
0 192 moveto (7338 ) show
0 180 moveto (7339 ) show
0 168 moveto (7340 ) show
0 156 moveto (7341 ) show
0 144 moveto (7342 ) show
0 132 moveto (7343 ) show
0 120 moveto (7344 ) show
0 108 moveto (7345 ) show
0 96 moveto (7346 ) show
0 84 moveto (7347 ) show
0 72 moveto (7348 ) show
0 60 moveto (7349 ) show
0 24 moveto (Sheet 73) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/console.c  Page 4) show
0 648 moveto (7350 #define BACKSPACE 0x100) show
0 636 moveto (7351 #define CRTPORT 0x3d4) show
0 624 moveto (7352 static ushort *crt = \(ushort*\)P2V\(0xb8000\);  // CGA memory) show
0 612 moveto (7353 ) show
0 600 moveto (7354 static void) show
0 588 moveto (7355 cgaputc\(int c\)) show
0 576 moveto (7356 {) show
0 564 moveto (7357   int pos;) show
0 552 moveto (7358 ) show
0 540 moveto (7359   // Cursor position: col + 80*row.) show
0 528 moveto (7360   outb\(CRTPORT, 14\);) show
0 516 moveto (7361   pos = inb\(CRTPORT+1\) << 8;) show
0 504 moveto (7362   outb\(CRTPORT, 15\);) show
0 492 moveto (7363   pos |= inb\(CRTPORT+1\);) show
0 480 moveto (7364 ) show
0 468 moveto (7365   if\(c == '\\n'\)) show
0 456 moveto (7366     pos += 80 - pos%80;) show
0 444 moveto (7367   else if\(c == BACKSPACE\){) show
0 432 moveto (7368     if\(pos > 0\) --pos;) show
0 420 moveto (7369   } else) show
0 408 moveto (7370     crt[pos++] = \(c&0xff\) | 0x0700;  // black on white) show
0 396 moveto (7371 ) show
0 384 moveto (7372   if\(\(pos/80\) >= 24\){  // Scroll up.) show
0 372 moveto (7373     memmove\(crt, crt+80, sizeof\(crt[0]\)*23*80\);) show
0 360 moveto (7374     pos -= 80;) show
0 348 moveto (7375     memset\(crt+pos, 0, sizeof\(crt[0]\)*\(24*80 - pos\)\);) show
0 336 moveto (7376   }) show
0 324 moveto (7377 ) show
0 312 moveto (7378   outb\(CRTPORT, 14\);) show
0 300 moveto (7379   outb\(CRTPORT+1, pos>>8\);) show
0 288 moveto (7380   outb\(CRTPORT, 15\);) show
0 276 moveto (7381   outb\(CRTPORT+1, pos\);) show
0 264 moveto (7382   crt[pos] = ' ' | 0x0700;) show
0 252 moveto (7383 }) show
0 240 moveto (7384 ) show
0 228 moveto (7385 void) show
0 216 moveto (7386 consputc\(int c\)) show
0 204 moveto (7387 {) show
0 192 moveto (7388   if\(panicked\){) show
0 180 moveto (7389     cli\(\);) show
0 168 moveto (7390     for\(;;\)) show
0 156 moveto (7391       ;) show
0 144 moveto (7392   }) show
0 132 moveto (7393 ) show
0 120 moveto (7394   if\(c == BACKSPACE\){) show
0 108 moveto (7395     uartputc\('\\b'\); uartputc\(' '\); uartputc\('\\b'\);) show
0 96 moveto (7396   } else) show
0 84 moveto (7397     uartputc\(c\);) show
0 72 moveto (7398   cgaputc\(c\);) show
0 60 moveto (7399 }) show
0 24 moveto (Sheet 73) show
grestore
restore
showpage
%%Page: 82 82
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/console.c  Page 5) show
0 648 moveto (7400 #define INPUT_BUF 128) show
0 636 moveto (7401 struct {) show
0 624 moveto (7402   struct spinlock lock;) show
0 612 moveto (7403   char buf[INPUT_BUF];) show
0 600 moveto (7404   uint r;  // Read index) show
0 588 moveto (7405   uint w;  // Write index) show
0 576 moveto (7406   uint e;  // Edit index) show
0 564 moveto (7407 } input;) show
0 552 moveto (7408 ) show
0 540 moveto (7409 #define C\(x\)  \(\(x\)-'@'\)  // Control-x) show
0 528 moveto (7410 ) show
0 516 moveto (7411 void) show
0 504 moveto (7412 consoleintr\(int \(*getc\)\(void\)\)) show
0 492 moveto (7413 {) show
0 480 moveto (7414   int c;) show
0 468 moveto (7415 ) show
0 456 moveto (7416   acquire\(&input.lock\);) show
0 444 moveto (7417   while\(\(c = getc\(\)\) >= 0\){) show
0 432 moveto (7418     switch\(c\){) show
0 420 moveto (7419     case C\('P'\):  // Process listing.) show
0 408 moveto (7420       procdump\(\);) show
0 396 moveto (7421       break;) show
0 384 moveto (7422     case C\('U'\):  // Kill line.) show
0 372 moveto (7423       while\(input.e != input.w &&) show
0 360 moveto (7424             input.buf[\(input.e-1\) % INPUT_BUF] != '\\n'\){) show
0 348 moveto (7425         input.e--;) show
0 336 moveto (7426         consputc\(BACKSPACE\);) show
0 324 moveto (7427       }) show
0 312 moveto (7428       break;) show
0 300 moveto (7429     case C\('H'\): case '\\x7f':  // Backspace) show
0 288 moveto (7430       if\(input.e != input.w\){) show
0 276 moveto (7431         input.e--;) show
0 264 moveto (7432         consputc\(BACKSPACE\);) show
0 252 moveto (7433       }) show
0 240 moveto (7434       break;) show
0 228 moveto (7435     default:) show
0 216 moveto (7436       if\(c != 0 && input.e-input.r < INPUT_BUF\){) show
0 204 moveto (7437         c = \(c == '\\r'\) ? '\\n' : c;) show
0 192 moveto (7438         input.buf[input.e++ % INPUT_BUF] = c;) show
0 180 moveto (7439         consputc\(c\);) show
0 168 moveto (7440         if\(c == '\\n' || c == C\('D'\) || input.e == input.r+INPUT_BUF\){) show
0 156 moveto (7441           input.w = input.e;) show
0 144 moveto (7442           wakeup\(&input.r\);) show
0 132 moveto (7443         }) show
0 120 moveto (7444       }) show
0 108 moveto (7445       break;) show
0 96 moveto (7446     }) show
0 84 moveto (7447   }) show
0 72 moveto (7448   release\(&input.lock\);) show
0 60 moveto (7449 }) show
0 24 moveto (Sheet 74) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/console.c  Page 6) show
0 648 moveto (7450 int) show
0 636 moveto (7451 consoleread\(struct inode *ip, char *dst, int n\)) show
0 624 moveto (7452 {) show
0 612 moveto (7453   uint target;) show
0 600 moveto (7454   int c;) show
0 588 moveto (7455 ) show
0 576 moveto (7456   iunlock\(ip\);) show
0 564 moveto (7457   target = n;) show
0 552 moveto (7458   acquire\(&input.lock\);) show
0 540 moveto (7459   while\(n > 0\){) show
0 528 moveto (7460     while\(input.r == input.w\){) show
0 516 moveto (7461       if\(proc->killed\){) show
0 504 moveto (7462         release\(&input.lock\);) show
0 492 moveto (7463         ilock\(ip\);) show
0 480 moveto (7464         return -1;) show
0 468 moveto (7465       }) show
0 456 moveto (7466       sleep\(&input.r, &input.lock\);) show
0 444 moveto (7467     }) show
0 432 moveto (7468     c = input.buf[input.r++ % INPUT_BUF];) show
0 420 moveto (7469     if\(c == C\('D'\)\){  // EOF) show
0 408 moveto (7470       if\(n < target\){) show
0 396 moveto (7471         // Save ^D for next time, to make sure) show
0 384 moveto (7472         // caller gets a 0-byte result.) show
0 372 moveto (7473         input.r--;) show
0 360 moveto (7474       }) show
0 348 moveto (7475       break;) show
0 336 moveto (7476     }) show
0 324 moveto (7477     *dst++ = c;) show
0 312 moveto (7478     --n;) show
0 300 moveto (7479     if\(c == '\\n'\)) show
0 288 moveto (7480       break;) show
0 276 moveto (7481   }) show
0 264 moveto (7482   release\(&input.lock\);) show
0 252 moveto (7483   ilock\(ip\);) show
0 240 moveto (7484 ) show
0 228 moveto (7485   return target - n;) show
0 216 moveto (7486 }) show
0 204 moveto (7487 ) show
0 192 moveto (7488 ) show
0 180 moveto (7489 ) show
0 168 moveto (7490 ) show
0 156 moveto (7491 ) show
0 144 moveto (7492 ) show
0 132 moveto (7493 ) show
0 120 moveto (7494 ) show
0 108 moveto (7495 ) show
0 96 moveto (7496 ) show
0 84 moveto (7497 ) show
0 72 moveto (7498 ) show
0 60 moveto (7499 ) show
0 24 moveto (Sheet 74) show
grestore
restore
showpage
%%Page: 83 83
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/console.c  Page 7) show
0 648 moveto (7500 int) show
0 636 moveto (7501 consolewrite\(struct inode *ip, char *buf, int n\)) show
0 624 moveto (7502 {) show
0 612 moveto (7503   int i;) show
0 600 moveto (7504 ) show
0 588 moveto (7505   iunlock\(ip\);) show
0 576 moveto (7506   acquire\(&cons.lock\);) show
0 564 moveto (7507   for\(i = 0; i < n; i++\)) show
0 552 moveto (7508     consputc\(buf[i] & 0xff\);) show
0 540 moveto (7509   release\(&cons.lock\);) show
0 528 moveto (7510   ilock\(ip\);) show
0 516 moveto (7511 ) show
0 504 moveto (7512   return n;) show
0 492 moveto (7513 }) show
0 480 moveto (7514 ) show
0 468 moveto (7515 void) show
0 456 moveto (7516 consoleinit\(void\)) show
0 444 moveto (7517 {) show
0 432 moveto (7518   initlock\(&cons.lock, "console"\);) show
0 420 moveto (7519   initlock\(&input.lock, "input"\);) show
0 408 moveto (7520 ) show
0 396 moveto (7521   devsw[CONSOLE].write = consolewrite;) show
0 384 moveto (7522   devsw[CONSOLE].read = consoleread;) show
0 372 moveto (7523   cons.locking = 1;) show
0 360 moveto (7524 ) show
0 348 moveto (7525   picenable\(IRQ_KBD\);) show
0 336 moveto (7526   ioapicenable\(IRQ_KBD, 0\);) show
0 324 moveto (7527 }) show
0 312 moveto (7528 ) show
0 300 moveto (7529 ) show
0 288 moveto (7530 ) show
0 276 moveto (7531 ) show
0 264 moveto (7532 ) show
0 252 moveto (7533 ) show
0 240 moveto (7534 ) show
0 228 moveto (7535 ) show
0 216 moveto (7536 ) show
0 204 moveto (7537 ) show
0 192 moveto (7538 ) show
0 180 moveto (7539 ) show
0 168 moveto (7540 ) show
0 156 moveto (7541 ) show
0 144 moveto (7542 ) show
0 132 moveto (7543 ) show
0 120 moveto (7544 ) show
0 108 moveto (7545 ) show
0 96 moveto (7546 ) show
0 84 moveto (7547 ) show
0 72 moveto (7548 ) show
0 60 moveto (7549 ) show
0 24 moveto (Sheet 75) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/timer.c  Page 1) show
0 648 moveto (7550 // Intel 8253/8254/82C54 Programmable Interval Timer \(PIT\).) show
0 636 moveto (7551 // Only used on uniprocessors;) show
0 624 moveto (7552 // SMP machines use the local APIC timer.) show
0 612 moveto (7553 ) show
0 600 moveto (7554 #include "types.h") show
0 588 moveto (7555 #include "defs.h") show
0 576 moveto (7556 #include "traps.h") show
0 564 moveto (7557 #include "x86.h") show
0 552 moveto (7558 ) show
0 540 moveto (7559 #define IO_TIMER1       0x040           // 8253 Timer #1) show
0 528 moveto (7560 ) show
0 516 moveto (7561 // Frequency of all three count-down timers;) show
0 504 moveto (7562 // \(TIMER_FREQ/freq\) is the appropriate count) show
0 492 moveto (7563 // to generate a frequency of freq Hz.) show
0 480 moveto (7564 ) show
0 468 moveto (7565 #define TIMER_FREQ      1193182) show
0 456 moveto (7566 #define TIMER_DIV\(x\)    \(\(TIMER_FREQ+\(x\)/2\)/\(x\)\)) show
0 444 moveto (7567 ) show
0 432 moveto (7568 #define TIMER_MODE      \(IO_TIMER1 + 3\) // timer mode port) show
0 420 moveto (7569 #define TIMER_SEL0      0x00    // select counter 0) show
0 408 moveto (7570 #define TIMER_RATEGEN   0x04    // mode 2, rate generator) show
0 396 moveto (7571 #define TIMER_16BIT     0x30    // r/w counter 16 bits, LSB first) show
0 384 moveto (7572 ) show
0 372 moveto (7573 void) show
0 360 moveto (7574 timerinit\(void\)) show
0 348 moveto (7575 {) show
0 336 moveto (7576   // Interrupt 100 times/sec.) show
0 324 moveto (7577   outb\(TIMER_MODE, TIMER_SEL0 | TIMER_RATEGEN | TIMER_16BIT\);) show
0 312 moveto (7578   outb\(IO_TIMER1, TIMER_DIV\(100\) % 256\);) show
0 300 moveto (7579   outb\(IO_TIMER1, TIMER_DIV\(100\) / 256\);) show
0 288 moveto (7580   picenable\(IRQ_TIMER\);) show
0 276 moveto (7581 }) show
0 264 moveto (7582 ) show
0 252 moveto (7583 ) show
0 240 moveto (7584 ) show
0 228 moveto (7585 ) show
0 216 moveto (7586 ) show
0 204 moveto (7587 ) show
0 192 moveto (7588 ) show
0 180 moveto (7589 ) show
0 168 moveto (7590 ) show
0 156 moveto (7591 ) show
0 144 moveto (7592 ) show
0 132 moveto (7593 ) show
0 120 moveto (7594 ) show
0 108 moveto (7595 ) show
0 96 moveto (7596 ) show
0 84 moveto (7597 ) show
0 72 moveto (7598 ) show
0 60 moveto (7599 ) show
0 24 moveto (Sheet 75) show
grestore
restore
showpage
%%Page: 84 84
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/uart.c  Page 1) show
0 648 moveto (7600 // Intel 8250 serial port \(UART\).) show
0 636 moveto (7601 ) show
0 624 moveto (7602 #include "types.h") show
0 612 moveto (7603 #include "defs.h") show
0 600 moveto (7604 #include "param.h") show
0 588 moveto (7605 #include "traps.h") show
0 576 moveto (7606 #include "spinlock.h") show
0 564 moveto (7607 #include "fs.h") show
0 552 moveto (7608 #include "file.h") show
0 540 moveto (7609 #include "mmu.h") show
0 528 moveto (7610 #include "proc.h") show
0 516 moveto (7611 #include "x86.h") show
0 504 moveto (7612 ) show
0 492 moveto (7613 #define COM1    0x3f8) show
0 480 moveto (7614 ) show
0 468 moveto (7615 static int uart;    // is there a uart?) show
0 456 moveto (7616 ) show
0 444 moveto (7617 void) show
0 432 moveto (7618 uartinit\(void\)) show
0 420 moveto (7619 {) show
0 408 moveto (7620   char *p;) show
0 396 moveto (7621 ) show
0 384 moveto (7622   // Turn off the FIFO) show
0 372 moveto (7623   outb\(COM1+2, 0\);) show
0 360 moveto (7624 ) show
0 348 moveto (7625   // 9600 baud, 8 data bits, 1 stop bit, parity off.) show
0 336 moveto (7626   outb\(COM1+3, 0x80\);    // Unlock divisor) show
0 324 moveto (7627   outb\(COM1+0, 115200/9600\);) show
0 312 moveto (7628   outb\(COM1+1, 0\);) show
0 300 moveto (7629   outb\(COM1+3, 0x03\);    // Lock divisor, 8 data bits.) show
0 288 moveto (7630   outb\(COM1+4, 0\);) show
0 276 moveto (7631   outb\(COM1+1, 0x01\);    // Enable receive interrupts.) show
0 264 moveto (7632 ) show
0 252 moveto (7633   // If status is 0xFF, no serial port.) show
0 240 moveto (7634   if\(inb\(COM1+5\) == 0xFF\)) show
0 228 moveto (7635     return;) show
0 216 moveto (7636   uart = 1;) show
0 204 moveto (7637 ) show
0 192 moveto (7638   // Acknowledge pre-existing interrupt conditions;) show
0 180 moveto (7639   // enable interrupts.) show
0 168 moveto (7640   inb\(COM1+2\);) show
0 156 moveto (7641   inb\(COM1+0\);) show
0 144 moveto (7642   picenable\(IRQ_COM1\);) show
0 132 moveto (7643   ioapicenable\(IRQ_COM1, 0\);) show
0 120 moveto (7644 ) show
0 108 moveto (7645   // Announce that we're here.) show
0 96 moveto (7646   for\(p="xv6...\\n"; *p; p++\)) show
0 84 moveto (7647     uartputc\(*p\);) show
0 72 moveto (7648 }) show
0 60 moveto (7649 ) show
0 24 moveto (Sheet 76) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/uart.c  Page 2) show
0 648 moveto (7650 void) show
0 636 moveto (7651 uartputc\(int c\)) show
0 624 moveto (7652 {) show
0 612 moveto (7653   int i;) show
0 600 moveto (7654 ) show
0 588 moveto (7655   if\(!uart\)) show
0 576 moveto (7656     return;) show
0 564 moveto (7657   for\(i = 0; i < 128 && !\(inb\(COM1+5\) & 0x20\); i++\)) show
0 552 moveto (7658     microdelay\(10\);) show
0 540 moveto (7659   outb\(COM1+0, c\);) show
0 528 moveto (7660 }) show
0 516 moveto (7661 ) show
0 504 moveto (7662 static int) show
0 492 moveto (7663 uartgetc\(void\)) show
0 480 moveto (7664 {) show
0 468 moveto (7665   if\(!uart\)) show
0 456 moveto (7666     return -1;) show
0 444 moveto (7667   if\(!\(inb\(COM1+5\) & 0x01\)\)) show
0 432 moveto (7668     return -1;) show
0 420 moveto (7669   return inb\(COM1+0\);) show
0 408 moveto (7670 }) show
0 396 moveto (7671 ) show
0 384 moveto (7672 void) show
0 372 moveto (7673 uartintr\(void\)) show
0 360 moveto (7674 {) show
0 348 moveto (7675   consoleintr\(uartgetc\);) show
0 336 moveto (7676 }) show
0 324 moveto (7677 ) show
0 312 moveto (7678 ) show
0 300 moveto (7679 ) show
0 288 moveto (7680 ) show
0 276 moveto (7681 ) show
0 264 moveto (7682 ) show
0 252 moveto (7683 ) show
0 240 moveto (7684 ) show
0 228 moveto (7685 ) show
0 216 moveto (7686 ) show
0 204 moveto (7687 ) show
0 192 moveto (7688 ) show
0 180 moveto (7689 ) show
0 168 moveto (7690 ) show
0 156 moveto (7691 ) show
0 144 moveto (7692 ) show
0 132 moveto (7693 ) show
0 120 moveto (7694 ) show
0 108 moveto (7695 ) show
0 96 moveto (7696 ) show
0 84 moveto (7697 ) show
0 72 moveto (7698 ) show
0 60 moveto (7699 ) show
0 24 moveto (Sheet 76) show
grestore
restore
showpage
%%Page: 85 85
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/initcode.S  Page 1) show
0 648 moveto (7700 # Initial process execs /init.) show
0 636 moveto (7701 ) show
0 624 moveto (7702 #include "syscall.h") show
0 612 moveto (7703 #include "traps.h") show
0 600 moveto (7704 ) show
0 588 moveto (7705 ) show
0 576 moveto (7706 # exec\(init, argv\)) show
0 564 moveto (7707 .globl start) show
0 552 moveto (7708 start:) show
0 540 moveto (7709   pushl $argv) show
0 528 moveto (7710   pushl $init) show
0 516 moveto (7711   pushl $0  // where caller pc would be) show
0 504 moveto (7712   movl $SYS_exec, %eax) show
0 492 moveto (7713   int $T_SYSCALL) show
0 480 moveto (7714 ) show
0 468 moveto (7715 # for\(;;\) exit\(\);) show
0 456 moveto (7716 exit:) show
0 444 moveto (7717   movl $SYS_exit, %eax) show
0 432 moveto (7718   int $T_SYSCALL) show
0 420 moveto (7719   jmp exit) show
0 408 moveto (7720 ) show
0 396 moveto (7721 # char init[] = "/init\\0";) show
0 384 moveto (7722 init:) show
0 372 moveto (7723   .string "/init\\0") show
0 360 moveto (7724 ) show
0 348 moveto (7725 # char *argv[] = { init, 0 };) show
0 336 moveto (7726 .p2align 2) show
0 324 moveto (7727 argv:) show
0 312 moveto (7728   .long init) show
0 300 moveto (7729   .long 0) show
0 288 moveto (7730 ) show
0 276 moveto (7731 ) show
0 264 moveto (7732 ) show
0 252 moveto (7733 ) show
0 240 moveto (7734 ) show
0 228 moveto (7735 ) show
0 216 moveto (7736 ) show
0 204 moveto (7737 ) show
0 192 moveto (7738 ) show
0 180 moveto (7739 ) show
0 168 moveto (7740 ) show
0 156 moveto (7741 ) show
0 144 moveto (7742 ) show
0 132 moveto (7743 ) show
0 120 moveto (7744 ) show
0 108 moveto (7745 ) show
0 96 moveto (7746 ) show
0 84 moveto (7747 ) show
0 72 moveto (7748 ) show
0 60 moveto (7749 ) show
0 24 moveto (Sheet 77) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/usys.S  Page 1) show
0 648 moveto (7750 #include "syscall.h") show
0 636 moveto (7751 #include "traps.h") show
0 624 moveto (7752 ) show
0 612 moveto (7753 #define SYSCALL\(name\) \\) show
0 600 moveto (7754   .globl name; \\) show
0 588 moveto (7755   name: \\) show
0 576 moveto (7756     movl $SYS_ ## name, %eax; \\) show
0 564 moveto (7757     int $T_SYSCALL; \\) show
0 552 moveto (7758     ret) show
0 540 moveto (7759 ) show
0 528 moveto (7760 SYSCALL\(fork\)) show
0 516 moveto (7761 SYSCALL\(exit\)) show
0 504 moveto (7762 SYSCALL\(wait\)) show
0 492 moveto (7763 SYSCALL\(pipe\)) show
0 480 moveto (7764 SYSCALL\(read\)) show
0 468 moveto (7765 SYSCALL\(write\)) show
0 456 moveto (7766 SYSCALL\(close\)) show
0 444 moveto (7767 SYSCALL\(kill\)) show
0 432 moveto (7768 SYSCALL\(exec\)) show
0 420 moveto (7769 SYSCALL\(open\)) show
0 408 moveto (7770 SYSCALL\(mknod\)) show
0 396 moveto (7771 SYSCALL\(unlink\)) show
0 384 moveto (7772 SYSCALL\(fstat\)) show
0 372 moveto (7773 SYSCALL\(link\)) show
0 360 moveto (7774 SYSCALL\(mkdir\)) show
0 348 moveto (7775 SYSCALL\(chdir\)) show
0 336 moveto (7776 SYSCALL\(dup\)) show
0 324 moveto (7777 SYSCALL\(getpid\)) show
0 312 moveto (7778 SYSCALL\(sbrk\)) show
0 300 moveto (7779 SYSCALL\(sleep\)) show
0 288 moveto (7780 SYSCALL\(uptime\)) show
0 276 moveto (7781 ) show
0 264 moveto (7782 ) show
0 252 moveto (7783 ) show
0 240 moveto (7784 ) show
0 228 moveto (7785 ) show
0 216 moveto (7786 ) show
0 204 moveto (7787 ) show
0 192 moveto (7788 ) show
0 180 moveto (7789 ) show
0 168 moveto (7790 ) show
0 156 moveto (7791 ) show
0 144 moveto (7792 ) show
0 132 moveto (7793 ) show
0 120 moveto (7794 ) show
0 108 moveto (7795 ) show
0 96 moveto (7796 ) show
0 84 moveto (7797 ) show
0 72 moveto (7798 ) show
0 60 moveto (7799 ) show
0 24 moveto (Sheet 77) show
grestore
restore
showpage
%%Page: 86 86
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/init.c  Page 1) show
0 648 moveto (7800 // init: The initial user-level program) show
0 636 moveto (7801 ) show
0 624 moveto (7802 #include "types.h") show
0 612 moveto (7803 #include "stat.h") show
0 600 moveto (7804 #include "user.h") show
0 588 moveto (7805 #include "fcntl.h") show
0 576 moveto (7806 ) show
0 564 moveto (7807 char *argv[] = { "sh", 0 };) show
0 552 moveto (7808 ) show
0 540 moveto (7809 int) show
0 528 moveto (7810 main\(void\)) show
0 516 moveto (7811 {) show
0 504 moveto (7812   int pid, wpid;) show
0 492 moveto (7813 ) show
0 480 moveto (7814   if\(open\("console", O_RDWR\) < 0\){) show
0 468 moveto (7815     mknod\("console", 1, 1\);) show
0 456 moveto (7816     open\("console", O_RDWR\);) show
0 444 moveto (7817   }) show
0 432 moveto (7818   dup\(0\);  // stdout) show
0 420 moveto (7819   dup\(0\);  // stderr) show
0 408 moveto (7820 ) show
0 396 moveto (7821   for\(;;\){) show
0 384 moveto (7822     printf\(1, "init: starting sh\\n"\);) show
0 372 moveto (7823     pid = fork\(\);) show
0 360 moveto (7824     if\(pid < 0\){) show
0 348 moveto (7825       printf\(1, "init: fork failed\\n"\);) show
0 336 moveto (7826       exit\(\);) show
0 324 moveto (7827     }) show
0 312 moveto (7828     if\(pid == 0\){) show
0 300 moveto (7829       exec\("sh", argv\);) show
0 288 moveto (7830       printf\(1, "init: exec sh failed\\n"\);) show
0 276 moveto (7831       exit\(\);) show
0 264 moveto (7832     }) show
0 252 moveto (7833     while\(\(wpid=wait\(\)\) >= 0 && wpid != pid\)) show
0 240 moveto (7834       printf\(1, "zombie!\\n"\);) show
0 228 moveto (7835   }) show
0 216 moveto (7836 }) show
0 204 moveto (7837 ) show
0 192 moveto (7838 ) show
0 180 moveto (7839 ) show
0 168 moveto (7840 ) show
0 156 moveto (7841 ) show
0 144 moveto (7842 ) show
0 132 moveto (7843 ) show
0 120 moveto (7844 ) show
0 108 moveto (7845 ) show
0 96 moveto (7846 ) show
0 84 moveto (7847 ) show
0 72 moveto (7848 ) show
0 60 moveto (7849 ) show
0 24 moveto (Sheet 78) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sh.c  Page 1) show
0 648 moveto (7850 // Shell.) show
0 636 moveto (7851 ) show
0 624 moveto (7852 #include "types.h") show
0 612 moveto (7853 #include "user.h") show
0 600 moveto (7854 #include "fcntl.h") show
0 588 moveto (7855 ) show
0 576 moveto (7856 // Parsed command representation) show
0 564 moveto (7857 #define EXEC  1) show
0 552 moveto (7858 #define REDIR 2) show
0 540 moveto (7859 #define PIPE  3) show
0 528 moveto (7860 #define LIST  4) show
0 516 moveto (7861 #define BACK  5) show
0 504 moveto (7862 ) show
0 492 moveto (7863 #define MAXARGS 10) show
0 480 moveto (7864 ) show
0 468 moveto (7865 struct cmd {) show
0 456 moveto (7866   int type;) show
0 444 moveto (7867 };) show
0 432 moveto (7868 ) show
0 420 moveto (7869 struct execcmd {) show
0 408 moveto (7870   int type;) show
0 396 moveto (7871   char *argv[MAXARGS];) show
0 384 moveto (7872   char *eargv[MAXARGS];) show
0 372 moveto (7873 };) show
0 360 moveto (7874 ) show
0 348 moveto (7875 struct redircmd {) show
0 336 moveto (7876   int type;) show
0 324 moveto (7877   struct cmd *cmd;) show
0 312 moveto (7878   char *file;) show
0 300 moveto (7879   char *efile;) show
0 288 moveto (7880   int mode;) show
0 276 moveto (7881   int fd;) show
0 264 moveto (7882 };) show
0 252 moveto (7883 ) show
0 240 moveto (7884 struct pipecmd {) show
0 228 moveto (7885   int type;) show
0 216 moveto (7886   struct cmd *left;) show
0 204 moveto (7887   struct cmd *right;) show
0 192 moveto (7888 };) show
0 180 moveto (7889 ) show
0 168 moveto (7890 struct listcmd {) show
0 156 moveto (7891   int type;) show
0 144 moveto (7892   struct cmd *left;) show
0 132 moveto (7893   struct cmd *right;) show
0 120 moveto (7894 };) show
0 108 moveto (7895 ) show
0 96 moveto (7896 struct backcmd {) show
0 84 moveto (7897   int type;) show
0 72 moveto (7898   struct cmd *cmd;) show
0 60 moveto (7899 };) show
0 24 moveto (Sheet 78) show
grestore
restore
showpage
%%Page: 87 87
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sh.c  Page 2) show
0 648 moveto (7900 int fork1\(void\);  // Fork but panics on failure.) show
0 636 moveto (7901 void panic\(char*\);) show
0 624 moveto (7902 struct cmd *parsecmd\(char*\);) show
0 612 moveto (7903 ) show
0 600 moveto (7904 // Execute cmd.  Never returns.) show
0 588 moveto (7905 void) show
0 576 moveto (7906 runcmd\(struct cmd *cmd\)) show
0 564 moveto (7907 {) show
0 552 moveto (7908   int p[2];) show
0 540 moveto (7909   struct backcmd *bcmd;) show
0 528 moveto (7910   struct execcmd *ecmd;) show
0 516 moveto (7911   struct listcmd *lcmd;) show
0 504 moveto (7912   struct pipecmd *pcmd;) show
0 492 moveto (7913   struct redircmd *rcmd;) show
0 480 moveto (7914 ) show
0 468 moveto (7915   if\(cmd == 0\)) show
0 456 moveto (7916     exit\(\);) show
0 444 moveto (7917 ) show
0 432 moveto (7918   switch\(cmd->type\){) show
0 420 moveto (7919   default:) show
0 408 moveto (7920     panic\("runcmd"\);) show
0 396 moveto (7921 ) show
0 384 moveto (7922   case EXEC:) show
0 372 moveto (7923     ecmd = \(struct execcmd*\)cmd;) show
0 360 moveto (7924     if\(ecmd->argv[0] == 0\)) show
0 348 moveto (7925       exit\(\);) show
0 336 moveto (7926     exec\(ecmd->argv[0], ecmd->argv\);) show
0 324 moveto (7927     printf\(2, "exec %s failed\\n", ecmd->argv[0]\);) show
0 312 moveto (7928     break;) show
0 300 moveto (7929 ) show
0 288 moveto (7930   case REDIR:) show
0 276 moveto (7931     rcmd = \(struct redircmd*\)cmd;) show
0 264 moveto (7932     close\(rcmd->fd\);) show
0 252 moveto (7933     if\(open\(rcmd->file, rcmd->mode\) < 0\){) show
0 240 moveto (7934       printf\(2, "open %s failed\\n", rcmd->file\);) show
0 228 moveto (7935       exit\(\);) show
0 216 moveto (7936     }) show
0 204 moveto (7937     runcmd\(rcmd->cmd\);) show
0 192 moveto (7938     break;) show
0 180 moveto (7939 ) show
0 168 moveto (7940   case LIST:) show
0 156 moveto (7941     lcmd = \(struct listcmd*\)cmd;) show
0 144 moveto (7942     if\(fork1\(\) == 0\)) show
0 132 moveto (7943       runcmd\(lcmd->left\);) show
0 120 moveto (7944     wait\(\);) show
0 108 moveto (7945     runcmd\(lcmd->right\);) show
0 96 moveto (7946     break;) show
0 84 moveto (7947 ) show
0 72 moveto (7948 ) show
0 60 moveto (7949 ) show
0 24 moveto (Sheet 79) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sh.c  Page 3) show
0 648 moveto (7950   case PIPE:) show
0 636 moveto (7951     pcmd = \(struct pipecmd*\)cmd;) show
0 624 moveto (7952     if\(pipe\(p\) < 0\)) show
0 612 moveto (7953       panic\("pipe"\);) show
0 600 moveto (7954     if\(fork1\(\) == 0\){) show
0 588 moveto (7955       close\(1\);) show
0 576 moveto (7956       dup\(p[1]\);) show
0 564 moveto (7957       close\(p[0]\);) show
0 552 moveto (7958       close\(p[1]\);) show
0 540 moveto (7959       runcmd\(pcmd->left\);) show
0 528 moveto (7960     }) show
0 516 moveto (7961     if\(fork1\(\) == 0\){) show
0 504 moveto (7962       close\(0\);) show
0 492 moveto (7963       dup\(p[0]\);) show
0 480 moveto (7964       close\(p[0]\);) show
0 468 moveto (7965       close\(p[1]\);) show
0 456 moveto (7966       runcmd\(pcmd->right\);) show
0 444 moveto (7967     }) show
0 432 moveto (7968     close\(p[0]\);) show
0 420 moveto (7969     close\(p[1]\);) show
0 408 moveto (7970     wait\(\);) show
0 396 moveto (7971     wait\(\);) show
0 384 moveto (7972     break;) show
0 372 moveto (7973 ) show
0 360 moveto (7974   case BACK:) show
0 348 moveto (7975     bcmd = \(struct backcmd*\)cmd;) show
0 336 moveto (7976     if\(fork1\(\) == 0\)) show
0 324 moveto (7977       runcmd\(bcmd->cmd\);) show
0 312 moveto (7978     break;) show
0 300 moveto (7979   }) show
0 288 moveto (7980   exit\(\);) show
0 276 moveto (7981 }) show
0 264 moveto (7982 ) show
0 252 moveto (7983 int) show
0 240 moveto (7984 getcmd\(char *buf, int nbuf\)) show
0 228 moveto (7985 {) show
0 216 moveto (7986   printf\(2, "$ "\);) show
0 204 moveto (7987   memset\(buf, 0, nbuf\);) show
0 192 moveto (7988   gets\(buf, nbuf\);) show
0 180 moveto (7989   if\(buf[0] == 0\) // EOF) show
0 168 moveto (7990     return -1;) show
0 156 moveto (7991   return 0;) show
0 144 moveto (7992 }) show
0 132 moveto (7993 ) show
0 120 moveto (7994 ) show
0 108 moveto (7995 ) show
0 96 moveto (7996 ) show
0 84 moveto (7997 ) show
0 72 moveto (7998 ) show
0 60 moveto (7999 ) show
0 24 moveto (Sheet 79) show
grestore
restore
showpage
%%Page: 88 88
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sh.c  Page 4) show
0 648 moveto (8000 int) show
0 636 moveto (8001 main\(void\)) show
0 624 moveto (8002 {) show
0 612 moveto (8003   static char buf[100];) show
0 600 moveto (8004   int fd;) show
0 588 moveto (8005 ) show
0 576 moveto (8006   // Assumes three file descriptors open.) show
0 564 moveto (8007   while\(\(fd = open\("console", O_RDWR\)\) >= 0\){) show
0 552 moveto (8008     if\(fd >= 3\){) show
0 540 moveto (8009       close\(fd\);) show
0 528 moveto (8010       break;) show
0 516 moveto (8011     }) show
0 504 moveto (8012   }) show
0 492 moveto (8013 ) show
0 480 moveto (8014   // Read and run input commands.) show
0 468 moveto (8015   while\(getcmd\(buf, sizeof\(buf\)\) >= 0\){) show
0 456 moveto (8016     if\(buf[0] == 'c' && buf[1] == 'd' && buf[2] == ' '\){) show
0 444 moveto (8017       // Clumsy but will have to do for now.) show
0 432 moveto (8018       // Chdir has no effect on the parent if run in the child.) show
0 420 moveto (8019       buf[strlen\(buf\)-1] = 0;  // chop \\n) show
0 408 moveto (8020       if\(chdir\(buf+3\) < 0\)) show
0 396 moveto (8021         printf\(2, "cannot cd %s\\n", buf+3\);) show
0 384 moveto (8022       continue;) show
0 372 moveto (8023     }) show
0 360 moveto (8024     if\(fork1\(\) == 0\)) show
0 348 moveto (8025       runcmd\(parsecmd\(buf\)\);) show
0 336 moveto (8026     wait\(\);) show
0 324 moveto (8027   }) show
0 312 moveto (8028   exit\(\);) show
0 300 moveto (8029 }) show
0 288 moveto (8030 ) show
0 276 moveto (8031 void) show
0 264 moveto (8032 panic\(char *s\)) show
0 252 moveto (8033 {) show
0 240 moveto (8034   printf\(2, "%s\\n", s\);) show
0 228 moveto (8035   exit\(\);) show
0 216 moveto (8036 }) show
0 204 moveto (8037 ) show
0 192 moveto (8038 int) show
0 180 moveto (8039 fork1\(void\)) show
0 168 moveto (8040 {) show
0 156 moveto (8041   int pid;) show
0 144 moveto (8042 ) show
0 132 moveto (8043   pid = fork\(\);) show
0 120 moveto (8044   if\(pid == -1\)) show
0 108 moveto (8045     panic\("fork"\);) show
0 96 moveto (8046   return pid;) show
0 84 moveto (8047 }) show
0 72 moveto (8048 ) show
0 60 moveto (8049 ) show
0 24 moveto (Sheet 80) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sh.c  Page 5) show
0 648 moveto (8050 // Constructors) show
0 636 moveto (8051 ) show
0 624 moveto (8052 struct cmd*) show
0 612 moveto (8053 execcmd\(void\)) show
0 600 moveto (8054 {) show
0 588 moveto (8055   struct execcmd *cmd;) show
0 576 moveto (8056 ) show
0 564 moveto (8057   cmd = malloc\(sizeof\(*cmd\)\);) show
0 552 moveto (8058   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 540 moveto (8059   cmd->type = EXEC;) show
0 528 moveto (8060   return \(struct cmd*\)cmd;) show
0 516 moveto (8061 }) show
0 504 moveto (8062 ) show
0 492 moveto (8063 struct cmd*) show
0 480 moveto (8064 redircmd\(struct cmd *subcmd, char *file, char *efile, int mode, int fd\)) show
0 468 moveto (8065 {) show
0 456 moveto (8066   struct redircmd *cmd;) show
0 444 moveto (8067 ) show
0 432 moveto (8068   cmd = malloc\(sizeof\(*cmd\)\);) show
0 420 moveto (8069   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 408 moveto (8070   cmd->type = REDIR;) show
0 396 moveto (8071   cmd->cmd = subcmd;) show
0 384 moveto (8072   cmd->file = file;) show
0 372 moveto (8073   cmd->efile = efile;) show
0 360 moveto (8074   cmd->mode = mode;) show
0 348 moveto (8075   cmd->fd = fd;) show
0 336 moveto (8076   return \(struct cmd*\)cmd;) show
0 324 moveto (8077 }) show
0 312 moveto (8078 ) show
0 300 moveto (8079 struct cmd*) show
0 288 moveto (8080 pipecmd\(struct cmd *left, struct cmd *right\)) show
0 276 moveto (8081 {) show
0 264 moveto (8082   struct pipecmd *cmd;) show
0 252 moveto (8083 ) show
0 240 moveto (8084   cmd = malloc\(sizeof\(*cmd\)\);) show
0 228 moveto (8085   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 216 moveto (8086   cmd->type = PIPE;) show
0 204 moveto (8087   cmd->left = left;) show
0 192 moveto (8088   cmd->right = right;) show
0 180 moveto (8089   return \(struct cmd*\)cmd;) show
0 168 moveto (8090 }) show
0 156 moveto (8091 ) show
0 144 moveto (8092 ) show
0 132 moveto (8093 ) show
0 120 moveto (8094 ) show
0 108 moveto (8095 ) show
0 96 moveto (8096 ) show
0 84 moveto (8097 ) show
0 72 moveto (8098 ) show
0 60 moveto (8099 ) show
0 24 moveto (Sheet 80) show
grestore
restore
showpage
%%Page: 89 89
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sh.c  Page 6) show
0 648 moveto (8100 struct cmd*) show
0 636 moveto (8101 listcmd\(struct cmd *left, struct cmd *right\)) show
0 624 moveto (8102 {) show
0 612 moveto (8103   struct listcmd *cmd;) show
0 600 moveto (8104 ) show
0 588 moveto (8105   cmd = malloc\(sizeof\(*cmd\)\);) show
0 576 moveto (8106   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 564 moveto (8107   cmd->type = LIST;) show
0 552 moveto (8108   cmd->left = left;) show
0 540 moveto (8109   cmd->right = right;) show
0 528 moveto (8110   return \(struct cmd*\)cmd;) show
0 516 moveto (8111 }) show
0 504 moveto (8112 ) show
0 492 moveto (8113 struct cmd*) show
0 480 moveto (8114 backcmd\(struct cmd *subcmd\)) show
0 468 moveto (8115 {) show
0 456 moveto (8116   struct backcmd *cmd;) show
0 444 moveto (8117 ) show
0 432 moveto (8118   cmd = malloc\(sizeof\(*cmd\)\);) show
0 420 moveto (8119   memset\(cmd, 0, sizeof\(*cmd\)\);) show
0 408 moveto (8120   cmd->type = BACK;) show
0 396 moveto (8121   cmd->cmd = subcmd;) show
0 384 moveto (8122   return \(struct cmd*\)cmd;) show
0 372 moveto (8123 }) show
0 360 moveto (8124 ) show
0 348 moveto (8125 ) show
0 336 moveto (8126 ) show
0 324 moveto (8127 ) show
0 312 moveto (8128 ) show
0 300 moveto (8129 ) show
0 288 moveto (8130 ) show
0 276 moveto (8131 ) show
0 264 moveto (8132 ) show
0 252 moveto (8133 ) show
0 240 moveto (8134 ) show
0 228 moveto (8135 ) show
0 216 moveto (8136 ) show
0 204 moveto (8137 ) show
0 192 moveto (8138 ) show
0 180 moveto (8139 ) show
0 168 moveto (8140 ) show
0 156 moveto (8141 ) show
0 144 moveto (8142 ) show
0 132 moveto (8143 ) show
0 120 moveto (8144 ) show
0 108 moveto (8145 ) show
0 96 moveto (8146 ) show
0 84 moveto (8147 ) show
0 72 moveto (8148 ) show
0 60 moveto (8149 ) show
0 24 moveto (Sheet 81) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sh.c  Page 7) show
0 648 moveto (8150 // Parsing) show
0 636 moveto (8151 ) show
0 624 moveto (8152 char whitespace[] = " \\t\\r\\n\\v";) show
0 612 moveto (8153 char symbols[] = "<|>&;\(\)";) show
0 600 moveto (8154 ) show
0 588 moveto (8155 int) show
0 576 moveto (8156 gettoken\(char **ps, char *es, char **q, char **eq\)) show
0 564 moveto (8157 {) show
0 552 moveto (8158   char *s;) show
0 540 moveto (8159   int ret;) show
0 528 moveto (8160 ) show
0 516 moveto (8161   s = *ps;) show
0 504 moveto (8162   while\(s < es && strchr\(whitespace, *s\)\)) show
0 492 moveto (8163     s++;) show
0 480 moveto (8164   if\(q\)) show
0 468 moveto (8165     *q = s;) show
0 456 moveto (8166   ret = *s;) show
0 444 moveto (8167   switch\(*s\){) show
0 432 moveto (8168   case 0:) show
0 420 moveto (8169     break;) show
0 408 moveto (8170   case '|':) show
0 396 moveto (8171   case '\(':) show
0 384 moveto (8172   case '\)':) show
0 372 moveto (8173   case ';':) show
0 360 moveto (8174   case '&':) show
0 348 moveto (8175   case '<':) show
0 336 moveto (8176     s++;) show
0 324 moveto (8177     break;) show
0 312 moveto (8178   case '>':) show
0 300 moveto (8179     s++;) show
0 288 moveto (8180     if\(*s == '>'\){) show
0 276 moveto (8181       ret = '+';) show
0 264 moveto (8182       s++;) show
0 252 moveto (8183     }) show
0 240 moveto (8184     break;) show
0 228 moveto (8185   default:) show
0 216 moveto (8186     ret = 'a';) show
0 204 moveto (8187     while\(s < es && !strchr\(whitespace, *s\) && !strchr\(symbols, *s\)\)) show
0 192 moveto (8188       s++;) show
0 180 moveto (8189     break;) show
0 168 moveto (8190   }) show
0 156 moveto (8191   if\(eq\)) show
0 144 moveto (8192     *eq = s;) show
0 132 moveto (8193 ) show
0 120 moveto (8194   while\(s < es && strchr\(whitespace, *s\)\)) show
0 108 moveto (8195     s++;) show
0 96 moveto (8196   *ps = s;) show
0 84 moveto (8197   return ret;) show
0 72 moveto (8198 }) show
0 60 moveto (8199 ) show
0 24 moveto (Sheet 81) show
grestore
restore
showpage
%%Page: 90 90
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sh.c  Page 8) show
0 648 moveto (8200 int) show
0 636 moveto (8201 peek\(char **ps, char *es, char *toks\)) show
0 624 moveto (8202 {) show
0 612 moveto (8203   char *s;) show
0 600 moveto (8204 ) show
0 588 moveto (8205   s = *ps;) show
0 576 moveto (8206   while\(s < es && strchr\(whitespace, *s\)\)) show
0 564 moveto (8207     s++;) show
0 552 moveto (8208   *ps = s;) show
0 540 moveto (8209   return *s && strchr\(toks, *s\);) show
0 528 moveto (8210 }) show
0 516 moveto (8211 ) show
0 504 moveto (8212 struct cmd *parseline\(char**, char*\);) show
0 492 moveto (8213 struct cmd *parsepipe\(char**, char*\);) show
0 480 moveto (8214 struct cmd *parseexec\(char**, char*\);) show
0 468 moveto (8215 struct cmd *nulterminate\(struct cmd*\);) show
0 456 moveto (8216 ) show
0 444 moveto (8217 struct cmd*) show
0 432 moveto (8218 parsecmd\(char *s\)) show
0 420 moveto (8219 {) show
0 408 moveto (8220   char *es;) show
0 396 moveto (8221   struct cmd *cmd;) show
0 384 moveto (8222 ) show
0 372 moveto (8223   es = s + strlen\(s\);) show
0 360 moveto (8224   cmd = parseline\(&s, es\);) show
0 348 moveto (8225   peek\(&s, es, ""\);) show
0 336 moveto (8226   if\(s != es\){) show
0 324 moveto (8227     printf\(2, "leftovers: %s\\n", s\);) show
0 312 moveto (8228     panic\("syntax"\);) show
0 300 moveto (8229   }) show
0 288 moveto (8230   nulterminate\(cmd\);) show
0 276 moveto (8231   return cmd;) show
0 264 moveto (8232 }) show
0 252 moveto (8233 ) show
0 240 moveto (8234 struct cmd*) show
0 228 moveto (8235 parseline\(char **ps, char *es\)) show
0 216 moveto (8236 {) show
0 204 moveto (8237   struct cmd *cmd;) show
0 192 moveto (8238 ) show
0 180 moveto (8239   cmd = parsepipe\(ps, es\);) show
0 168 moveto (8240   while\(peek\(ps, es, "&"\)\){) show
0 156 moveto (8241     gettoken\(ps, es, 0, 0\);) show
0 144 moveto (8242     cmd = backcmd\(cmd\);) show
0 132 moveto (8243   }) show
0 120 moveto (8244   if\(peek\(ps, es, ";"\)\){) show
0 108 moveto (8245     gettoken\(ps, es, 0, 0\);) show
0 96 moveto (8246     cmd = listcmd\(cmd, parseline\(ps, es\)\);) show
0 84 moveto (8247   }) show
0 72 moveto (8248   return cmd;) show
0 60 moveto (8249 }) show
0 24 moveto (Sheet 82) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sh.c  Page 9) show
0 648 moveto (8250 struct cmd*) show
0 636 moveto (8251 parsepipe\(char **ps, char *es\)) show
0 624 moveto (8252 {) show
0 612 moveto (8253   struct cmd *cmd;) show
0 600 moveto (8254 ) show
0 588 moveto (8255   cmd = parseexec\(ps, es\);) show
0 576 moveto (8256   if\(peek\(ps, es, "|"\)\){) show
0 564 moveto (8257     gettoken\(ps, es, 0, 0\);) show
0 552 moveto (8258     cmd = pipecmd\(cmd, parsepipe\(ps, es\)\);) show
0 540 moveto (8259   }) show
0 528 moveto (8260   return cmd;) show
0 516 moveto (8261 }) show
0 504 moveto (8262 ) show
0 492 moveto (8263 struct cmd*) show
0 480 moveto (8264 parseredirs\(struct cmd *cmd, char **ps, char *es\)) show
0 468 moveto (8265 {) show
0 456 moveto (8266   int tok;) show
0 444 moveto (8267   char *q, *eq;) show
0 432 moveto (8268 ) show
0 420 moveto (8269   while\(peek\(ps, es, "<>"\)\){) show
0 408 moveto (8270     tok = gettoken\(ps, es, 0, 0\);) show
0 396 moveto (8271     if\(gettoken\(ps, es, &q, &eq\) != 'a'\)) show
0 384 moveto (8272       panic\("missing file for redirection"\);) show
0 372 moveto (8273     switch\(tok\){) show
0 360 moveto (8274     case '<':) show
0 348 moveto (8275       cmd = redircmd\(cmd, q, eq, O_RDONLY, 0\);) show
0 336 moveto (8276       break;) show
0 324 moveto (8277     case '>':) show
0 312 moveto (8278       cmd = redircmd\(cmd, q, eq, O_WRONLY|O_CREATE, 1\);) show
0 300 moveto (8279       break;) show
0 288 moveto (8280     case '+':  // >>) show
0 276 moveto (8281       cmd = redircmd\(cmd, q, eq, O_WRONLY|O_CREATE, 1\);) show
0 264 moveto (8282       break;) show
0 252 moveto (8283     }) show
0 240 moveto (8284   }) show
0 228 moveto (8285   return cmd;) show
0 216 moveto (8286 }) show
0 204 moveto (8287 ) show
0 192 moveto (8288 ) show
0 180 moveto (8289 ) show
0 168 moveto (8290 ) show
0 156 moveto (8291 ) show
0 144 moveto (8292 ) show
0 132 moveto (8293 ) show
0 120 moveto (8294 ) show
0 108 moveto (8295 ) show
0 96 moveto (8296 ) show
0 84 moveto (8297 ) show
0 72 moveto (8298 ) show
0 60 moveto (8299 ) show
0 24 moveto (Sheet 82) show
grestore
restore
showpage
%%Page: 91 91
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sh.c  Page 10) show
0 648 moveto (8300 struct cmd*) show
0 636 moveto (8301 parseblock\(char **ps, char *es\)) show
0 624 moveto (8302 {) show
0 612 moveto (8303   struct cmd *cmd;) show
0 600 moveto (8304 ) show
0 588 moveto (8305   if\(!peek\(ps, es, "\("\)\)) show
0 576 moveto (8306     panic\("parseblock"\);) show
0 564 moveto (8307   gettoken\(ps, es, 0, 0\);) show
0 552 moveto (8308   cmd = parseline\(ps, es\);) show
0 540 moveto (8309   if\(!peek\(ps, es, "\)"\)\)) show
0 528 moveto (8310     panic\("syntax - missing \)"\);) show
0 516 moveto (8311   gettoken\(ps, es, 0, 0\);) show
0 504 moveto (8312   cmd = parseredirs\(cmd, ps, es\);) show
0 492 moveto (8313   return cmd;) show
0 480 moveto (8314 }) show
0 468 moveto (8315 ) show
0 456 moveto (8316 struct cmd*) show
0 444 moveto (8317 parseexec\(char **ps, char *es\)) show
0 432 moveto (8318 {) show
0 420 moveto (8319   char *q, *eq;) show
0 408 moveto (8320   int tok, argc;) show
0 396 moveto (8321   struct execcmd *cmd;) show
0 384 moveto (8322   struct cmd *ret;) show
0 372 moveto (8323 ) show
0 360 moveto (8324   if\(peek\(ps, es, "\("\)\)) show
0 348 moveto (8325     return parseblock\(ps, es\);) show
0 336 moveto (8326 ) show
0 324 moveto (8327   ret = execcmd\(\);) show
0 312 moveto (8328   cmd = \(struct execcmd*\)ret;) show
0 300 moveto (8329 ) show
0 288 moveto (8330   argc = 0;) show
0 276 moveto (8331   ret = parseredirs\(ret, ps, es\);) show
0 264 moveto (8332   while\(!peek\(ps, es, "|\)&;"\)\){) show
0 252 moveto (8333     if\(\(tok=gettoken\(ps, es, &q, &eq\)\) == 0\)) show
0 240 moveto (8334       break;) show
0 228 moveto (8335     if\(tok != 'a'\)) show
0 216 moveto (8336       panic\("syntax"\);) show
0 204 moveto (8337     cmd->argv[argc] = q;) show
0 192 moveto (8338     cmd->eargv[argc] = eq;) show
0 180 moveto (8339     argc++;) show
0 168 moveto (8340     if\(argc >= MAXARGS\)) show
0 156 moveto (8341       panic\("too many args"\);) show
0 144 moveto (8342     ret = parseredirs\(ret, ps, es\);) show
0 132 moveto (8343   }) show
0 120 moveto (8344   cmd->argv[argc] = 0;) show
0 108 moveto (8345   cmd->eargv[argc] = 0;) show
0 96 moveto (8346   return ret;) show
0 84 moveto (8347 }) show
0 72 moveto (8348 ) show
0 60 moveto (8349 ) show
0 24 moveto (Sheet 83) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/sh.c  Page 11) show
0 648 moveto (8350 // NUL-terminate all the counted strings.) show
0 636 moveto (8351 struct cmd*) show
0 624 moveto (8352 nulterminate\(struct cmd *cmd\)) show
0 612 moveto (8353 {) show
0 600 moveto (8354   int i;) show
0 588 moveto (8355   struct backcmd *bcmd;) show
0 576 moveto (8356   struct execcmd *ecmd;) show
0 564 moveto (8357   struct listcmd *lcmd;) show
0 552 moveto (8358   struct pipecmd *pcmd;) show
0 540 moveto (8359   struct redircmd *rcmd;) show
0 528 moveto (8360 ) show
0 516 moveto (8361   if\(cmd == 0\)) show
0 504 moveto (8362     return 0;) show
0 492 moveto (8363 ) show
0 480 moveto (8364   switch\(cmd->type\){) show
0 468 moveto (8365   case EXEC:) show
0 456 moveto (8366     ecmd = \(struct execcmd*\)cmd;) show
0 444 moveto (8367     for\(i=0; ecmd->argv[i]; i++\)) show
0 432 moveto (8368       *ecmd->eargv[i] = 0;) show
0 420 moveto (8369     break;) show
0 408 moveto (8370 ) show
0 396 moveto (8371   case REDIR:) show
0 384 moveto (8372     rcmd = \(struct redircmd*\)cmd;) show
0 372 moveto (8373     nulterminate\(rcmd->cmd\);) show
0 360 moveto (8374     *rcmd->efile = 0;) show
0 348 moveto (8375     break;) show
0 336 moveto (8376 ) show
0 324 moveto (8377   case PIPE:) show
0 312 moveto (8378     pcmd = \(struct pipecmd*\)cmd;) show
0 300 moveto (8379     nulterminate\(pcmd->left\);) show
0 288 moveto (8380     nulterminate\(pcmd->right\);) show
0 276 moveto (8381     break;) show
0 264 moveto (8382 ) show
0 252 moveto (8383   case LIST:) show
0 240 moveto (8384     lcmd = \(struct listcmd*\)cmd;) show
0 228 moveto (8385     nulterminate\(lcmd->left\);) show
0 216 moveto (8386     nulterminate\(lcmd->right\);) show
0 204 moveto (8387     break;) show
0 192 moveto (8388 ) show
0 180 moveto (8389   case BACK:) show
0 168 moveto (8390     bcmd = \(struct backcmd*\)cmd;) show
0 156 moveto (8391     nulterminate\(bcmd->cmd\);) show
0 144 moveto (8392     break;) show
0 132 moveto (8393   }) show
0 120 moveto (8394   return cmd;) show
0 108 moveto (8395 }) show
0 96 moveto (8396 ) show
0 84 moveto (8397 ) show
0 72 moveto (8398 ) show
0 60 moveto (8399 ) show
0 24 moveto (Sheet 83) show
grestore
restore
showpage
%%Page: 92 92
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/bootasm.S  Page 1) show
0 648 moveto (8400 #include "asm.h") show
0 636 moveto (8401 #include "memlayout.h") show
0 624 moveto (8402 #include "mmu.h") show
0 612 moveto (8403 ) show
0 600 moveto (8404 # Start the first CPU: switch to 32-bit protected mode, jump into C.) show
0 588 moveto (8405 # The BIOS loads this code from the first sector of the hard disk into) show
0 576 moveto (8406 # memory at physical address 0x7c00 and starts executing in real mode) show
0 564 moveto (8407 # with %cs=0 %ip=7c00.) show
0 552 moveto (8408 ) show
0 540 moveto (8409 .code16                       # Assemble for 16-bit mode) show
0 528 moveto (8410 .globl start) show
0 516 moveto (8411 start:) show
0 504 moveto (8412   cli                         # BIOS enabled interrupts; disable) show
0 492 moveto (8413 ) show
0 480 moveto (8414   # Zero data segment registers DS, ES, and SS.) show
0 468 moveto (8415   xorw    %ax,%ax             # Set %ax to zero) show
0 456 moveto (8416   movw    %ax,%ds             # -> Data Segment) show
0 444 moveto (8417   movw    %ax,%es             # -> Extra Segment) show
0 432 moveto (8418   movw    %ax,%ss             # -> Stack Segment) show
0 420 moveto (8419 ) show
0 408 moveto (8420   # Physical address line A20 is tied to zero so that the first PCs) show
0 396 moveto (8421   # with 2 MB would run software that assumed 1 MB.  Undo that.) show
0 384 moveto (8422 seta20.1:) show
0 372 moveto (8423   inb     $0x64,%al               # Wait for not busy) show
0 360 moveto (8424   testb   $0x2,%al) show
0 348 moveto (8425   jnz     seta20.1) show
0 336 moveto (8426 ) show
0 324 moveto (8427   movb    $0xd1,%al               # 0xd1 -> port 0x64) show
0 312 moveto (8428   outb    %al,$0x64) show
0 300 moveto (8429 ) show
0 288 moveto (8430 seta20.2:) show
0 276 moveto (8431   inb     $0x64,%al               # Wait for not busy) show
0 264 moveto (8432   testb   $0x2,%al) show
0 252 moveto (8433   jnz     seta20.2) show
0 240 moveto (8434 ) show
0 228 moveto (8435   movb    $0xdf,%al               # 0xdf -> port 0x60) show
0 216 moveto (8436   outb    %al,$0x60) show
0 204 moveto (8437 ) show
0 192 moveto (8438   # Switch from real to protected mode.  Use a bootstrap GDT that makes) show
0 180 moveto (8439   # virtual addresses map directly to physical addresses so that the) show
0 168 moveto (8440   # effective memory map doesn't change during the transition.) show
0 156 moveto (8441   lgdt    gdtdesc) show
0 144 moveto (8442   movl    %cr0, %eax) show
0 132 moveto (8443   orl     $CR0_PE, %eax) show
0 120 moveto (8444   movl    %eax, %cr0) show
0 108 moveto (8445 ) show
0 96 moveto (8446 ) show
0 84 moveto (8447 ) show
0 72 moveto (8448 ) show
0 60 moveto (8449 ) show
0 24 moveto (Sheet 84) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/bootasm.S  Page 2) show
0 648 moveto (8450   # Complete transition to 32-bit protected mode by using long jmp) show
0 636 moveto (8451   # to reload %cs and %eip.  The segment descriptors are set up with no) show
0 624 moveto (8452   # translation, so that the mapping is still the identity mapping.) show
0 612 moveto (8453   ljmp    $\(SEG_KCODE<<3\), $start32) show
0 600 moveto (8454 ) show
0 588 moveto (8455 .code32  # Tell assembler to generate 32-bit code now.) show
0 576 moveto (8456 start32:) show
0 564 moveto (8457   # Set up the protected-mode data segment registers) show
0 552 moveto (8458   movw    $\(SEG_KDATA<<3\), %ax    # Our data segment selector) show
0 540 moveto (8459   movw    %ax, %ds                # -> DS: Data Segment) show
0 528 moveto (8460   movw    %ax, %es                # -> ES: Extra Segment) show
0 516 moveto (8461   movw    %ax, %ss                # -> SS: Stack Segment) show
0 504 moveto (8462   movw    $0, %ax                 # Zero segments not ready for use) show
0 492 moveto (8463   movw    %ax, %fs                # -> FS) show
0 480 moveto (8464   movw    %ax, %gs                # -> GS) show
0 468 moveto (8465 ) show
0 456 moveto (8466   # Set up the stack pointer and call into C.) show
0 444 moveto (8467   movl    $start, %esp) show
0 432 moveto (8468   call    bootmain) show
0 420 moveto (8469 ) show
0 408 moveto (8470   # If bootmain returns \(it shouldn't\), trigger a Bochs) show
0 396 moveto (8471   # breakpoint if running under Bochs, then loop.) show
0 384 moveto (8472   movw    $0x8a00, %ax            # 0x8a00 -> port 0x8a00) show
0 372 moveto (8473   movw    %ax, %dx) show
0 360 moveto (8474   outw    %ax, %dx) show
0 348 moveto (8475   movw    $0x8ae0, %ax            # 0x8ae0 -> port 0x8a00) show
0 336 moveto (8476   outw    %ax, %dx) show
0 324 moveto (8477 spin:) show
0 312 moveto (8478   jmp     spin) show
0 300 moveto (8479 ) show
0 288 moveto (8480 # Bootstrap GDT) show
0 276 moveto (8481 .p2align 2                                # force 4 byte alignment) show
0 264 moveto (8482 gdt:) show
0 252 moveto (8483   SEG_NULLASM                             # null seg) show
0 240 moveto (8484   SEG_ASM\(STA_X|STA_R, 0x0, 0xffffffff\)   # code seg) show
0 228 moveto (8485   SEG_ASM\(STA_W, 0x0, 0xffffffff\)         # data seg) show
0 216 moveto (8486 ) show
0 204 moveto (8487 gdtdesc:) show
0 192 moveto (8488   .word   \(gdtdesc - gdt - 1\)             # sizeof\(gdt\) - 1) show
0 180 moveto (8489   .long   gdt                             # address gdt) show
0 168 moveto (8490 ) show
0 156 moveto (8491 ) show
0 144 moveto (8492 ) show
0 132 moveto (8493 ) show
0 120 moveto (8494 ) show
0 108 moveto (8495 ) show
0 96 moveto (8496 ) show
0 84 moveto (8497 ) show
0 72 moveto (8498 ) show
0 60 moveto (8499 ) show
0 24 moveto (Sheet 84) show
grestore
restore
showpage
%%Page: 93 93
save
gsave
18 742 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/bootmain.c  Page 1) show
0 648 moveto (8500 // Boot loader.) show
0 636 moveto (8501 //) show
0 624 moveto (8502 // Part of the boot sector, along with bootasm.S, which calls bootmain\(\).) show
0 612 moveto (8503 // bootasm.S has put the processor into protected 32-bit mode.) show
0 600 moveto (8504 // bootmain\(\) loads an ELF kernel image from the disk starting at) show
0 588 moveto (8505 // sector 1 and then jumps to the kernel entry routine.) show
0 576 moveto (8506 ) show
0 564 moveto (8507 #include "types.h") show
0 552 moveto (8508 #include "elf.h") show
0 540 moveto (8509 #include "x86.h") show
0 528 moveto (8510 #include "memlayout.h") show
0 516 moveto (8511 ) show
0 504 moveto (8512 #define SECTSIZE  512) show
0 492 moveto (8513 ) show
0 480 moveto (8514 void readseg\(uchar*, uint, uint\);) show
0 468 moveto (8515 ) show
0 456 moveto (8516 void) show
0 444 moveto (8517 bootmain\(void\)) show
0 432 moveto (8518 {) show
0 420 moveto (8519   struct elfhdr *elf;) show
0 408 moveto (8520   struct proghdr *ph, *eph;) show
0 396 moveto (8521   void \(*entry\)\(void\);) show
0 384 moveto (8522   uchar* pa;) show
0 372 moveto (8523 ) show
0 360 moveto (8524   elf = \(struct elfhdr*\)0x10000;  // scratch space) show
0 348 moveto (8525 ) show
0 336 moveto (8526   // Read 1st page off disk) show
0 324 moveto (8527   readseg\(\(uchar*\)elf, 4096, 0\);) show
0 312 moveto (8528 ) show
0 300 moveto (8529   // Is this an ELF executable?) show
0 288 moveto (8530   if\(elf->magic != ELF_MAGIC\)) show
0 276 moveto (8531     return;  // let bootasm.S handle error) show
0 264 moveto (8532 ) show
0 252 moveto (8533   // Load each program segment \(ignores ph flags\).) show
0 240 moveto (8534   ph = \(struct proghdr*\)\(\(uchar*\)elf + elf->phoff\);) show
0 228 moveto (8535   eph = ph + elf->phnum;) show
0 216 moveto (8536   for\(; ph < eph; ph++\){) show
0 204 moveto (8537     pa = \(uchar*\)ph->paddr;) show
0 192 moveto (8538     readseg\(pa, ph->filesz, ph->off\);) show
0 180 moveto (8539     if\(ph->memsz > ph->filesz\)) show
0 168 moveto (8540       stosb\(pa + ph->filesz, 0, ph->memsz - ph->filesz\);) show
0 156 moveto (8541   }) show
0 144 moveto (8542 ) show
0 132 moveto (8543   // Call the entry point from the ELF header.) show
0 120 moveto (8544   // Does not return!) show
0 108 moveto (8545   entry = \(void\(*\)\(void\)\)\(elf->entry\);) show
0 96 moveto (8546   entry\(\);) show
0 84 moveto (8547 }) show
0 72 moveto (8548 ) show
0 60 moveto (8549 ) show
0 24 moveto (Sheet 85) show
grestore
gsave
18 396 translate
-90 rotate
0 0 moveto 0 576 rlineto 346 0 rlineto 0 -576 rlineto closepath clip
346 80 mp_a_x mul div 576 720 div scale
4 7 translate 338 346 div 712 720 div scale
textfont setfont
mp_a_x 684 moveto (4月  9 12:33 2013  xv6/bootmain.c  Page 2) show
0 648 moveto (8550 void) show
0 636 moveto (8551 waitdisk\(void\)) show
0 624 moveto (8552 {) show
0 612 moveto (8553   // Wait for disk ready.) show
0 600 moveto (8554   while\(\(inb\(0x1F7\) & 0xC0\) != 0x40\)) show
0 588 moveto (8555     ;) show
0 576 moveto (8556 }) show
0 564 moveto (8557 ) show
0 552 moveto (8558 // Read a single sector at offset into dst.) show
0 540 moveto (8559 void) show
0 528 moveto (8560 readsect\(void *dst, uint offset\)) show
0 516 moveto (8561 {) show
0 504 moveto (8562   // Issue command.) show
0 492 moveto (8563   waitdisk\(\);) show
0 480 moveto (8564   outb\(0x1F2, 1\);   // count = 1) show
0 468 moveto (8565   outb\(0x1F3, offset\);) show
0 456 moveto (8566   outb\(0x1F4, offset >> 8\);) show
0 444 moveto (8567   outb\(0x1F5, offset >> 16\);) show
0 432 moveto (8568   outb\(0x1F6, \(offset >> 24\) | 0xE0\);) show
0 420 moveto (8569   outb\(0x1F7, 0x20\);  // cmd 0x20 - read sectors) show
0 408 moveto (8570 ) show
0 396 moveto (8571   // Read data.) show
0 384 moveto (8572   waitdisk\(\);) show
0 372 moveto (8573   insl\(0x1F0, dst, SECTSIZE/4\);) show
0 360 moveto (8574 }) show
0 348 moveto (8575 ) show
0 336 moveto (8576 // Read 'count' bytes at 'offset' from kernel into physical address 'pa'.) show
0 324 moveto (8577 // Might copy more than asked.) show
0 312 moveto (8578 void) show
0 300 moveto (8579 readseg\(uchar* pa, uint count, uint offset\)) show
0 288 moveto (8580 {) show
0 276 moveto (8581   uchar* epa;) show
0 264 moveto (8582 ) show
0 252 moveto (8583   epa = pa + count;) show
0 240 moveto (8584 ) show
0 228 moveto (8585   // Round down to sector boundary.) show
0 216 moveto (8586   pa -= offset % SECTSIZE;) show
0 204 moveto (8587 ) show
0 192 moveto (8588   // Translate from bytes to sectors; kernel starts at sector 1.) show
0 180 moveto (8589   offset = \(offset / SECTSIZE\) + 1;) show
0 168 moveto (8590 ) show
0 156 moveto (8591   // If this is too slow, we could read lots of sectors at a time.) show
0 144 moveto (8592   // We'd write more to memory than asked, but it doesn't matter --) show
0 132 moveto (8593   // we load in increasing order.) show
0 120 moveto (8594   for\(; pa < epa; pa += SECTSIZE, offset++\)) show
0 108 moveto (8595     readsect\(pa, offset\);) show
0 96 moveto (8596 }) show
0 84 moveto (8597 ) show
0 72 moveto (8598 ) show
0 60 moveto (8599 ) show
0 24 moveto (Sheet 85) show
grestore
restore
showpage
%%Trailer
%%Pages: 94
